{"version":3,"file":"e256ff0d5a0be2a094ce.chunk.js","mappings":"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","sources":["webpack://superset/./src/features/tags/TagModal.tsx","webpack://superset/./src/pages/Tags/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { ChangeEvent, useState, useEffect } from 'react';\nimport rison from 'rison';\nimport Modal from 'src/components/Modal';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport { FormLabel } from 'src/components/Form';\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport { Input } from 'antd';\nimport { Divider } from 'src/components';\nimport Button from 'src/components/Button';\nimport { Tag } from 'src/views/CRUD/types';\nimport { fetchObjects } from 'src/features/tags/tags';\n\nconst StyledModalBody = styled.div`\n  .ant-select-dropdown {\n    max-height: ${({ theme }) => theme.gridUnit * 40}px;\n  }\n  .tag-input {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  }\n`;\n\nexport interface TaggableResourceOption {\n  label: string;\n  value: number;\n  key: number;\n}\n\nexport enum TaggableResources {\n  Chart = 'chart',\n  Dashboard = 'dashboard',\n  SavedQuery = 'query',\n}\n\ninterface TagModalProps {\n  onHide: () => void;\n  refreshData: () => void;\n  addSuccessToast: (msg: string) => void;\n  addDangerToast: (msg: string) => void;\n  show: boolean;\n  clearOnHide?: boolean;\n  editTag?: Tag | null;\n}\n\nconst TagModal: React.FC<TagModalProps> = ({\n  show,\n  onHide,\n  editTag,\n  refreshData,\n  addSuccessToast,\n  addDangerToast,\n  clearOnHide = false,\n}) => {\n  const [dashboardsToTag, setDashboardsToTag] = useState<\n    TaggableResourceOption[]\n  >([]);\n  const [chartsToTag, setChartsToTag] = useState<TaggableResourceOption[]>([]);\n  const [savedQueriesToTag, setSavedQueriesToTag] = useState<\n    TaggableResourceOption[]\n  >([]);\n\n  const [tagName, setTagName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  const isEditMode = !!editTag;\n  const modalTitle = isEditMode ? 'Edit Tag' : 'Create Tag';\n\n  const clearResources = () => {\n    setDashboardsToTag([]);\n    setChartsToTag([]);\n    setSavedQueriesToTag([]);\n  };\n\n  useEffect(() => {\n    const resourceMap: { [key: string]: TaggableResourceOption[] } = {\n      [TaggableResources.Dashboard]: [],\n      [TaggableResources.Chart]: [],\n      [TaggableResources.SavedQuery]: [],\n    };\n\n    const updateResourceOptions = ({ id, name, type }: Tag) => {\n      const resourceOptions = resourceMap[type];\n      if (resourceOptions) {\n        resourceOptions.push({\n          value: id,\n          label: name,\n          key: id,\n        });\n      }\n    };\n    clearResources();\n    if (isEditMode) {\n      fetchObjects(\n        { tags: editTag.name, types: null },\n        (data: Tag[]) => {\n          data.forEach(updateResourceOptions);\n          setDashboardsToTag(resourceMap[TaggableResources.Dashboard]);\n          setChartsToTag(resourceMap[TaggableResources.Chart]);\n          setSavedQueriesToTag(resourceMap[TaggableResources.SavedQuery]);\n        },\n        (error: Response) => {\n          addDangerToast('Error Fetching Tagged Objects');\n        },\n      );\n      setTagName(editTag.name);\n      setDescription(editTag.description);\n    }\n  }, [editTag]);\n\n  const loadData = async (\n    search: string,\n    page: number,\n    pageSize: number,\n    columns: string[],\n    filterColumn: string,\n    orderColumn: string,\n    endpoint: string,\n  ) => {\n    const queryParams = rison.encode({\n      columns,\n      filters: [\n        {\n          col: filterColumn,\n          opr: 'ct',\n          value: search,\n        },\n      ],\n      page,\n      order_column: orderColumn,\n    });\n\n    const { json } = await SupersetClient.get({\n      endpoint: `/api/v1/${endpoint}/?q=${queryParams}`,\n    });\n    const { result, count } = json;\n\n    return {\n      data: result.map((item: { id: number }) => ({\n        value: item.id,\n        label: item[filterColumn],\n      })),\n      totalCount: count,\n    };\n  };\n\n  const loadCharts = async (search: string, page: number, pageSize: number) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'slice_name'],\n      'slice_name',\n      'slice_name',\n      'chart',\n    );\n\n  const loadDashboards = async (\n    search: string,\n    page: number,\n    pageSize: number,\n  ) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'dashboard_title'],\n      'dashboard_title',\n      'dashboard_title',\n      'dashboard',\n    );\n\n  const loadQueries = async (search: string, page: number, pageSize: number) =>\n    loadData(\n      search,\n      page,\n      pageSize,\n      ['id', 'label'],\n      'label',\n      'label',\n      'saved_query',\n    );\n\n  const handleOptionChange = (resource: TaggableResources, data: any) => {\n    if (resource === TaggableResources.Dashboard) setDashboardsToTag(data);\n    else if (resource === TaggableResources.Chart) setChartsToTag(data);\n    else if (resource === TaggableResources.SavedQuery)\n      setSavedQueriesToTag(data);\n  };\n\n  const handleTagNameChange = (ev: ChangeEvent<HTMLInputElement>) =>\n    setTagName(ev.target.value);\n  const handleDescriptionChange = (ev: ChangeEvent<HTMLInputElement>) =>\n    setDescription(ev.target.value);\n\n  const onSave = () => {\n    const dashboards = dashboardsToTag.map(dash => ['dashboard', dash.value]);\n    const charts = chartsToTag.map(chart => ['chart', chart.value]);\n    const savedQueries = savedQueriesToTag.map(q => ['query', q.value]);\n\n    if (isEditMode) {\n      SupersetClient.put({\n        endpoint: `/api/v1/tag/${editTag.id}`,\n        jsonPayload: {\n          description,\n          name: tagName,\n          objects_to_tag: [...dashboards, ...charts, ...savedQueries],\n        },\n      }).then(({ json = {} }) => {\n        refreshData();\n        addSuccessToast(t('Tag updated'));\n      });\n    } else {\n      SupersetClient.post({\n        endpoint: `/api/v1/tag/`,\n        jsonPayload: {\n          description,\n          name: tagName,\n          objects_to_tag: [...dashboards, ...charts, ...savedQueries],\n        },\n      }).then(({ json = {} }) => {\n        refreshData();\n        addSuccessToast(t('Tag created'));\n      });\n    }\n    onHide();\n  };\n\n  return (\n    <Modal\n      title={modalTitle}\n      onHide={() => {\n        if (clearOnHide) {\n          setTagName('');\n          setDescription('');\n          setDashboardsToTag([]);\n          setChartsToTag([]);\n          setSavedQueriesToTag([]);\n        }\n        onHide();\n      }}\n      show={show}\n      footer={\n        <div>\n          <Button\n            data-test=\"modal-save-dashboard-button\"\n            buttonStyle=\"secondary\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            data-test=\"modal-save-dashboard-button\"\n            buttonStyle=\"primary\"\n            onClick={onSave}\n          >\n            {t('Save')}\n          </Button>\n        </div>\n      }\n    >\n      <StyledModalBody>\n        <FormLabel>{t('Tag name')}</FormLabel>\n        <Input\n          className=\"tag-input\"\n          onChange={handleTagNameChange}\n          placeholder={t('Name of your tag')}\n          value={tagName}\n        />\n        <FormLabel>{t('Description')}</FormLabel>\n        <Input\n          className=\"tag-input\"\n          onChange={handleDescriptionChange}\n          placeholder={t('Add description of your tag')}\n          value={description}\n        />\n        <Divider />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select dashboards')}\n          mode=\"multiple\"\n          name=\"dashboards\"\n          // @ts-ignore\n          value={dashboardsToTag}\n          options={loadDashboards}\n          onChange={value =>\n            handleOptionChange(TaggableResources.Dashboard, value)\n          }\n          header={<FormLabel>{t('Dashboards')}</FormLabel>}\n          allowClear\n        />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select charts')}\n          mode=\"multiple\"\n          name=\"charts\"\n          // @ts-ignore\n          value={chartsToTag}\n          options={loadCharts}\n          onChange={value => handleOptionChange(TaggableResources.Chart, value)}\n          header={<FormLabel>{t('Charts')}</FormLabel>}\n          allowClear\n        />\n        <AsyncSelect\n          className=\"tag-input\"\n          ariaLabel={t('Select saved queries')}\n          mode=\"multiple\"\n          name=\"savedQueries\"\n          // @ts-ignore\n          value={savedQueriesToTag}\n          options={loadQueries}\n          onChange={value =>\n            handleOptionChange(TaggableResources.SavedQuery, value)\n          }\n          header={<FormLabel>{t('Saved queries')}</FormLabel>}\n          allowClear\n        />\n      </StyledModalBody>\n    </Modal>\n  );\n};\n\nexport default TagModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useState } from 'react';\nimport { isFeatureEnabled, FeatureFlag, t } from '@superset-ui/core';\nimport {\n  createFetchRelated,\n  createErrorHandler,\n  Actions,\n} from 'src/views/CRUD/utils';\nimport { useListViewResource, useFavoriteStatus } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FacePile from 'src/components/FacePile';\nimport { Link } from 'react-router-dom';\nimport { deleteTags } from 'src/features/tags/tags';\nimport { Tag as AntdTag } from 'antd';\nimport { Tag } from 'src/views/CRUD/types';\nimport TagModal from 'src/features/tags/TagModal';\nimport FaveStar from 'src/components/FaveStar';\n\nconst PAGE_SIZE = 25;\n\ninterface TagListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction TagList(props: TagListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const {\n    state: {\n      loading,\n      resourceCount: tagCount,\n      resourceCollection: tags,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Tag>('tag', t('tag'), addDangerToast);\n\n  const [showTagModal, setShowTagModal] = useState<boolean>(false);\n  const [tagToEdit, setTagToEdit] = useState<Tag | null>(null);\n  const tagIds = useMemo(() => tags.map(c => c.id), [tags]);\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'tag',\n    tagIds,\n    addDangerToast,\n  );\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userKey = dangerouslyGetItemDoNotUse(userId?.toString(), null);\n\n  const canDelete = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  function handleTagsDelete(\n    tags: Tag[],\n    callback: (text: string) => void,\n    error: (text: string) => void,\n  ) {\n    // TODO what permissions need to be checked here?\n    deleteTags(tags, callback, error);\n    refreshData();\n  }\n\n  const handleTagEdit = (tag: Tag) => {\n    setShowTagModal(true);\n    setTagToEdit(tag);\n  };\n\n  const emptyState = {\n    title: t('No Tags created'),\n    image: 'dashboard.svg',\n    description:\n      'Create a new tag and assign it to existing entities like charts or dashboards',\n    buttonAction: () => setShowTagModal(true),\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" data-test=\"add-rule-empty\" />{' '}\n        {'Create a new Tag'}{' '}\n      </>\n    ),\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) =>\n          userId && (\n            <FaveStar\n              itemId={id}\n              saveFaveStar={saveFavoriteStatus}\n              isStarred={favoriteStatus[id]}\n            />\n          ),\n        Header: '',\n        id: 'id',\n        disableSortBy: true,\n        size: 'xs',\n        hidden: !userId,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { id, name: tagName },\n          },\n        }: any) => (\n          <AntdTag>\n            <Link to={`/superset/all_entities/?id=${id}`}>{tagName}</Link>\n          </AntdTag>\n        ),\n        Header: t('Name'),\n        accessor: 'name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => <span className=\"no-wrap\">{changedOn}</span>,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) => (createdBy ? <FacePile users={[createdBy]} /> : ''),\n        Header: t('Created by'),\n        accessor: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleTagsDelete([original], addSuccessToast, addDangerToast);\n          const handleEdit = () => handleTagEdit(original);\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.dashboard_title}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash data-test=\"dashboard-list-trash-icon\" />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleEdit}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canDelete,\n        disableSortBy: true,\n      },\n    ],\n    [userId, canDelete, refreshData, addSuccessToast, addDangerToast],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Created by'),\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'tag',\n          'created_by',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching tag created by values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Search'),\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.contains,\n      },\n    ] as Filters;\n    return filters_list;\n  }, [addDangerToast, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n\n  // render new 'New Tag' btn\n  subMenuButtons.push({\n    name: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Tag')}\n      </>\n    ),\n    buttonStyle: 'primary',\n    'data-test': 'bulk-select',\n    onClick: () => setShowTagModal(true),\n  });\n\n  const handleBulkDelete = (tagsToDelete: Tag[]) =>\n    handleTagsDelete(tagsToDelete, addSuccessToast, addDangerToast);\n\n  return (\n    <>\n      <TagModal\n        show={showTagModal}\n        onHide={() => {\n          setShowTagModal(false);\n          setTagToEdit(null);\n        }}\n        editTag={tagToEdit}\n        refreshData={refreshData}\n        addSuccessToast={addSuccessToast}\n        addDangerToast={addDangerToast}\n        clearOnHide\n      />\n      <SubMenu name={t('Tags')} buttons={subMenuButtons} />\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected tags?')}\n        onConfirm={handleBulkDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          return (\n            <>\n              <ListView<Tag>\n                bulkActions={bulkActions}\n                bulkSelectEnabled={bulkSelectEnabled}\n                cardSortSelectOptions={sortTypes}\n                className=\"tags-list-view\"\n                columns={columns}\n                count={tagCount}\n                data={tags.filter(tag => !tag.name.includes(':'))}\n                disableBulkSelect={toggleBulkSelect}\n                refreshData={refreshData}\n                emptyState={emptyState}\n                fetchData={fetchData}\n                filters={filters}\n                initialSort={initialSort}\n                loading={loading}\n                addDangerToast={addDangerToast}\n                addSuccessToast={addSuccessToast}\n                pageSize={PAGE_SIZE}\n                showThumbnails={\n                  userKey\n                    ? userKey.thumbnails\n                    : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n                }\n                defaultViewMode={\n                  isFeatureEnabled(FeatureFlag.LISTVIEWS_DEFAULT_CARD_VIEW)\n                    ? 'card'\n                    : 'table'\n                }\n              />\n            </>\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(TagList);\n"],"names":["StyledModalBody","styled","div","_ref","theme","gridUnit","_ref2","TaggableResources","_ref3","show","onHide","editTag","refreshData","addSuccessToast","addDangerToast","clearOnHide","dashboardsToTag","setDashboardsToTag","useState","chartsToTag","setChartsToTag","savedQueriesToTag","setSavedQueriesToTag","tagName","setTagName","description","setDescription","isEditMode","modalTitle","useEffect","resourceMap","Dashboard","Chart","SavedQuery","updateResourceOptions","_ref4","id","name","type","resourceOptions","push","value","label","key","fetchObjects","tags","types","data","forEach","error","loadData","async","search","page","pageSize","columns","filterColumn","orderColumn","endpoint","queryParams","rison","filters","col","opr","order_column","json","SupersetClient","get","result","count","map","item","totalCount","handleOptionChange","resource","___EmotionJSX","Modal","title","footer","Button","buttonStyle","onClick","t","onSave","dashboards","dash","charts","chart","savedQueries","q","put","jsonPayload","objects_to_tag","then","_ref5","post","_ref6","FormLabel","Input","className","onChange","ev","target","placeholder","Divider","AsyncSelect","ariaLabel","mode","options","header","allowClear","withToasts","props","user","userId","state","loading","resourceCount","tagCount","resourceCollection","bulkSelectEnabled","hasPerm","fetchData","toggleBulkSelect","useListViewResource","showTagModal","setShowTagModal","tagToEdit","setTagToEdit","tagIds","useMemo","c","saveFavoriteStatus","favoriteStatus","useFavoriteStatus","userKey","dangerouslyGetItemDoNotUse","toString","canDelete","canEdit","initialSort","desc","handleTagsDelete","callback","deleteTags","emptyState","image","buttonAction","buttonText","React","Cell","row","original","FaveStar","itemId","saveFaveStar","isStarred","Header","disableSortBy","size","hidden","AntdTag","Link","to","accessor","changed_on_delta_humanized","changedOn","created_by","createdBy","FacePile","users","Actions","ConfirmStatusChange","dashboard_title","onConfirm","handleDelete","confirmDelete","Tooltip","placement","role","tabIndex","Icons","Trash","handleEdit","handleTagEdit","tag","EditAlt","input","operator","FilterOperator","relationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","contains","sortTypes","subMenuButtons","TagModal","SubMenu","buttons","tagsToDelete","bulkActions","onSelect","ListView","cardSortSelectOptions","filter","includes","disableBulkSelect","showThumbnails","thumbnails","isFeatureEnabled","FeatureFlag","THUMBNAILS","defaultViewMode","LISTVIEWS_DEFAULT_CARD_VIEW"],"sourceRoot":""}