{"version":3,"file":"7075eca1dac56d086470.chunk.js","mappings":"mGAAA,IAAIA,EAAe,EAAQ,OACvBC,EAAW,EAAQ,OA6BvBC,EAAOC,QAJP,SAAgBC,EAAOC,GACrB,OAAQD,GAASA,EAAME,OAAUL,EAASG,EAAOJ,EAAaK,EAAU,IAAM,EAChF,C,+DCCA,MAwFA,EAxFkCE,CAChCC,EACAC,KACE,IAAAC,EAAAC,EACF,MAAOC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,IACpDC,EAAmBC,IAAwBF,EAAAA,EAAAA,WAAS,GAErDG,GAAwBC,EAAAA,EAAAA,QAAO,CACnCC,YAAa,EACbC,mBAAoB,EACpBC,aAAc,IA2EhB,OAxEAC,EAAAA,EAAAA,kBAAgB,KAAK,IAAAC,EACnB,MAAMC,EAAiBhB,EAAWiB,QAC5BC,EAAwB,MAAPjB,OAAO,EAAPA,EAASgB,QAEhC,IAAKD,EACH,OAGF,MAAM,YAAEL,EAAW,YAAEQ,EAAW,WAAEC,GAAeJ,EAU3CK,EAAqBZ,EAAsBQ,QAC3CL,GAAiD,OAA5BG,EAAAC,EAAeM,oBAAa,EAA5BP,EAA8BI,cAAe,EAClEN,GAA6B,MAAdK,OAAc,EAAdA,EAAgBK,cAAe,EAOpD,GANAd,EAAsBQ,QAAU,CAC9BN,cACAC,qBACAC,gBAIAQ,EAAmBT,qBAAuBA,GAC1CS,EAAmBV,cAAgBA,GACnCU,EAAmBR,eAAiBA,EAKtC,GAAIF,EAAcQ,EAAa,CAE7B,MAAMK,EAAkB,EAClBC,GAAyB,MAAdP,OAAc,EAAdA,EAAgBK,cAAe,EAC1CG,EAAWP,EAAcK,EACzBG,EAAgBP,EAAWtB,OAEjC,IAAI8B,EAAQ,EACRC,EAAiB,EACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAeG,GAAK,EAEfJ,EAAWF,EAAkBI,EAAQH,GAGtC,IACpBI,GAAkB,GAEpBD,GAPmBR,EAAWU,GAAmBP,YAU/CI,EAAgB,GAAKE,GACvBrB,GAAqB,GACrBH,EAAqBwB,KAErBrB,GAAqB,GACrBH,EAAqB,G,MAGvBG,GAAqB,GACrBH,EAAqB,E,GAEtB,CACiB,OADjBH,EACDF,EAAWiB,cAAO,EAAlBf,EAAoBqB,YACF,OADapB,EAC/BH,EAAWiB,cAAO,EAAlBd,EAAoBgB,YACpBnB,IAGK,CAACI,EAAmBG,EAAkB,C,sJCrF/C,MAAMwB,EAAgBC,EAAAA,GAAOC,GAAG;;WAErBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,UAAUC,IAAI;eACtCC,IAAA,IAAC,MAAEJ,GAAOI,EAAA,OAAKJ,EAAMK,WAAWC,MAAMC,CAAC;EAGhDC,EAAuBX,EAAAA,GAAOC,GAAG;oBACnBW,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAsB,EAAjBT,EAAMU,QAAY;iBACpCC,IAAA,IAAC,MAAEX,GAAOW,EAAA,OAAsB,EAAjBX,EAAMU,QAAY;;;cAGpCE,IAAA,IAAC,MAAEZ,GAAOY,EAAA,OAAKZ,EAAMU,QAAQ;;;;;;;;qBAQtBG,IAAA,IAAC,MAAEb,GAAOa,EAAA,OAAsB,EAAjBb,EAAMU,QAAY;;;;;;;;;sBAShCI,IAAA,IAAC,MAAEd,GAAOc,EAAA,OAAsB,EAAjBd,EAAMU,QAAY;;;;kBAIrCK,IAAA,IAAC,MAAEf,GAAOe,EAAA,OAAKf,EAAMU,QAAQ;;;;;;;;;;;;;;;;aAgBlCM,IAAA,IAAC,MAAEhB,GAAOgB,EAAA,OAAKhB,EAAMC,OAAOC,UAAUe,MAAM;;;;;;eAM1CC,IAAA,IAAC,MAAElB,GAAOkB,EAAA,OAAsB,IAAjBlB,EAAMU,QAAc;QAC1CS,IAAA,IAAC,MAAEnB,GAAOmB,EAAA,OAAsB,EAAjBnB,EAAMU,QAAY;;wBAEjBU,IAAA,IAAC,MAAEpB,GAAOoB,EAAA,OAAKpB,EAAMC,OAAOC,UAAUmB,MAAM;qBAC/CC,IAAA,IAAC,MAAEtB,GAAOsB,EAAA,OAAKtB,EAAMU,QAAQ;;;;;;;;sBAQ5Ba,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OAAsB,EAAjBvB,EAAMU,QAAY;;;EAiXvD,EAtVqEc,IAgBhE,IAhBiE,aACpEC,EAAY,cACZC,EAAa,uBACbC,EAAsB,wBACtBC,EAAuB,cACvBC,EAAa,KACbC,EAAI,OACJC,EAAM,eACNC,EAAiB,GAAE,kBACnBC,EAAoBA,SAAQ,wBAC5BC,EAA0B,GAAE,2BAC5BC,EAA6BA,SAAQ,0BACrCC,EAA4B,GAAE,6BAC9BC,EAA+BA,SAAQ,kCACvCC,EAAoC,GAAE,qCACtCC,EAAuCA,UACxCf,EACC,MAAOgB,EAAUC,IAAetE,EAAAA,EAAAA,WAAkB,IAC3CuE,EAAWC,IAAgBxE,EAAAA,EAAAA,UAAiC,CAAC,IAC7DyE,EAAuBC,IAC5B1E,EAAAA,EAAAA,WAAkB,IACb2E,EAAoBC,IAAyB5E,EAAAA,EAAAA,WAAkB,IAC/D6E,EAAUC,IAAe9E,EAAAA,EAAAA,UAAuB,KAChD+E,EAAgBC,IAAqBhF,EAAAA,EAAAA,WAAkB,IACvDiF,EAAcC,IAAmBlF,EAAAA,EAAAA,aACjCmF,EAAoBC,IAAyBpF,EAAAA,EAAAA,UAElD,CAAC,IACIqF,EAAsBC,IAA2BtF,EAAAA,EAAAA,UAEtD,CAAC,IACIuF,EAA8BC,IACnCxF,EAAAA,EAAAA,UAAiC,CAAC,GAE9ByF,EAAaA,KACjBX,EAAY,IACZhB,EAAkB,IAClBU,EAAa,CAAC,GACdE,GAAyB,GACzBE,GAAsB,GACtBI,GAAkB,GAClBE,EAAgB,IAChBlB,EAA2B,IAC3BE,EAA6B,IAC7BE,EAAqC,IACrCgB,EAAsB,CAAC,GACvBE,EAAwB,CAAC,GACzBE,EAAgC,CAAC,EAAE,GAQnCE,OAAO,cACLC,EAAa,gBACbC,EAAe,kBACfC,EAAiB,oBACjBC,EAAmB,4BACnBC,GACD,eACDC,IACEC,EAAAA,EAAAA,IAAkB3C,EAAcC,GAbZ2C,IACtBhB,EAAgBgB,EAAI,KActBC,EAAAA,EAAAA,YAAU,KACRrC,EAAkB8B,GACdA,EAAgBpG,OAAS,GAC3BwF,GAAkB,E,GAEnB,CAACY,EAAiB9B,KAErBqC,EAAAA,EAAAA,YAAU,KACRzB,EAAyBiB,EAAcnG,OAAS,GAC5CmG,EAAcnG,OAAS,GACzBwF,GAAkB,E,GAEnB,CAACW,EAAejB,KAEnByB,EAAAA,EAAAA,YAAU,KACRnC,EAA2B6B,GACvBA,EAAkBrG,OAAS,GAC7BwF,GAAkB,E,GAEnB,CAACa,EAAmB7B,KAEvBmC,EAAAA,EAAAA,YAAU,KACRjC,EAA6B4B,GACzBA,EAAoBtG,OAAS,GAC/BwF,GAAkB,E,GAEnB,CAACc,EAAqB5B,KAEzBiC,EAAAA,EAAAA,YAAU,KACR/B,EAAqC2B,GACjCA,EAA4BvG,OAAS,GACvCwF,GAAkB,E,GAEnB,CAACe,EAA6B3B,IAkMjC,OAJIC,GAAYV,GACdW,GAAY,IAIZ8B,EAAAA,EAAAA,IAACC,EAAAA,QAAK,CACJC,KAAK,QACLC,UAAU,qBACVC,qBACsB,IAApB3B,EAASrF,QACRiF,IAA0BE,GAC3BI,EAEF0B,uBAlMaC,KAAK,IAAAC,GACH,OAAXA,EAAA9B,EAAS,SAAE,EAAX8B,EAAaC,yBAAyBC,OAI5C7B,GAAkB,GAClBgB,EACEnB,EAAS,GAAG+B,cACZrC,EACAY,EACAE,EACAE,EACAZ,GACAmC,MAAKC,IACDA,IACFtB,IACA/B,I,IAEF,EAiLAE,OAzMSoD,KACX1C,GAAY,GACZV,IACA6B,GAAY,EAuMVwB,kBAAmBxC,GAAwByC,EAAAA,EAAAA,GAAE,cAAeA,EAAAA,EAAAA,GAAE,UAC9DC,kBAAmB1C,EAAwB,SAAW,UACtDnD,MAAM,QACNqC,KAAMA,EACNyD,OAAOhB,EAAAA,EAAAA,IAAA,WAAKc,EAAAA,EAAAA,GAAE,YAAa3D,MAE3B6C,EAAAA,EAAAA,IAAC/D,EAAoB,MACnB+D,EAAAA,EAAAA,IAACiB,EAAAA,GAAM,CACLf,KAAK,YACLgB,GAAG,YAEHC,OAAO,wBACP1C,SAAUA,EACV2C,SA5LYC,IAClB3C,EAAY,CACV,IACK2C,EAAKC,KACRC,OAAQ,SAEV,EAuLIC,SApLYC,IAClB/C,EAAYD,EAASiD,QAAOJ,GAAQA,EAAKK,MAAQF,EAAYE,QACtD,GAoLDC,cAAeA,OACfC,SAAUlD,IAEVqB,EAAAA,EAAAA,IAAC8B,EAAAA,EAAM,CAACC,QAASpD,IAAiBmC,EAAAA,EAAAA,GAAE,kBAGvCjC,IACCmB,EAAAA,EAAAA,IAACgC,EAAAA,EAAU,CACTnD,aAAcA,EACdoD,0BACExE,EAAerE,OAAS,GACxBuE,EAAwBvE,OAAS,GACjCyE,EAA0BzE,OAAS,GACnC2E,EAAkC3E,OAAS,IAzLxB8I,MAC3B,GAC4B,IAA1BzE,EAAerE,QACoB,IAAnCuE,EAAwBvE,QACa,IAArCyE,EAA0BzE,QACmB,IAA7C2E,EAAkC3E,OAElC,OAAO,KAGT,MAAM+I,EAAQ,IACT,IAAIC,IAAI,IACN3E,KACAE,KACAE,KACAE,KAIP,OACEiC,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,MACErC,EAAAA,EAAAA,IAAA,WAAKc,EAAAA,EAAAA,GAAE,wBACPd,EAAAA,EAAAA,IAAC3E,EAAa,KAAE+B,GACf+E,EAAMG,KAAIC,IACTvC,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,MACiB,MAAd5E,OAAc,EAAdA,EAAgB+E,QAAQD,KAAa,IACpCvC,EAAAA,EAAAA,IAAC/D,EAAoB,CAACwG,IAAK,gBAAgBF,MACzCvC,EAAAA,EAAAA,IAAA,OAAKG,UAAU,kBACZW,EAAAA,EAAAA,GAAE,cAAeyB,EAASG,MAAM,MACjC1C,EAAAA,EAAAA,IAAA,QAAMG,UAAU,YAAW,OAE7BH,EAAAA,EAAAA,IAAA,SACEE,KAAM,YAAYqC,IAClBI,aAAc,YAAYJ,IAC1BK,KAAK,WACLC,MAAO1E,EAAUoE,GACjBnB,SAAU0B,GACR1E,EAAa,IACRD,EACH,CAACoE,GAAWO,EAAMC,OAAOF,YAMX,MAAvBlF,OAAuB,EAAvBA,EAAyB6E,QAAQD,KAAa,IAC7CvC,EAAAA,EAAAA,IAAC/D,EAAoB,CAACwG,IAAK,2BAA2BF,MACpDvC,EAAAA,EAAAA,IAAA,OAAKG,UAAU,kBACZW,EAAAA,EAAAA,GAAE,yBAA0ByB,EAASG,MAAM,MAC5C1C,EAAAA,EAAAA,IAAA,QAAMG,UAAU,YAAW,OAE7BH,EAAAA,EAAAA,IAAA,SACEE,KAAM,uBAAuBqC,IAC7BI,aAAc,uBAAuBJ,IACrCK,KAAK,WACLC,MAAO9D,EAAmBwD,GAC1BnB,SAAU0B,GACR9D,EAAsB,IACjBD,EACH,CAACwD,GAAWO,EAAMC,OAAOF,YAOT,MAAzBhF,OAAyB,EAAzBA,EAA2B2E,QAAQD,KAAa,IAC/CvC,EAAAA,EAAAA,IAAC/D,EAAoB,CACnBwG,IAAK,8BAA8BF,MAEnCvC,EAAAA,EAAAA,IAAA,OAAKG,UAAU,kBACZW,EAAAA,EAAAA,GAAE,4BAA6ByB,EAASG,MAAM,MAC/C1C,EAAAA,EAAAA,IAAA,QAAMG,UAAU,YAAW,OAE7BH,EAAAA,EAAAA,IAAA,YACEE,KAAM,0BAA0BqC,IAChCI,aAAc,0BAA0BJ,IACxCM,MAAO5D,EAAqBsD,GAC5BnB,SAAU0B,GACR5D,EAAwB,IACnBD,EACH,CAACsD,GAAWO,EAAMC,OAAOF,YAOD,MAAjC9E,OAAiC,EAAjCA,EAAmCyE,QAAQD,KAAa,IACvDvC,EAAAA,EAAAA,IAAC/D,EAAoB,CACnBwG,IAAK,uCAAuCF,MAE5CvC,EAAAA,EAAAA,IAAA,OAAKG,UAAU,kBACZW,EAAAA,EAAAA,GAAE,qCAAsCyB,EAASG,MAAM,MACxD1C,EAAAA,EAAAA,IAAA,QAAMG,UAAU,YAAW,OAE7BH,EAAAA,EAAAA,IAAA,SACEE,KAAM,mCAAmCqC,IACzCI,aAAc,mCAAmCJ,IACjDK,KAAK,WACLC,MAAO1D,EAA6BoD,GACpCnB,SAAU0B,GACR1D,EAAgC,IAC3BD,EACH,CAACoD,GAAWO,EAAMC,OAAOF,cAStC,EA4EFX,GAvEE7D,GAKH2B,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,MACErC,EAAAA,EAAAA,IAAC/D,EAAoB,MACnB+D,EAAAA,EAAAA,IAAA,OAAKG,UAAU,qBAAqB9C,IACpC2C,EAAAA,EAAAA,IAAA,OAAKG,UAAU,kBACZW,EAAAA,EAAAA,GAAE,wBAAwBA,EAAAA,EAAAA,GAAE,gBAE/Bd,EAAAA,EAAAA,IAAA,SAEEkB,GAAG,YACH0B,KAAK,OACLxB,SA1IgB0B,IAA8C,IAAAE,EAAAC,EACtE,MAAMC,EAAoD,OAAzCF,EAAuB,OAAvBC,EAAIH,EAAMK,oBAAa,EAAnBF,EAAqBJ,OAAgBG,EAAI,GAC9DxE,EAAsB0E,EAAYE,iBAAkBtC,EAAAA,EAAAA,GAAE,aAAa,MA0H1D,KAwED,C,2GCnbZ,MAAMuC,GAAY/H,EAAAA,EAAAA,IAAOgI,EAAAA,EAAQ;IAC7B9H,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAK,mBACHC,EAAMU,iCACHV,EAAMU,6BACVV,EAAMK,WAAWC,MAAMC,UACnC;EAuDH,EAlDYH,IAQE,IARD,KACXqE,EAAI,GACJgB,EAAE,MACFqC,EAAiB,SACjBC,EAAoB,SACpBC,GAAW,EAAK,QAChBC,EAAmB,aACnBC,EAAezD,GACPrE,EACR,MACM+H,GADYC,EAAAA,EAAAA,UAAQ,IAAM3D,EAAK9G,OAXd,IAWyC,CAAC8G,IAClC,GAAGA,EAAKwC,MAAM,EAZtB,SAYkDxC,EAqCzE,OAhCEF,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,KACGoB,GACCzD,EAAAA,EAAAA,IAAC8D,EAAAA,EAAO,CAAC9C,MAAO2C,EAAclB,IAAKkB,IACjC3D,EAAAA,EAAAA,IAACqD,EAAS,CACRZ,IAAKvB,EACL6C,SAAUN,EACVO,QATUC,IAAOV,EAAgB,MAARC,OAAQ,EAARA,EAAWD,GAAS,KAU7CW,MAAM,QAELN,KAIL5D,EAAAA,EAAAA,IAAC8D,EAAAA,EAAO,CAAC9C,MAAO2C,EAAclB,IAAKkB,IACjC3D,EAAAA,EAAAA,IAACqD,EAAS,CAAiBc,KAAK,OAAO1B,IAAKvB,EAAIwC,QAASA,GACtDxC,GACClB,EAAAA,EAAAA,IAAA,KACEoE,KAAM,8BAA8BlD,IACpC6B,OAAO,SACPsB,IAAI,cAEHT,GAGHA,IAQE,EC9CVU,EAAUhJ,EAAAA,GAAOC,GAAG;;;;;EA+E1B,EAxEiBC,IAKG,IALF,KAChB+I,EAAI,SACJd,GAAW,EAAK,SAChBD,EAAQ,QACRgB,GACchJ,EACd,MAAOiJ,EAAaC,IAAkB9K,EAAAA,EAAAA,UAA6B4K,GAE7DG,EAAgBpB,IACZ,MAARC,GAAAA,EAAWD,EAAM,EAObqB,GAA6Bf,EAAAA,EAAAA,UACjC,IAAOY,EAAcF,EAAKnL,OAASqL,EAAc,MACjD,CAACF,EAAKnL,OAAQqL,IAGVI,GAA2BhB,EAAAA,EAAAA,UAC/B,IACyB,iBAAhBY,EAA2BF,EAAKnL,OAASqL,EAAc,EAAI,MACpE,CAACG,EAAYL,EAAKnL,OAAQqL,IAG5B,OACEzE,EAAAA,EAAAA,IAACsE,EAAO,CAACnE,UAAU,YAChByE,GAAqC,iBAAhBH,GACpBzE,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,KACGkC,EAAK7B,MAAM,EAAG+B,EAAc,GAAGnC,KAAI,CAACwC,EAAcvB,KACjDvD,EAAAA,EAAAA,IAAC+E,EAAG,CACF7D,GAAI4D,EAAI5D,GACRuB,IAAKqC,EAAI5D,GACThB,KAAM4E,EAAI5E,KACVqD,MAAOA,EACPC,SAAUmB,EACVlB,SAAUA,MAGbc,EAAKnL,OAASqL,GACbzE,EAAAA,EAAAA,IAAC+E,EAAG,CACF7E,KAAM,IAAI2E,OACVnB,QAhCGsB,IAAMN,OAAeO,GAiCxBtB,aAAcY,EAAKjC,KAAIxB,GAAKA,EAAEZ,OAAMgF,KAAK,QAEzC,OAGNlF,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,KACGkC,EAAKjC,KAAI,CAACwC,EAAcvB,KACvBvD,EAAAA,EAAAA,IAAC+E,EAAG,CACF7D,GAAI4D,EAAI5D,GACRuB,IAAKqC,EAAI5D,GACThB,KAAM4E,EAAI5E,KACVqD,MAAOA,EACPC,SAAUmB,EACVlB,SAAUA,MAGbe,GACCD,EAAKnL,OAASoL,GACZxE,EAAAA,EAAAA,IAAC+E,EAAG,CAAC7E,KAAK,MAAMwD,QAjDXyB,IAAMT,EAAeF,KAmD1B,MAGA,C,qWCjFd,MAAMY,EAAsB9J,EAAAA,GAAOC,GAAG;;aAEzBC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,OAAOC,UAAU0J,MAAM;;;;EAM3C,SAAUC,EAAiBzJ,GAKhB,IALiB,SACxC0J,EAAQ,WACRC,EAAa,GAAE,UACfC,EAAqB,KACrBlI,GAAO,GACgB1B,EACvB,OACEmE,EAAAA,EAAAA,IAAC8D,EAAAA,EAAO,CACN4B,UAAU,MAEV1E,MACEzD,IACEyC,EAAAA,EAAAA,IAACoF,EAAmB,KACjBI,EAAWlD,KAAIqD,IACd3F,EAAAA,EAAAA,IAAC4F,EAAAA,GAAI,CACHzF,UAAU,OACVsC,IAAKkD,EAAKE,GACVA,GAAIF,EAAKE,GACT9C,OAAO,SACPsB,IAAI,sBAEHsB,EAAK3E,SAGTyE,IACCzF,EAAAA,EAAAA,IAAA,aAA6Bc,EAAAA,EAAAA,GAAE,YAAa2E,MAMnDF,EAGP,CCtCA,MAAMO,EAAmBxK,EAAAA,GAAOC,GAAG;IAC/BC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAK,2YAoBFC,EAAMC,OAAOC,UAAUC,+BACjBH,EAAMK,WAAWiK,QAAQC,2BAG7C;EAGW,SAAUC,EAAUpK,GAIhB,IAJiB,WACjC2J,EAAU,SACVU,EAAW,GAAE,WACbC,EAAa,wBACGtK,EAChB,MAAMuK,GAAgBpM,EAAAA,EAAAA,QAAuB,MACvCT,GAAUS,EAAAA,EAAAA,QAAuB,OAChCN,EAAmBG,IAAqBwM,EAAAA,EAAAA,GAC7CD,EACA7M,GAEI+M,GAAezC,EAAAA,EAAAA,UACnB,IACE2B,EAAWpM,OAAS8M,EAAWV,EAAWpM,OAAS8M,OAAWjB,GAChE,CAACO,EAAYU,IAETK,GAAQ1C,EAAAA,EAAAA,UACZ,KACE7D,EAAAA,EAAAA,IAAA,QAAMG,UAAU,YAAYqG,IAAKJ,GAC9BZ,EAAWlD,KAAI,CAACqD,EAAMpC,KACrBvD,EAAAA,EAAAA,IAAC4F,EAAAA,GAAI,CACHnD,IAAKkD,EAAKzE,GACV2E,GAAIM,EAAaR,EAAKzE,GACtB6B,OAAO,SACPsB,IAAI,sBAEO,IAAVd,EAAcoC,EAAK3E,MAAQ,KAAK2E,EAAK3E,aAK9C,CAACwE,IAEGiB,GAAe5C,EAAAA,EAAAA,UACnB,IACE2B,EAAW9C,MAAM,EAAGwD,GAAU5D,KAAIoE,IAAC,CACjC1F,MAAO0F,EAAE1F,MACT6E,GAAIM,EAAaO,EAAExF,QAEvB,CAACsE,EAAYU,IAGf,OACElG,EAAAA,EAAAA,IAAC8F,EAAgB,MACf9F,EAAAA,EAAAA,IAACsF,EAAiB,CAChBG,UAAWa,EACXd,WAAYiB,EACZlJ,OAAQ7D,GAEP6M,EACA1M,IACCmG,EAAAA,EAAAA,IAAA,QAAMwG,IAAKjN,EAAS4G,UAAU,SAC5B,IAAEzG,IAMd,C,2JC3CA,MAAMiN,EAAmBrL,EAAAA,GAAOC,GAAG;;;;;;;;;;;;oBAYfC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMU,QAAQ;;EAK3CyK,GAA2B9F,EAAAA,EAAAA,GAC/B,sSAMI+F,GAA4B/F,EAAAA,EAAAA,GAChC,wJAKFgG,EAAAA,EAAAA,KACA,MAAMC,GAAWC,EAAAA,EAAAA,KAEXC,EAAsBC,eAC1BC,EACAC,EACAC,GACE,IAAAC,OAHS,IAAXH,IAAAA,EAAc,IAKd,MAAMI,EAAUJ,EACZ,CAAEI,QAAS,CAAC,CAAEC,IAAK,aAAcC,IAAK,KAAM5E,MAAOsE,KACnD,CAAC,EACCO,EAAcC,IAAAA,OAAa,CAC/BC,QAAS,CAAC,kBAAmB,iBAC7BC,KAAM,CAAC,QACPC,aAAc,aACdC,gBAAiB,MACjBX,OACAY,UAAWX,KACRE,KAGC,KAAEU,EAAO,CAAC,SAAYC,EAAAA,EAAeC,IAAI,CAC7CC,SAAU,sBAAsBV,MAG5BW,EAAe,MAAJJ,GAAY,OAARX,EAAJW,EAAMtH,aAAF,EAAJ2G,EAAchF,KAC7BzG,IAAA,IAAGyM,WAAYC,EAAS,GAAErH,GAAwCrF,EAAA,MAAM,CACtE2M,MAAOD,EACP1F,MAAO3B,EACR,IAGH,MAAO,CACLuH,KAAMC,IAAqBL,EAAU,SACrCM,WAAgB,MAAJV,OAAI,EAAJA,EAAMW,MAEtB,EAYMC,EAAgBvN,EAAAA,GAAOC,GAAG;WACrBW,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAKT,EAAMC,OAAOC,UAAUC,IAAI;EAmvBrD,IAAekN,EAAAA,EAAAA,KAhvBf,SAAmBC,GACjB,MAAM,eACJC,EAAc,gBACdC,EACAC,MAAM,OAAEC,IACNJ,EAEEK,GAAUC,EAAAA,EAAAA,OAGd/J,OAAO,QACLyC,EACAuH,cAAeC,EACfC,mBAAoBC,EAAM,kBAC1BC,GAEFC,sBAAuBC,EAAS,QAChCC,EAAO,UACPC,EAAS,iBACTC,EAAgB,YAChBC,IACEC,EAAAA,EAAAA,IAA2B,SAASnJ,EAAAA,EAAAA,GAAE,SAAUkI,GAE9CkB,IAAWrG,EAAAA,EAAAA,UAAQ,IAAM4F,EAAOnH,KAAI6H,GAAKA,EAAEjJ,MAAK,CAACuI,KACjD,MAAEW,KAAUC,EAAAA,EAAAA,KAChB/K,GAASA,EAAM4J,OAEXoB,IAAaC,EAAAA,EAAAA,GAAe,WAAY,MAAOH,KAE9CI,GAAoBC,KAAkBC,EAAAA,EAAAA,IAC3C,QACAR,GACAlB,IAEI,sBACJ2B,GAAqB,mBACrBC,GAAkB,mBAClBC,GAAkB,oBAClBC,KACEC,EAAAA,EAAAA,IAAkBnB,EAAWH,IAE1BuB,GAAgBC,KAAmBrR,EAAAA,EAAAA,WAAkB,IACrD6D,GAAgBC,KAAqB9D,EAAAA,EAAAA,UAAmB,KACxDsR,GAAiBC,KAAsBvR,EAAAA,EAAAA,WAAkB,IACzD+D,GAAyBC,KAA8BhE,EAAAA,EAAAA,UAE5D,KACKiE,GAA2BC,KAAgClE,EAAAA,EAAAA,UAEhE,KAEAmE,GACAC,KACEpE,EAAAA,EAAAA,UAAmB,IAGjBwR,IAAeC,EAAAA,EAAAA,IAAiC,MAANlC,OAAM,EAANA,EAAQmC,WAAY,MAkB9DC,GAAY1B,EAAQ,aACpB2B,GAAU3B,EAAQ,aAClB4B,GAAY5B,EAAQ,aACpB6B,GACJ7B,EAAQ,gBAAiB8B,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYC,kBAClDC,GAAc,CAAC,CAAE5K,GAAI,6BAA8B6K,MAAM,IACzDC,GAAyBC,IAC7B,MAAMC,EAAMD,EAAe3J,KAAIlG,IAAA,IAAC,GAAE8E,GAAI9E,EAAA,OAAK8E,CAAE,KAC7CiL,EAAAA,EAAAA,GAAqB,QAASD,GAAK,KACjCf,IAAmB,EAAM,IAE3BA,IAAmB,EAAK,EAwBpBiB,GAAkBlF,eACtBC,EACAC,EACAC,GACE,IAAAgF,EAAAC,EAAAC,OAHS,IAAXpF,IAAAA,EAAc,IAKd,MAAMI,EAAUJ,EACZ,CACEI,QAAS,CACP,CACEC,IAAK,kBACLC,IAAK+E,EAAAA,EAAeC,WACpB5J,MAAOsE,KAIb,CAAC,EACCO,EAAcC,IAAAA,OAAa,CAC/BC,QAAS,CAAC,kBAAmB,MAC7BC,KAAM,CAAC,QACPC,aAAc,kBACdC,gBAAiB,MACjBX,OACAY,UAAWX,KACRE,IAECmF,QAAsCxE,EAAAA,EAAeC,IAAI,CAC7DC,SAAU,wBAAwBV,MACjCiF,OAAM,IACP3D,GAAelI,EAAAA,EAAAA,GAAE,kDAEb8L,EAAqB,MAARF,GAAc,OAANL,EAARK,EAAUzE,OAAY,OAARqE,EAAdD,EAAgB1L,aAAR,EAAR2L,EAAwBhK,KACzC/F,IAAA,IACEsQ,gBAAiBC,EAAc,GAC/B5L,GAID3E,EAAA,MAAM,CACLiM,MAAOsE,EACPjK,MAAO3B,EACR,IAEH,MAAO,CACLuH,KAAMC,IAAqBkE,EAAY,SACvCjE,WAAoB,MAAR+D,GAAc,OAANH,EAARG,EAAUzE,WAAF,EAARsE,EAAgB3D,MAEhC,EAEMhB,IAAU/D,EAAAA,EAAAA,UACd,IAAM,CACJ,CACEkJ,KAAMvQ,IAAA,IACJwQ,KACEC,UAAU,GAAE/L,KAEV1E,EAAA,OACJ2M,IACEnJ,EAAAA,EAAAA,IAACkN,EAAAA,EAAQ,CACPC,OAAQjM,EACRkM,aAAc5C,GACd6C,UAAW5C,GAAevJ,IAE7B,EACHoM,OAAQ,GACRpM,GAAI,KACJqM,eAAe,EACfC,KAAM,KACNC,QAAStE,GAEX,CACE4D,KAAMtQ,IAAA,IACJuQ,KACEC,UAAU,IACRS,EACAC,WAAYC,EACZC,aAAcC,EACdC,sBAAuBC,EAAoB,YAC3CC,KAGAxR,EAAA,OACJuD,EAAAA,EAAAA,IAAC2G,EAAgB,MACf3G,EAAAA,EAAAA,IAAC4F,EAAAA,GAAI,CAACC,GAAI6H,GACPI,IACC9N,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,MACErC,EAAAA,EAAAA,IAACkO,EAAAA,EAAc,CACbJ,YAAaA,EACbK,QAASH,IACR,KAGNJ,GAEFK,IACCjO,EAAAA,EAAAA,IAACoO,EAAAA,EAAW,CAACC,QAASJ,EAAaK,QAAQ,eAE5B,EAErBhB,QAAQxM,EAAAA,EAAAA,GAAE,SACVyN,SAAU,cAEZ,CACExB,KAAMpQ,IAAA,IAAA6R,EAAA,IACJxB,KACEC,UAAYwB,SAAUC,KAEpB/R,EAAA,OAA0B,OAArB6R,EAAAzH,EAASoB,IAAIuG,SAAQ,EAArBF,EAAuBtO,OAAQwO,CAAO,EACjDpB,QAAQxM,EAAAA,EAAAA,GAAE,sBACVyN,SAAU,WACVf,KAAM,OAER,CACET,KAAMnQ,IAAA,IACJoQ,KACEC,UACE0B,qBAAsBC,EACtBC,eAAgBC,KAGhBlS,EAAA,OAAKoD,EAAAA,EAAAA,IAAC+O,EAAAA,EAAW,CAAClJ,GAAIiJ,GAAQF,EAAwB,EAC5DtB,QAAQxM,EAAAA,EAAAA,GAAE,WACVyN,SAAU,gBACVhB,eAAe,EACfC,KAAM,MAER,CACET,KAAMlQ,IAAA,IACJmQ,KACEC,UAAU,WAAEL,KAEV/P,EAAA,OACJmD,EAAAA,EAAAA,IAACiG,EAAU,CACTT,YAAYwJ,EAAAA,EAAAA,GAAcpC,GAAYtK,KACnC2M,IAA4B,CAC3BjO,MAAOiO,EAAEpC,gBACT3L,GAAI+N,EAAE/N,QAGV,EAEJoM,QAAQxM,EAAAA,EAAAA,GAAE,uBACVyN,SAAU,aACVhB,eAAe,EACfC,KAAM,MACNC,QAAQ,GAEV,CACEV,KAAMhQ,IAAA,IACJiQ,KACEC,UAAU,KAAE1I,EAAO,MAEjBxH,EAAA,OAEJiD,EAAAA,EAAAA,IAACkP,EAAAA,EAAQ,CACP3K,KAAMA,EAAK7C,QAAQoD,IACjBA,EAAIlC,MACa,IAAbkC,EAAIlC,MAA2B,oBAAbkC,EAAIlC,OAG5B4B,QAAS,GACT,EAEJ8I,QAAQxM,EAAAA,EAAAA,GAAE,QACVyN,SAAU,OACVhB,eAAe,EACfE,SAAS9B,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYuD,iBAExC,CACEpC,KAAM/P,IAAA,IACJgQ,KACEC,UAAYmC,cAAeC,KAEzBrS,EAAA,OAAKgD,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,KAnMKiN,CAACD,GACV,MAAXA,GAAAA,EAAaE,WACT,GAAc,MAAXF,OAAW,EAAXA,EAAaE,cAAyB,MAAXF,OAAW,EAAXA,EAAaG,YAC3C,KAgMcF,CAAcD,GAAgB,EAC5C/B,QAAQxM,EAAAA,EAAAA,GAAE,eACVyN,SAAU,2BACVf,KAAM,MAER,CACET,KAAM9P,IAAA,IACJ+P,KACEC,UAAYwC,cAAeC,KAEzBzS,EAAA,OACJ+C,EAAAA,EAAAA,IAAA,QAAMG,UAAU,WACbuP,EAAcC,IAAAA,IAAWD,GAAaE,UAAY,KAC9C,EAETtC,QAAQxM,EAAAA,EAAAA,GAAE,iBACVyN,SAAU,gBACVf,KAAM,MAER,CACEe,SAAU,SACVd,QAAQ,EACRF,eAAe,GAEjB,CACER,KAAM8C,IAAA,IACJ7C,KACEC,UAAY6C,WAAYC,KAEtBF,EAAA,OACJE,EAAY,GAAGA,EAAUR,cAAcQ,EAAUP,YAAc,EAAE,EACnElC,QAAQxM,EAAAA,EAAAA,GAAE,cACVyN,SAAU,aACVhB,eAAe,EACfC,KAAM,MAER,CACET,KAAMiD,IAA+B,IAA5BhD,KAAK,SAAEC,IAAiB+C,EAU/B,OAAKxE,IAAYC,IAAcC,IAK7B1L,EAAAA,EAAAA,IAAC6I,EAAa,CAAC1I,UAAU,WACtBsL,KACCzL,EAAAA,EAAAA,IAACiQ,EAAAA,EAAmB,CAClBjP,OAAOF,EAAAA,EAAAA,GAAE,kBACTmN,aACEjO,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,MACGvB,EAAAA,EAAAA,GAAE,mCAAoC,KACvCd,EAAAA,EAAAA,IAAA,SAAIiN,EAASU,YAAe,KAGhCuC,UAxBavL,KACnBwL,EAAAA,EAAAA,IACElD,EACAhE,EACAD,EACAgB,KAqBKoG,IACCpQ,EAAAA,EAAAA,IAAC8D,EAAAA,EAAO,CACN5C,GAAG,wBACHF,OAAOF,EAAAA,EAAAA,GAAE,UACT4E,UAAU,WAEV1F,EAAAA,EAAAA,IAAA,QAEEmE,KAAK,SACLkM,SAAU,EACVlQ,UAAU,gBACVuD,QAAS0M,IAETpQ,EAAAA,EAAAA,IAACsQ,EAAAA,EAAMC,MAAK,UAMrB7E,KACC1L,EAAAA,EAAAA,IAAC8D,EAAAA,EAAO,CACN5C,GAAG,wBACHF,OAAOF,EAAAA,EAAAA,GAAE,UACT4E,UAAU,WAEV1F,EAAAA,EAAAA,IAAA,QACEmE,KAAK,SACLkM,SAAU,EACVlQ,UAAU,gBACVuD,QA/CW8M,IAAMxE,GAAsB,CAACiB,MAiDxCjN,EAAAA,EAAAA,IAACsQ,EAAAA,EAAMG,MAAK,QAIjBjF,KACCxL,EAAAA,EAAAA,IAAC8D,EAAAA,EAAO,CACN5C,GAAG,sBACHF,OAAOF,EAAAA,EAAAA,GAAE,QACT4E,UAAU,WAEV1F,EAAAA,EAAAA,IAAA,QACEmE,KAAK,SACLkM,SAAU,EACVlQ,UAAU,gBACVuD,QAhEYgN,IAAM7F,GAAmBoC,KAkErCjN,EAAAA,EAAAA,IAACsQ,EAAAA,EAAMK,QAAO,SA/Df,IAmES,EAGpBrD,QAAQxM,EAAAA,EAAAA,GAAE,WACVI,GAAI,UACJqM,eAAe,EACfE,QAASjC,KAAYC,MAGzB,CACEtC,EACAqC,GACAC,GACAC,GACAlB,GACAC,GACAT,EACAf,EACAD,IAIE4H,IAA0B/M,EAAAA,EAAAA,UAC9B,KAAM,CACJyJ,QAAQxM,EAAAA,EAAAA,GAAE,YACV2B,IAAK,WACLvB,GAAI,KACJ2P,WAAY,WACZC,MAAO,SACPC,SAAUvE,EAAAA,EAAewE,WACzBC,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBoQ,QAAS,CACP,CAAE1I,OAAO1H,EAAAA,EAAAA,GAAE,OAAQ+B,OAAO,GAC1B,CAAE2F,OAAO1H,EAAAA,EAAAA,GAAE,MAAO+B,OAAO,OAG7B,IAGI0E,IAAmB1D,EAAAA,EAAAA,UAAQ,KAC/B,MAAMsN,EAAe,CACnB,CACE7D,QAAQxM,EAAAA,EAAAA,GAAE,UACV2B,IAAK,SACLvB,GAAI,aACJ4P,MAAO,SACPC,SAAUvE,EAAAA,EAAe4E,cAE3B,CACE9D,QAAQxM,EAAAA,EAAAA,GAAE,SACV2B,IAAK,QACLvB,GAAI,SACJ4P,MAAO,SACPC,SAAUvE,EAAAA,EAAe6E,iBACzBJ,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBwQ,cAAcC,EAAAA,EAAAA,IACZ,QACA,UACAC,EAAAA,EAAAA,KAAmBC,GACjBzI,GACElI,EAAAA,EAAAA,GACE,2DACA2Q,MAIN1I,EAAMG,MAERwI,UAAU,GAEZ,CACEpE,QAAQxM,EAAAA,EAAAA,GAAE,cACV2B,IAAK,aACLvB,GAAI,aACJ4P,MAAO,SACPC,SAAUvE,EAAAA,EAAemF,gBACzBV,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBwQ,cAAcC,EAAAA,EAAAA,IACZ,QACA,cACAC,EAAAA,EAAAA,KAAmBC,GACjBzI,GACElI,EAAAA,EAAAA,GACE,+DACA2Q,MAIN1I,EAAMG,MAERwI,UAAU,GAEZ,CACEpE,QAAQxM,EAAAA,EAAAA,GAAE,cACV2B,IAAK,WACLvB,GAAI,WACJ4P,MAAO,SACPC,SAAUvE,EAAAA,EAAeoF,OACzBX,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBoQ,QAASnK,EACNc,OACAnG,QAAOmQ,IAAC,IAAAC,EAAA,OAAIC,EAAAA,EAAAA,KAAgC,OAAfD,EAAA/K,EAASoB,IAAI0J,SAAE,EAAfC,EAAiBE,YAAa,GAAG,IAC9D1P,KAAIuP,IAAC,IAAAI,EAAA,MAAK,CAAEzJ,OAAsB,OAAfyJ,EAAAlL,EAASoB,IAAI0J,SAAE,EAAfI,EAAiB/R,OAAQ2R,EAAGhP,MAAOgP,EAAG,IACzDK,MAAK,CAACC,EAAGC,IACHD,EAAE3J,OAAU4J,EAAE5J,MAIf2J,EAAE3J,MAAQ4J,EAAE5J,MACP,EAEL2J,EAAE3J,MAAQ4J,EAAE5J,OACN,EAGH,EAVE,KAaf,CACE8E,QAAQxM,EAAAA,EAAAA,GAAE,WACV2B,IAAK,UACLvB,GAAI,gBACJ4P,MAAO,SACPC,SAAUvE,EAAAA,EAAeoF,OACzBX,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBwQ,aAAcrK,EACdyK,UAAU,GAEZ,CACEpE,QAAQxM,EAAAA,EAAAA,GAAE,cACV2B,IAAK,aACLvB,GAAI,aACJ4P,MAAO,SACPC,SAAUvE,EAAAA,EAAe6E,iBACzBJ,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBwQ,aAAclF,GACdsF,UAAU,MAERvI,EAAS,CAACyH,IAAmB,GACjC,CACEtD,QAAQxM,EAAAA,EAAAA,GAAE,aACV2B,IAAK,YACLvB,GAAI,KACJ2P,WAAY,YACZC,MAAO,SACPC,SAAUvE,EAAAA,EAAe6F,iBACzBpB,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBoQ,QAAS,CACP,CAAE1I,OAAO1H,EAAAA,EAAAA,GAAE,OAAQ+B,OAAO,GAC1B,CAAE2F,OAAO1H,EAAAA,EAAAA,GAAE,MAAO+B,OAAO,MAe/B,OAXI8I,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYuD,iBAAmB7E,IAClD6G,EAAamB,KAAK,CAChBhF,QAAQxM,EAAAA,EAAAA,GAAE,QACV2B,IAAK,OACLvB,GAAI,OACJ4P,MAAO,SACPC,SAAUvE,EAAAA,EAAe+F,UACzBtB,iBAAiBnQ,EAAAA,EAAAA,GAAE,OACnBwQ,aAAckB,EAAAA,IAGXrB,CAAY,GAClB,CAACnI,EAAgB4H,GAAiB7H,EAAMG,OAErCuJ,GAAY,CAChB,CACE1G,MAAM,EACN7K,GAAI,aACJsH,OAAO1H,EAAAA,EAAAA,GAAE,gBACT+B,MAAO,gBAET,CACEkJ,MAAM,EACN7K,GAAI,6BACJsH,OAAO1H,EAAAA,EAAAA,GAAE,qBACT+B,MAAO,qBAET,CACEkJ,MAAM,EACN7K,GAAI,6BACJsH,OAAO1H,EAAAA,EAAAA,GAAE,2BACT+B,MAAO,4BAIL6P,IAAaC,EAAAA,EAAAA,cAChBC,IACC5S,EAAAA,EAAAA,IAAC6S,EAAAA,EAAS,CACRD,MAAOA,EACPE,eACE1H,GACIA,GAAa2H,YACbpH,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYoH,YAEnCnJ,QAASA,EACTgB,mBAAoBA,GACpBnB,kBAAmBA,EACnBV,eAAgBA,EAChBC,gBAAiBA,EACjBe,YAAaA,EACbb,OAAQA,EACRpH,QAASA,EACT0I,eAAgBA,GAAemI,EAAM1R,IACrCsJ,mBAAoBA,GACpBwB,sBAAuBA,MAG3B,CACEhD,EACAC,EACAS,EACAe,GACAZ,EACA9H,IAIEkR,GAA0C,GAuChD,OAtCIxH,IAAaC,KACfuH,GAAeX,KAAK,CAClBpS,MAAMY,EAAAA,EAAAA,GAAE,eACRoS,YAAa,YACb,YAAa,cACbxP,QAASqG,IAGTwB,KACF0H,GAAeX,KAAK,CAClBpS,MACEF,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,MACErC,EAAAA,EAAAA,IAAA,KAAGG,UAAU,eAAgB,KAACW,EAAAA,EAAAA,GAAE,UAGpCoS,YAAa,UACbxP,QAASA,KACP0F,EAAQkJ,KAAK,aAAa,KAI1B3G,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYC,mBAC/BoH,GAAeX,KAAK,CAClBpS,MACEF,EAAAA,EAAAA,IAAC8D,EAAAA,EAAO,CACN5C,GAAG,iBACHF,OAAOF,EAAAA,EAAAA,GAAE,iBACT4E,UAAU,gBAEV1F,EAAAA,EAAAA,IAACsQ,EAAAA,EAAM6C,OAAM,OAGjBD,YAAa,OACbxP,QA/kBuB0P,KAC3BnI,IAAgB,EAAK,MAolBrBjL,EAAAA,EAAAA,IAAAqC,EAAAA,SAAA,MACErC,EAAAA,EAAAA,IAACqT,EAAAA,EAAO,CAACnT,MAAMY,EAAAA,EAAAA,GAAE,UAAWwS,QAASL,KACpCtI,KACC3K,EAAAA,EAAAA,IAACuT,EAAAA,EAAe,CACd/V,OAAQsN,GACR0I,OAAQ5I,GACRrN,MAAI,EACJmF,MAAOiI,MAGX3K,EAAAA,EAAAA,IAACiQ,EAAAA,EAAmB,CAClBjP,OAAOF,EAAAA,EAAAA,GAAE,kBACTmN,aAAanN,EAAAA,EAAAA,GAAE,wDACfoP,UAlkBN,SAA+BuD,GAC7BvL,EAAAA,EAAewL,OAAO,CACpBtL,SAAU,oBAAoBT,IAAAA,OAC5B8L,EAAenR,KAAIjG,IAAA,IAAC,GAAE6E,GAAI7E,EAAA,OAAK6E,CAAE,SAElCR,MACDpE,IAAkB,IAAjB,KAAE2L,EAAO,CAAC,GAAG3L,EACZ0N,IACAf,EAAgBhB,EAAK0L,QAAQ,IAE/BnC,EAAAA,EAAAA,KAAmBC,GACjBzI,GACElI,EAAAA,EAAAA,GAAE,sDAAuD2Q,MAIjE,IAojBOrB,IACC,MAAMwD,EAA4C,GAiBlD,OAhBInI,IACFmI,EAAYtB,KAAK,CACf7P,IAAK,SACLvC,MAAMY,EAAAA,EAAAA,GAAE,UACR8B,KAAM,SACNiR,SAAUzD,IAGV1E,IACFkI,EAAYtB,KAAK,CACf7P,IAAK,SACLvC,MAAMY,EAAAA,EAAAA,GAAE,UACR8B,KAAM,UACNiR,SAAU7H,MAIZhM,EAAAA,EAAAA,IAAC8T,EAAAA,EAAQ,CACPF,YAAaA,EACblK,kBAAmBA,EACnBqK,sBAAuBtB,GACvBtS,UAAU,kBACVyH,QAASA,GACTgB,MAAOW,EACPd,KAAMgB,EACNuK,kBAAmBjK,EACnBC,YAAaA,EACbF,UAAWA,EACXvC,QAASA,GACTuE,YAAaA,GACb/J,QAASA,EACTsF,SApwBI,GAqwBJqL,WAAYA,GACZuB,eAAa,EACbC,oBAAoB,QACpBjL,gBAAiBA,EACjBD,eAAgBA,EAChB8J,eACE1H,GACIA,GAAa2H,YACbpH,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYoH,YAEnCmB,iBACExI,EAAAA,EAAAA,IAAiBC,EAAAA,GAAYwI,6BACzB,OACA,SAEN,KAKRpU,EAAAA,EAAAA,IAACqU,EAAAA,EAAiB,CAChBnX,aAAa,QACbC,eAAe2D,EAAAA,EAAAA,GAAE,SACjB1D,uBAAwBwJ,EACxBvJ,wBAAyBwJ,EACzBmC,eAAgBA,EAChBC,gBAAiBA,EACjB3L,cAzpBoBgX,KACxBrJ,IAAgB,GAChBjB,IACAf,GAAgBnI,EAAAA,EAAAA,GAAE,kBAAkB,EAupBhCvD,KAAMyN,GACNxN,OA/pBwB+W,KAC5BtJ,IAAgB,EAAM,EA+pBlBxN,eAAgBA,GAChBC,kBAAmBA,GACnBC,wBAAyBA,GACzBC,2BAA4BA,GAC5BC,0BAA2BA,GAC3BC,6BAA8BA,GAC9BC,kCAAmCA,GACnCC,qCACEA,KAGHkN,KAAmBlL,EAAAA,EAAAA,IAACwU,EAAAA,EAAO,MAGlC,G","sources":["webpack://superset/./node_modules/lodash/uniqBy.js","webpack://superset/./packages/superset-ui-core/src/hooks/useTruncation/useChildElementTruncation.ts","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/components/ListView/CrossLinksTooltip.tsx","webpack://superset/./src/components/ListView/CrossLinks.tsx","webpack://superset/./src/pages/ChartList/index.tsx"],"sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RefObject, useLayoutEffect, useState, useRef } from 'react';\n\n/**\n * This hook encapsulates logic to support truncation of child HTML\n * elements contained in a fixed-width parent HTML element.  Given\n * a ref to the parent element and optionally a ref to the \"+x\"\n * component that shows the number of truncated items, this hook\n * will return the number of elements that are not fully visible\n * (including those completely hidden) and whether any elements\n * are completely hidden.\n */\nconst useChildElementTruncation = (\n  elementRef: RefObject<HTMLElement>,\n  plusRef?: RefObject<HTMLElement>,\n) => {\n  const [elementsTruncated, setElementsTruncated] = useState(0);\n  const [hasHiddenElements, setHasHiddenElements] = useState(false);\n\n  const previousEffectInfoRef = useRef({\n    scrollWidth: 0,\n    parentElementWidth: 0,\n    plusRefWidth: 0,\n  });\n\n  useLayoutEffect(() => {\n    const currentElement = elementRef.current;\n    const plusRefElement = plusRef?.current;\n\n    if (!currentElement) {\n      return;\n    }\n\n    const { scrollWidth, clientWidth, childNodes } = currentElement;\n\n    // By using the result of this effect to truncate content\n    // we're effectively changing it's size.\n    // That will trigger another pass at this effect.\n    // Depending on the content elements width, that second rerender could\n    // yield a different truncate count, thus potentially leading to a\n    // rendering loop.\n    // There's only a need to recompute if the parent width or the width of\n    // the child nodes changes.\n    const previousEffectInfo = previousEffectInfoRef.current;\n    const parentElementWidth = currentElement.parentElement?.clientWidth || 0;\n    const plusRefWidth = plusRefElement?.offsetWidth || 0;\n    previousEffectInfoRef.current = {\n      scrollWidth,\n      parentElementWidth,\n      plusRefWidth,\n    };\n\n    if (\n      previousEffectInfo.parentElementWidth === parentElementWidth &&\n      previousEffectInfo.scrollWidth === scrollWidth &&\n      previousEffectInfo.plusRefWidth === plusRefWidth\n    ) {\n      return;\n    }\n\n    if (scrollWidth > clientWidth) {\n      // \"...\" is around 6px wide\n      const truncationWidth = 6;\n      const plusSize = plusRefElement?.offsetWidth || 0;\n      const maxWidth = clientWidth - truncationWidth;\n      const elementsCount = childNodes.length;\n\n      let width = 0;\n      let hiddenElements = 0;\n      for (let i = 0; i < elementsCount; i += 1) {\n        const itemWidth = (childNodes[i] as HTMLElement).offsetWidth;\n        const remainingWidth = maxWidth - truncationWidth - width - plusSize;\n\n        // assures it shows +{number} only when the item is not visible\n        if (remainingWidth <= 0) {\n          hiddenElements += 1;\n        }\n        width += itemWidth;\n      }\n\n      if (elementsCount > 1 && hiddenElements) {\n        setHasHiddenElements(true);\n        setElementsTruncated(hiddenElements);\n      } else {\n        setHasHiddenElements(false);\n        setElementsTruncated(1);\n      }\n    } else {\n      setHasHiddenElements(false);\n      setElementsTruncated(0);\n    }\n  }, [\n    elementRef.current?.offsetWidth,\n    elementRef.current?.clientWidth,\n    elementRef,\n  ]);\n\n  return [elementsTruncated, hasHiddenElements];\n};\n\nexport default useChildElementTruncation;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst MAX_DISPLAY_CHAR = 20;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n  toolTipTitle = name,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > MAX_DISPLAY_CHAR, [name]);\n  const tagDisplay = isLongTag ? `${name.slice(0, MAX_DISPLAY_CHAR)}...` : name;\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag\n            key={id}\n            closable={editable}\n            onClose={handleClose}\n            color=\"blue\"\n          >\n            {tagDisplay}\n          </StyledTag>\n        </Tooltip>\n      ) : (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag data-test=\"tag\" role=\"link\" key={id} onClick={onClick}>\n            {id ? (\n              <a\n                href={`/superset/all_entities/?id=${id}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {tagDisplay}\n              </a>\n            ) : (\n              tagDisplay\n            )}\n          </StyledTag>\n        </Tooltip>\n      )}\n    </>\n  );\n\n  return tagElem;\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag\n              name={`+${extraTags}...`}\n              onClick={expand}\n              toolTipTitle={tags.map(t => t.name).join(', ')}\n            />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { Link } from 'react-router-dom';\n\nexport type CrossLinksTooltipProps = {\n  children: React.ReactNode;\n  crossLinks: { to: string; title: string }[];\n  moreItems?: number;\n  show: boolean;\n};\n\nconst StyledLinkedTooltip = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\n\nexport default function CrossLinksTooltip({\n  children,\n  crossLinks = [],\n  moreItems = undefined,\n  show = false,\n}: CrossLinksTooltipProps) {\n  return (\n    <Tooltip\n      placement=\"top\"\n      data-test=\"crosslinks-tooltip\"\n      title={\n        show && (\n          <StyledLinkedTooltip>\n            {crossLinks.map(link => (\n              <Link\n                className=\"link\"\n                key={link.to}\n                to={link.to}\n                target=\"_blank\"\n                rel=\"noreferer noopener\"\n              >\n                {link.title}\n              </Link>\n            ))}\n            {moreItems && (\n              <span data-test=\"plus-more\">{t('+ %s more', moreItems)}</span>\n            )}\n          </StyledLinkedTooltip>\n        )\n      }\n    >\n      {children}\n    </Tooltip>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo, useRef } from 'react';\nimport { styled, useTruncation } from '@superset-ui/core';\nimport { Link } from 'react-router-dom';\nimport CrossLinksTooltip from './CrossLinksTooltip';\n\nexport type CrossLinkProps = {\n  title: string;\n  id: number;\n};\n\nexport type CrossLinksProps = {\n  crossLinks: Array<CrossLinkProps>;\n  maxLinks?: number;\n  linkPrefix?: string;\n};\n\nconst StyledCrossLinks = styled.div`\n  ${({ theme }) => `\n    & > span {\n      width: 100%;\n      display: flex;\n\n      .ant-tooltip-open {\n        display: inline;\n      }\n\n      .truncated {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        display: inline-block;\n        width: 100%;\n        vertical-align: bottom;\n      }\n\n      .count {\n        cursor: pointer;\n        color: ${theme.colors.grayscale.base};\n        font-weight: ${theme.typography.weights.bold};\n      }\n    }\n  `}\n`;\n\nexport default function CrossLinks({\n  crossLinks,\n  maxLinks = 20,\n  linkPrefix = '/superset/dashboard/',\n}: CrossLinksProps) {\n  const crossLinksRef = useRef<HTMLDivElement>(null);\n  const plusRef = useRef<HTMLDivElement>(null);\n  const [elementsTruncated, hasHiddenElements] = useTruncation(\n    crossLinksRef,\n    plusRef,\n  );\n  const hasMoreItems = useMemo(\n    () =>\n      crossLinks.length > maxLinks ? crossLinks.length - maxLinks : undefined,\n    [crossLinks, maxLinks],\n  );\n  const links = useMemo(\n    () => (\n      <span className=\"truncated\" ref={crossLinksRef} data-test=\"crosslinks\">\n        {crossLinks.map((link, index) => (\n          <Link\n            key={link.id}\n            to={linkPrefix + link.id}\n            target=\"_blank\"\n            rel=\"noreferer noopener\"\n          >\n            {index === 0 ? link.title : `, ${link.title}`}\n          </Link>\n        ))}\n      </span>\n    ),\n    [crossLinks],\n  );\n  const tooltipLinks = useMemo(\n    () =>\n      crossLinks.slice(0, maxLinks).map(l => ({\n        title: l.title,\n        to: linkPrefix + l.id,\n      })),\n    [crossLinks, maxLinks],\n  );\n\n  return (\n    <StyledCrossLinks>\n      <CrossLinksTooltip\n        moreItems={hasMoreItems}\n        crossLinks={tooltipLinks}\n        show={!!elementsTruncated}\n      >\n        {links}\n        {hasHiddenElements && (\n          <span ref={plusRef} className=\"count\" data-test=\"count-crosslinks\">\n            +{elementsTruncated}\n          </span>\n        )}\n      </CrossLinksTooltip>\n    </StyledCrossLinks>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  JsonResponse,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport rison from 'rison';\nimport { uniqBy } from 'lodash';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  handleChartDelete,\n} from 'src/views/CRUD/utils';\nimport {\n  useChartEditModal,\n  useFavoriteStatus,\n  useListViewResource,\n} from 'src/views/CRUD/hooks';\nimport handleResourceExport from 'src/utils/export';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport { TagsList } from 'src/components/Tags';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport FaveStar from 'src/components/FaveStar';\nimport { Link, useHistory } from 'react-router-dom';\nimport ListView, {\n  Filter,\n  FilterOperator,\n  Filters,\n  ListViewProps,\n  SelectOption,\n} from 'src/components/ListView';\nimport CrossLinks from 'src/components/ListView/CrossLinks';\nimport Loading from 'src/components/Loading';\nimport { dangerouslyGetItemDoNotUse } from 'src/utils/localStorageHelpers';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport PropertiesModal from 'src/explore/components/PropertiesModal';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Chart, { ChartLinkedDashboard } from 'src/types/Chart';\nimport Tag from 'src/types/TagType';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { nativeFilterGate } from 'src/dashboard/components/nativeFilters/utils';\nimport setupPlugins from 'src/setup/setupPlugins';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport CertifiedBadge from 'src/components/CertifiedBadge';\nimport { GenericLink } from 'src/components/GenericLink/GenericLink';\nimport Owner from 'src/types/Owner';\nimport { loadTags } from 'src/components/Tags/utils';\nimport ChartCard from 'src/features/charts/ChartCard';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport { findPermission } from 'src/utils/findPermission';\n\nconst FlexRowContainer = styled.div`\n  align-items: center;\n  display: flex;\n\n  a {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 1.2;\n  }\n\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the charts. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more charts that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\nsetupPlugins();\nconst registry = getChartMetadataRegistry();\n\nconst createFetchDatasets = async (\n  filterValue = '',\n  page: number,\n  pageSize: number,\n) => {\n  // add filters if filterValue\n  const filters = filterValue\n    ? { filters: [{ col: 'table_name', opr: 'sw', value: filterValue }] }\n    : {};\n  const queryParams = rison.encode({\n    columns: ['datasource_name', 'datasource_id'],\n    keys: ['none'],\n    order_column: 'table_name',\n    order_direction: 'asc',\n    page,\n    page_size: pageSize,\n    ...filters,\n  });\n\n  const { json = {} } = await SupersetClient.get({\n    endpoint: `/api/v1/dataset/?q=${queryParams}`,\n  });\n\n  const datasets = json?.result?.map(\n    ({ table_name: tableName, id }: { table_name: string; id: number }) => ({\n      label: tableName,\n      value: id,\n    }),\n  );\n\n  return {\n    data: uniqBy<SelectOption>(datasets, 'value'),\n    totalCount: json?.count,\n  };\n};\n\ninterface ChartListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst StyledActions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nfunction ChartList(props: ChartListProps) {\n  const {\n    addDangerToast,\n    addSuccessToast,\n    user: { userId },\n  } = props;\n\n  const history = useHistory();\n\n  const {\n    state: {\n      loading,\n      resourceCount: chartCount,\n      resourceCollection: charts,\n      bulkSelectEnabled,\n    },\n    setResourceCollection: setCharts,\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<Chart>('chart', t('chart'), addDangerToast);\n\n  const chartIds = useMemo(() => charts.map(c => c.id), [charts]);\n  const { roles } = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const canReadTag = findPermission('can_read', 'Tag', roles);\n\n  const [saveFavoriteStatus, favoriteStatus] = useFavoriteStatus(\n    'chart',\n    chartIds,\n    addDangerToast,\n  );\n  const {\n    sliceCurrentlyEditing,\n    handleChartUpdated,\n    openChartEditModal,\n    closeChartEditModal,\n  } = useChartEditModal(setCharts, charts);\n\n  const [importingChart, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n\n  // TODO: Fix usage of localStorage keying on the user id\n  const userSettings = dangerouslyGetItemDoNotUse(userId?.toString(), null) as {\n    thumbnails: boolean;\n  };\n\n  const openChartImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeChartImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleChartImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Chart imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const handleBulkChartExport = (chartsToExport: Chart[]) => {\n    const ids = chartsToExport.map(({ id }) => id);\n    handleResourceExport('chart', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n  const changedByName = (lastSavedBy: Owner) =>\n    lastSavedBy?.first_name\n      ? `${lastSavedBy?.first_name} ${lastSavedBy?.last_name}`\n      : null;\n\n  function handleBulkChartDelete(chartsToDelete: Chart[]) {\n    SupersetClient.delete({\n      endpoint: `/api/v1/chart/?q=${rison.encode(\n        chartsToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected charts: %s', errMsg),\n        ),\n      ),\n    );\n  }\n  const fetchDashboards = async (\n    filterValue = '',\n    page: number,\n    pageSize: number,\n  ) => {\n    // add filters if filterValue\n    const filters = filterValue\n      ? {\n          filters: [\n            {\n              col: 'dashboard_title',\n              opr: FilterOperator.startsWith,\n              value: filterValue,\n            },\n          ],\n        }\n      : {};\n    const queryParams = rison.encode({\n      columns: ['dashboard_title', 'id'],\n      keys: ['none'],\n      order_column: 'dashboard_title',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...filters,\n    });\n    const response: void | JsonResponse = await SupersetClient.get({\n      endpoint: `/api/v1/dashboard/?q=${queryParams}`,\n    }).catch(() =>\n      addDangerToast(t('An error occurred while fetching dashboards')),\n    );\n    const dashboards = response?.json?.result?.map(\n      ({\n        dashboard_title: dashboardTitle,\n        id,\n      }: {\n        dashboard_title: string;\n        id: number;\n      }) => ({\n        label: dashboardTitle,\n        value: id,\n      }),\n    );\n    return {\n      data: uniqBy<SelectOption>(dashboards, 'value'),\n      totalCount: response?.json?.count,\n    };\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) =>\n          userId && (\n            <FaveStar\n              itemId={id}\n              saveFaveStar={saveFavoriteStatus}\n              isStarred={favoriteStatus[id]}\n            />\n          ),\n        Header: '',\n        id: 'id',\n        disableSortBy: true,\n        size: 'xs',\n        hidden: !userId,\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              url,\n              slice_name: sliceName,\n              certified_by: certifiedBy,\n              certification_details: certificationDetails,\n              description,\n            },\n          },\n        }: any) => (\n          <FlexRowContainer>\n            <Link to={url} data-test={`${sliceName}-list-chart-title`}>\n              {certifiedBy && (\n                <>\n                  <CertifiedBadge\n                    certifiedBy={certifiedBy}\n                    details={certificationDetails}\n                  />{' '}\n                </>\n              )}\n              {sliceName}\n            </Link>\n            {description && (\n              <InfoTooltip tooltip={description} viewBox=\"0 -1 24 24\" />\n            )}\n          </FlexRowContainer>\n        ),\n        Header: t('Chart'),\n        accessor: 'slice_name',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { viz_type: vizType },\n          },\n        }: any) => registry.get(vizType)?.name || vizType,\n        Header: t('Visualization type'),\n        accessor: 'viz_type',\n        size: 'xxl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              datasource_name_text: dsNameTxt,\n              datasource_url: dsUrl,\n            },\n          },\n        }: any) => <GenericLink to={dsUrl}>{dsNameTxt}</GenericLink>,\n        Header: t('Dataset'),\n        accessor: 'datasource_id',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { dashboards },\n          },\n        }: any) => (\n          <CrossLinks\n            crossLinks={ensureIsArray(dashboards).map(\n              (d: ChartLinkedDashboard) => ({\n                title: d.dashboard_title,\n                id: d.id,\n              }),\n            )}\n          />\n        ),\n        Header: t('Dashboards added to'),\n        accessor: 'dashboards',\n        disableSortBy: true,\n        size: 'xxl',\n        hidden: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList\n            tags={tags.filter((tag: Tag) =>\n              tag.type\n                ? tag.type === 1 || tag.type === 'TagTypes.custom'\n                : true,\n            )}\n            maxTags={3}\n          />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM),\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_saved_by: lastSavedBy },\n          },\n        }: any) => <>{changedByName(lastSavedBy)}</>,\n        Header: t('Modified by'),\n        accessor: 'last_saved_by.first_name',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { last_saved_at: lastSavedAt },\n          },\n        }: any) => (\n          <span className=\"no-wrap\">\n            {lastSavedAt ? moment.utc(lastSavedAt).fromNow() : null}\n          </span>\n        ),\n        Header: t('Last modified'),\n        accessor: 'last_saved_at',\n        size: 'xl',\n      },\n      {\n        accessor: 'owners',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_by: createdBy },\n          },\n        }: any) =>\n          createdBy ? `${createdBy.first_name} ${createdBy.last_name}` : '',\n        Header: t('Created by'),\n        accessor: 'created_by',\n        disableSortBy: true,\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleDelete = () =>\n            handleChartDelete(\n              original,\n              addSuccessToast,\n              addDangerToast,\n              refreshData,\n            );\n          const openEditModal = () => openChartEditModal(original);\n          const handleExport = () => handleBulkChartExport([original]);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n\n          return (\n            <StyledActions className=\"actions\">\n              {canDelete && (\n                <ConfirmStatusChange\n                  title={t('Please confirm')}\n                  description={\n                    <>\n                      {t('Are you sure you want to delete')}{' '}\n                      <b>{original.slice_name}</b>?\n                    </>\n                  }\n                  onConfirm={handleDelete}\n                >\n                  {confirmDelete => (\n                    <Tooltip\n                      id=\"delete-action-tooltip\"\n                      title={t('Delete')}\n                      placement=\"bottom\"\n                    >\n                      <span\n                        data-test=\"trash\"\n                        role=\"button\"\n                        tabIndex={0}\n                        className=\"action-button\"\n                        onClick={confirmDelete}\n                      >\n                        <Icons.Trash />\n                      </span>\n                    </Tooltip>\n                  )}\n                </ConfirmStatusChange>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={openEditModal}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </StyledActions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n      },\n    ],\n    [\n      userId,\n      canEdit,\n      canDelete,\n      canExport,\n      saveFavoriteStatus,\n      favoriteStatus,\n      refreshData,\n      addSuccessToast,\n      addDangerToast,\n    ],\n  );\n\n  const favoritesFilter: Filter = useMemo(\n    () => ({\n      Header: t('Favorite'),\n      key: 'favorite',\n      id: 'id',\n      urlDisplay: 'favorite',\n      input: 'select',\n      operator: FilterOperator.chartIsFav,\n      unfilteredLabel: t('Any'),\n      selects: [\n        { label: t('Yes'), value: true },\n        { label: t('No'), value: false },\n      ],\n    }),\n    [],\n  );\n\n  const filters: Filters = useMemo(() => {\n    const filters_list = [\n      {\n        Header: t('Search'),\n        key: 'search',\n        id: 'slice_name',\n        input: 'search',\n        operator: FilterOperator.chartAllText,\n      },\n      {\n        Header: t('Owner'),\n        key: 'owner',\n        id: 'owners',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'owners',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching chart owners values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Created by'),\n        key: 'created_by',\n        id: 'created_by',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'chart',\n          'created_by',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching chart created by values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n          props.user,\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Chart type'),\n        key: 'viz_type',\n        id: 'viz_type',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        selects: registry\n          .keys()\n          .filter(k => nativeFilterGate(registry.get(k)?.behaviors || []))\n          .map(k => ({ label: registry.get(k)?.name || k, value: k }))\n          .sort((a, b) => {\n            if (!a.label || !b.label) {\n              return 0;\n            }\n\n            if (a.label > b.label) {\n              return 1;\n            }\n            if (a.label < b.label) {\n              return -1;\n            }\n\n            return 0;\n          }),\n      },\n      {\n        Header: t('Dataset'),\n        key: 'dataset',\n        id: 'datasource_id',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchDatasets,\n        paginate: true,\n      },\n      {\n        Header: t('Dashboards'),\n        key: 'dashboards',\n        id: 'dashboards',\n        input: 'select',\n        operator: FilterOperator.relationManyMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: fetchDashboards,\n        paginate: true,\n      },\n      ...(userId ? [favoritesFilter] : []),\n      {\n        Header: t('Certified'),\n        key: 'certified',\n        id: 'id',\n        urlDisplay: 'certified',\n        input: 'select',\n        operator: FilterOperator.chartIsCertified,\n        unfilteredLabel: t('Any'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n    ] as Filters;\n    if (isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM) && canReadTag) {\n      filters_list.push({\n        Header: t('Tags'),\n        key: 'tags',\n        id: 'tags',\n        input: 'select',\n        operator: FilterOperator.chartTags,\n        unfilteredLabel: t('All'),\n        fetchSelects: loadTags,\n      });\n    }\n    return filters_list;\n  }, [addDangerToast, favoritesFilter, props.user]);\n\n  const sortTypes = [\n    {\n      desc: false,\n      id: 'slice_name',\n      label: t('Alphabetical'),\n      value: 'alphabetical',\n    },\n    {\n      desc: true,\n      id: 'changed_on_delta_humanized',\n      label: t('Recently modified'),\n      value: 'recently_modified',\n    },\n    {\n      desc: false,\n      id: 'changed_on_delta_humanized',\n      label: t('Least recently modified'),\n      value: 'least_recently_modified',\n    },\n  ];\n\n  const renderCard = useCallback(\n    (chart: Chart) => (\n      <ChartCard\n        chart={chart}\n        showThumbnails={\n          userSettings\n            ? userSettings.thumbnails\n            : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n        }\n        hasPerm={hasPerm}\n        openChartEditModal={openChartEditModal}\n        bulkSelectEnabled={bulkSelectEnabled}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={refreshData}\n        userId={userId}\n        loading={loading}\n        favoriteStatus={favoriteStatus[chart.id]}\n        saveFavoriteStatus={saveFavoriteStatus}\n        handleBulkChartExport={handleBulkChartExport}\n      />\n    ),\n    [\n      addDangerToast,\n      addSuccessToast,\n      bulkSelectEnabled,\n      favoriteStatus,\n      hasPerm,\n      loading,\n    ],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n  if (canDelete || canExport) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      buttonStyle: 'secondary',\n      'data-test': 'bulk-select',\n      onClick: toggleBulkSelect,\n    });\n  }\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Chart')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        history.push('/chart/add');\n      },\n    });\n\n    if (isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n      subMenuButtons.push({\n        name: (\n          <Tooltip\n            id=\"import-tooltip\"\n            title={t('Import charts')}\n            placement=\"bottomRight\"\n          >\n            <Icons.Import data-test=\"import-button\" />\n          </Tooltip>\n        ),\n        buttonStyle: 'link',\n        onClick: openChartImportModal,\n      });\n    }\n  }\n\n  return (\n    <>\n      <SubMenu name={t('Charts')} buttons={subMenuButtons} />\n      {sliceCurrentlyEditing && (\n        <PropertiesModal\n          onHide={closeChartEditModal}\n          onSave={handleChartUpdated}\n          show\n          slice={sliceCurrentlyEditing}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected charts?')}\n        onConfirm={handleBulkChartDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              type: 'danger',\n              onSelect: confirmDelete,\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkChartExport,\n            });\n          }\n          return (\n            <ListView<Chart>\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              cardSortSelectOptions={sortTypes}\n              className=\"chart-list-view\"\n              columns={columns}\n              count={chartCount}\n              data={charts}\n              disableBulkSelect={toggleBulkSelect}\n              refreshData={refreshData}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              renderCard={renderCard}\n              enableBulkTag\n              bulkTagResourceName=\"chart\"\n              addSuccessToast={addSuccessToast}\n              addDangerToast={addDangerToast}\n              showThumbnails={\n                userSettings\n                  ? userSettings.thumbnails\n                  : isFeatureEnabled(FeatureFlag.THUMBNAILS)\n              }\n              defaultViewMode={\n                isFeatureEnabled(FeatureFlag.LISTVIEWS_DEFAULT_CARD_VIEW)\n                  ? 'card'\n                  : 'table'\n              }\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"chart\"\n        resourceLabel={t('chart')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleChartImport}\n        show={importingChart}\n        onHide={closeChartImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(ChartList);\n"],"names":["baseIteratee","baseUniq","module","exports","array","iteratee","length","useChildElementTruncation","elementRef","plusRef","_elementRef$current","_elementRef$current2","elementsTruncated","setElementsTruncated","useState","hasHiddenElements","setHasHiddenElements","previousEffectInfoRef","useRef","scrollWidth","parentElementWidth","plusRefWidth","useLayoutEffect","_currentElement$paren","currentElement","current","plusRefElement","clientWidth","childNodes","previousEffectInfo","parentElement","offsetWidth","truncationWidth","plusSize","maxWidth","elementsCount","width","hiddenElements","i","HelperMessage","styled","div","_ref","theme","colors","grayscale","base","_ref2","typography","sizes","s","StyledInputContainer","_ref3","gridUnit","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","light1","_ref10","_ref11","_ref12","light2","_ref13","_ref14","_ref15","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","___EmotionJSX","Modal","name","className","disablePrimaryButton","onHandledPrimaryAction","onUpload","_fileList$","originFileObj","File","then","result","hide","primaryButtonName","t","primaryButtonType","title","Upload","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","Button","loading","ErrorAlert","showDbInstallInstructions","renderPasswordFields","files","Set","React","map","fileName","indexOf","key","slice","autoComplete","type","value","event","target","_event$currentTarget$","_event$currentTarget","targetValue","currentTarget","toUpperCase","StyledTag","AntdTag","index","onDelete","editable","onClick","toolTipTitle","tagDisplay","useMemo","Tooltip","closable","onClose","handleClose","color","role","href","rel","TagsDiv","tags","maxTags","tempMaxTags","setTempMaxTags","handleDelete","tagsIsLong","extraTags","tag","Tag","expand","undefined","join","collapse","StyledLinkedTooltip","light5","CrossLinksTooltip","children","crossLinks","moreItems","placement","link","Link","to","StyledCrossLinks","weights","bold","CrossLinks","maxLinks","linkPrefix","crossLinksRef","useTruncation","hasMoreItems","links","ref","tooltipLinks","l","FlexRowContainer","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","setupPlugins","registry","getChartMetadataRegistry","createFetchDatasets","async","filterValue","page","pageSize","_json$result","filters","col","opr","queryParams","rison","columns","keys","order_column","order_direction","page_size","json","SupersetClient","get","endpoint","datasets","table_name","tableName","label","data","_uniqBy","totalCount","count","StyledActions","withToasts","props","addDangerToast","addSuccessToast","user","userId","history","useHistory","resourceCount","chartCount","resourceCollection","charts","bulkSelectEnabled","setResourceCollection","setCharts","hasPerm","fetchData","toggleBulkSelect","refreshData","useListViewResource","chartIds","c","roles","useSelector","canReadTag","findPermission","saveFavoriteStatus","favoriteStatus","useFavoriteStatus","sliceCurrentlyEditing","handleChartUpdated","openChartEditModal","closeChartEditModal","useChartEditModal","importingChart","showImportModal","preparingExport","setPreparingExport","userSettings","dangerouslyGetItemDoNotUse","toString","canCreate","canEdit","canDelete","canExport","isFeatureEnabled","FeatureFlag","VERSIONED_EXPORT","initialSort","desc","handleBulkChartExport","chartsToExport","ids","handleResourceExport","fetchDashboards","_response$json","_response$json$result","_response$json2","FilterOperator","startsWith","response","catch","dashboards","dashboard_title","dashboardTitle","Cell","row","original","FaveStar","itemId","saveFaveStar","isStarred","Header","disableSortBy","size","hidden","url","slice_name","sliceName","certified_by","certifiedBy","certification_details","certificationDetails","description","CertifiedBadge","details","InfoTooltip","tooltip","viewBox","accessor","_registry$get","viz_type","vizType","datasource_name_text","dsNameTxt","datasource_url","dsUrl","GenericLink","ensureIsArray","d","TagsList","TAGGING_SYSTEM","last_saved_by","lastSavedBy","changedByName","first_name","last_name","last_saved_at","lastSavedAt","moment","fromNow","_ref16","created_by","createdBy","_ref17","ConfirmStatusChange","onConfirm","handleChartDelete","confirmDelete","tabIndex","Icons","Trash","handleExport","Share","openEditModal","EditAlt","favoritesFilter","urlDisplay","input","operator","chartIsFav","unfilteredLabel","selects","filters_list","chartAllText","relationManyMany","fetchSelects","createFetchRelated","createErrorHandler","errMsg","paginate","relationOneMany","equals","k","_registry$get2","nativeFilterGate","behaviors","_registry$get3","sort","a","b","chartIsCertified","push","chartTags","loadTags","sortTypes","renderCard","useCallback","chart","ChartCard","showThumbnails","thumbnails","THUMBNAILS","subMenuButtons","buttonStyle","Import","openChartImportModal","SubMenu","buttons","PropertiesModal","onSave","chartsToDelete","delete","message","bulkActions","onSelect","ListView","cardSortSelectOptions","disableBulkSelect","enableBulkTag","bulkTagResourceName","defaultViewMode","LISTVIEWS_DEFAULT_CARD_VIEW","ImportModelsModal","handleChartImport","closeChartImportModal","Loading"],"sourceRoot":""}