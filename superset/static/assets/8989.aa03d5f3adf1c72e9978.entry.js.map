{"version":3,"file":"8989.aa03d5f3adf1c72e9978.entry.js","mappings":"8pFAwBA,MAAMA,EAAkB,CACtBC,OAAOC,EAAAA,EAAAA,GAAE,QACTC,UAAU,EACVC,aAAaF,EAAAA,EAAAA,GAAE,iCAGJG,EAAkD,IAC1DL,EACHM,eAAgB,CACd,CAAC,eACD,CAAC,oBACD,CAAC,mBACD,CAAC,gBAIQC,EAAyCC,EAAAA,GAClD,CAAEF,eAAgB,IAClB,IACKN,EACHM,eAAgB,CACd,CAAC,oBACD,CAAC,mBACD,CAAC,gBAIIG,EAA+CD,EAAAA,GACxD,CAAEF,eAAgB,IAClB,IACKN,EACHM,eAAgB,CAAC,CAAC,oBAAqB,CAAC,gBAGjCI,EAAkD,CAC7DT,OAAOC,EAAAA,EAAAA,GAAE,2BACTC,UAAU,EACVG,eAAgB,CACd,CAAC,cACD,CAAC,YACD,CACE,CACEK,KAAM,WACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,YACTY,QAAQ,EACRV,aAAaF,EAAAA,EAAAA,GAAE,gCAGnB,CACES,KAAM,gBACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,2BACTY,QAAQ,EACRV,aAAaF,EAAAA,EAAAA,GAAE,qDAGnB,CACES,KAAM,aACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,kBACTY,QAAQ,EACRV,aAAaF,EAAAA,EAAAA,GACX,6DAIN,CACES,KAAM,gBACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,oBACTY,QAAQ,EACRV,aAAaF,EAAAA,EAAAA,GACX,+FAQCa,EAAyC,CACpDd,OAAOC,EAAAA,EAAAA,GAAE,gBACTI,eAAgB,CAAC,CAAC,kBAGPU,EAAyC,CACpDf,OAAOC,EAAAA,EAAAA,GAAE,0BACTe,YAAa,OACbd,UAAU,EACVG,eAAgB,CACd,CACE,CACEK,KAAM,oBACNC,OAAQ,CACNC,KAAM,yBACNZ,MAAO,GACPiB,QAAS,GACTd,aAAaF,EAAAA,EAAAA,GAAE,qBACfiB,eAAe,O,wDCtGlB,MAAMC,EAAuD,CAClEnB,OAAOC,EAAAA,EAAAA,GAAE,sBACTe,YAAa,OACbb,aAAaF,EAAAA,EAAAA,GACX,qGAIFI,eAAgB,CACd,EAACe,EAAAA,EAAAA,IAACC,EAAAA,EAAuB,MAAEpB,EAAAA,EAAAA,GAAE,oBAC7B,CACE,CACES,KAAM,eACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,oBACTgB,QAAS,KACTK,QAAS,CAAC,CAAC,MAAMrB,EAAAA,EAAAA,GAAE,UAAUsB,QAC3BC,EAAAA,EAAAA,GAAoBC,OAAOC,OAAOC,EAAAA,MAEpCxB,aAAaF,EAAAA,EAAAA,GACX,0FAMR,CACE,CACES,KAAM,kBACNC,OAAQ,CACNC,KAAM,cACNZ,OAAOC,EAAAA,EAAAA,GAAE,WACT2B,OAAO,EACPzB,aAAaF,EAAAA,EAAAA,GACX,8FAGF4B,WAAYA,CAAAC,EAAAC,KAA2B,IAAAC,EAAAC,EAAA,IAA1B,SAAEC,GAAUJ,GAAE,KAAEpB,GAAMqB,EAEjC,MAAMI,EAAyBzB,EAAK0B,SAAS,MACzC,iBACA,eACJ,OACEC,QAAwC,OAAjCL,EAACE,EAASC,SAAuB,EAAhCH,EAAkCM,SACV,OAAhCL,EAAAC,EAASC,SAAuB,EAAhCF,EAAkCK,SAAUX,EAAAA,GAAYY,MAAM,KAMxE,CACE,CACE7B,KAAM,cACNC,OAAQ,CACNC,KAAM,cACNZ,OAAOC,EAAAA,EAAAA,GAAE,eACT2B,OAAO,EACPzB,aAAaF,EAAAA,EAAAA,GACX,0RAMF4B,WAAYA,CAAAW,EAAAC,KAA2B,IAAAC,EAAAC,EAAA,IAA1B,SAAET,GAAUM,GAAE,KAAE9B,GAAM+B,EAEjC,MAAMN,EAAyBzB,EAAK0B,SAAS,MACzC,iBACA,eACJ,OACEC,QAAwC,OAAjCK,EAACR,EAASC,SAAuB,EAAhCO,EAAkCJ,SACV,OAAhCK,EAAAT,EAASC,SAAuB,EAAhCQ,EAAkCL,SAAUX,EAAAA,GAAYY,MAAM,KAMxE,EAACnB,EAAAA,EAAAA,IAACC,EAAAA,EAAuB,MAAEpB,EAAAA,EAAAA,GAAE,qBAC7B,CACE,CACES,KAAM,eACNC,OAAQ,CACNC,KAAM,gBACNgC,OAAO,EACPC,UAAU,EACV7C,OAAOC,EAAAA,EAAAA,GAAE,cACTqB,QAAS,CACP,CAAC,aAAarB,EAAAA,EAAAA,GAAE,cAChB,CAAC,cAAcA,EAAAA,EAAAA,GAAE,eACjB,CAAC,eAAeA,EAAAA,EAAAA,GAAE,gBAClB,CAAC,eAAeA,EAAAA,EAAAA,GAAE,gBAClB,CAAC,gBAAgBA,EAAAA,EAAAA,GAAE,iBACnB,CAAC,cAAcA,EAAAA,EAAAA,GAAE,eACjB,CAAC,iBAAiBA,EAAAA,EAAAA,GAAE,kBACpB,CAAC,eAAeA,EAAAA,EAAAA,GAAE,gBAClB,CAAC,iBAAiBA,EAAAA,EAAAA,GAAE,kBACpB,CAAC,eAAeA,EAAAA,EAAAA,GAAE,iBAEpBE,aAAaF,EAAAA,EAAAA,GACX,6LAQR,CACE,CACES,KAAM,kBACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,oBACTgB,QAAS,SACTK,QAAS,CACP,CAACwB,EAAAA,GAAeC,QAAQ9C,EAAAA,EAAAA,GAAE,kBAC1B,CAAC6C,EAAAA,GAAeE,YAAY/C,EAAAA,EAAAA,GAAE,eAC9B,CAAC6C,EAAAA,GAAeG,YAAYhD,EAAAA,EAAAA,GAAE,sBAC9B,CAAC6C,EAAAA,GAAeI,OAAOjD,EAAAA,EAAAA,GAAE,WAE3BE,aAAaF,EAAAA,EAAAA,GACX,qMAOR,EAACmB,EAAAA,EAAAA,IAACC,EAAAA,EAAuB,MAAEpB,EAAAA,EAAAA,GAAE,cAC7B,CACE,CACES,KAAM,gBACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACV7C,OAAOC,EAAAA,EAAAA,GAAE,QACTgB,QAAS,KACTK,QAAS,CACP,CAAC,MAAMrB,EAAAA,EAAAA,GAAE,yBACT,CAAC,MAAMA,EAAAA,EAAAA,GAAE,uBACT,CAAC,MAAMA,EAAAA,EAAAA,GAAE,6BACT,CAAC,MAAMA,EAAAA,EAAAA,GAAE,6BACT,CAAC,OAAOA,EAAAA,EAAAA,GAAE,4BACV,CAAC,MAAMA,EAAAA,EAAAA,GAAE,0BACT,CAAC,OAAOA,EAAAA,EAAAA,GAAE,2BACV,CAAC,MAAMA,EAAAA,EAAAA,GAAE,0BAEXE,aAAaF,EAAAA,EAAAA,GAAE,2BAIrB,CACE,CACES,KAAM,kBACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,eACTgB,QAAS,KACTK,QAAS,CACP,CAAC,UAAUrB,EAAAA,EAAAA,GAAE,oBACb,CAAC,YAAYA,EAAAA,EAAAA,GAAE,oBACf,CAAC,UAAUA,EAAAA,EAAAA,GAAE,yBACb,CAAC,SAASA,EAAAA,EAAAA,GAAE,mBACZ,CAAC,SAASA,EAAAA,EAAAA,GAAE,oBACZ,CAAC,UAAUA,EAAAA,EAAAA,GAAE,kBACb,CAAC,QAAQA,EAAAA,EAAAA,GAAE,gBACX,CAAC,OAAOA,EAAAA,EAAAA,GAAE,gBAEZE,aAAaF,EAAAA,EAAAA,GAAE,+BC7KZkD,EAAmB,GAEnBC,EAA0D,CACrEpD,OAAOC,EAAAA,EAAAA,GAAE,0BACTC,UAAU,EACVc,YAAa,OACbX,eAAgB,CACd,CACE,CACEK,KAAM,oBACNC,OAAQ,CACNC,KAAM,yBACNZ,MAAO,GACPiB,QAASkC,EACThD,aAAaF,EAAAA,EAAAA,GAAE,qBACfiB,eAAe,O,0BCXlB,MAAMmC,EAAwB,CACnCC,iBAAiB,EACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,0BAA2B,MAGhBC,EAAsD,CACjE5D,OAAOC,EAAAA,EAAAA,GAAE,wBACTC,UAAU,EACVG,eAAgB,CACd,CACE,CACEK,KAAM,kBACNC,OAAQ,CACNC,KAAM,kBACNZ,OAAOC,EAAAA,EAAAA,GAAE,mBACTiB,eAAe,EACfD,QAASoC,EAAsBC,gBAC/BnD,aAAaF,EAAAA,EAAAA,GAAE,yBAIrB,CACE,CACES,KAAM,kBACNC,OAAQ,CACNC,KAAM,cACNZ,OAAOC,EAAAA,EAAAA,GAAE,oBACT4D,WAAY,CAACC,EAAAA,GACb7C,QAASoC,EAAsBG,gBAC/BrD,aAAaF,EAAAA,EAAAA,GACX,6DAKR,CACE,CACES,KAAM,mBACNC,OAAQ,CACNC,KAAM,cACNZ,OAAOC,EAAAA,EAAAA,GAAE,uBACT4D,WAAY,CAACE,EAAAA,GACb9C,QAASoC,EAAsBE,iBAC/BpD,aAAaF,EAAAA,EAAAA,GACX,kEAKR,CACE,CACES,KAAM,4BACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACV7C,OAAOC,EAAAA,EAAAA,GAAE,sBACTqB,QAAS,CACP,CAAC,MAAMrB,EAAAA,EAAAA,GAAE,YACT,EAAC,GAAMA,EAAAA,EAAAA,GAAE,QACT,EAAC,GAAOA,EAAAA,EAAAA,GAAE,QAEZgB,QAASoC,EAAsBM,0BAC/BxD,aAAaF,EAAAA,EAAAA,GACX,wGAKR,CACE,CACES,KAAM,4BACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACV7C,OAAOC,EAAAA,EAAAA,GAAE,sBACTqB,QAAS,CACP,CAAC,MAAMrB,EAAAA,EAAAA,GAAE,YACT,EAAC,GAAMA,EAAAA,EAAAA,GAAE,QACT,EAAC,GAAOA,EAAAA,EAAAA,GAAE,QAEZgB,QAASoC,EAAsBK,0BAC/BvD,aAAaF,EAAAA,EAAAA,GACX,wGAKR,CACE,CACES,KAAM,2BACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACV7C,OAAOC,EAAAA,EAAAA,GAAE,qBACTqB,QAAS,CACP,CAAC,MAAMrB,EAAAA,EAAAA,GAAE,YACT,EAAC,GAAMA,EAAAA,EAAAA,GAAE,QACT,EAAC,GAAOA,EAAAA,EAAAA,GAAE,QAEZgB,QAASoC,EAAsBI,yBAC/BtD,aAAaF,EAAAA,EAAAA,GACX,yGCzGC+D,EAAiC,CAC5C,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAEpBC,EAA6C,CACxD,CAAC,QAAQhE,EAAAA,EAAAA,GAAE,SACX,CAAC,OAAOA,EAAAA,EAAAA,GAAE,SAECiE,EAA2C,CACtDlE,OAAOC,EAAAA,EAAAA,GAAE,eACTe,YAAa,YACbd,UAAU,EACVG,eAAgB,CACd,EAACe,EAAAA,EAAAA,IAACC,EAAAA,EAAuB,MAAEpB,EAAAA,EAAAA,GAAE,YAC7B,CACE,CACES,KAAM,eACNC,OAAQ,CACNC,KAAM,cACNZ,OAAOC,EAAAA,EAAAA,GAAE,gBACTiB,eAAe,EACfD,QAAS,GACTd,aAAaF,EAAAA,EAAAA,GAAE,mDAIrB,CACE,CACES,KAAM,sBACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACVsB,WAAW,EACXnE,OAAOC,EAAAA,EAAAA,GAAE,8BACTiB,eAAe,EACfD,QAAS+C,EAAqB,GAC9B1C,SAASE,EAAAA,EAAAA,GAAoBwC,GAC7B7D,aAAaF,EAAAA,EAAAA,GAAE,mDAIrB,EAACmB,EAAAA,EAAAA,IAACC,EAAAA,EAAuB,MAAEpB,EAAAA,EAAAA,GAAE,YAC7B,CACE,CACES,KAAM,eACNC,OAAQ,CACNC,KAAM,cACNZ,OAAOC,EAAAA,EAAAA,GAAE,gBACTiB,eAAe,EACfD,QAAS,GACTd,aAAaF,EAAAA,EAAAA,GAAE,mDAIrB,CACE,CACES,KAAM,sBACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACVsB,WAAW,EACXnE,OAAOC,EAAAA,EAAAA,GAAE,uBACTiB,eAAe,EACfD,QAAS+C,EAAqB,GAC9B1C,SAASE,EAAAA,EAAAA,GAAoBwC,GAC7B7D,aAAaF,EAAAA,EAAAA,GAAE,mDAIrB,CACE,CACES,KAAM,wBACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACVsB,WAAW,EACXnE,OAAOC,EAAAA,EAAAA,GAAE,yBACTiB,eAAe,EACfD,QAASgD,EAAuB,GAAG,GACnC3C,QAAS2C,EACT9D,aAAaF,EAAAA,EAAAA,GAAE,qD,4FC/DlB,MAAMmE,EAA0B,CACrC1D,KAAM,mBACNC,OAAQ,CACNC,KAAM,gBACNZ,OAAOC,EAAAA,EAAAA,GAAE,qBACTgB,QAAS,KACTK,QAAS,CACP,CAAC,MAAMrB,EAAAA,EAAAA,GAAE,SACT,CAACoE,EAAAA,GAAiBC,KAAKrE,EAAAA,EAAAA,GAAE,QACzB,CAACoE,EAAAA,GAAiBE,QAAQtE,EAAAA,EAAAA,GAAE,YAE9BE,aAAaF,EAAAA,EAAAA,GAAE,8CAInB,SAASuE,EAAWtC,GAA6B,IAAAuC,EAAAC,EAAAC,EAC/C,SACEC,EAAAA,EAAAA,GAAkB,MAAR1C,GAAgB,OAARuC,EAARvC,EAAU2C,aAAF,EAARJ,EAAkBnC,UAC3BwC,EAAAA,EAAAA,IACCC,EAAAA,EAAAA,GAAuB,MAAR7C,GAAgB,OAARwC,EAARxC,EAAU2C,aAAF,EAARH,EAAkBpC,OACzB,MAARJ,GAAoB,OAAZyC,EAARzC,EAAU8C,iBAAF,EAARL,EAAsBK,YAG5B,CAEA,MAAMC,EAAsBnD,IAAA,IAAAoD,EAAAC,EAAA,IAAC,SAAEjD,GAA6CJ,EAAA,OACzE0C,EAAWtC,IACuC,KAAnDkD,EAAAA,EAAAA,GAAsB,MAARlD,GAAiB,OAATgD,EAARhD,EAAUmD,cAAF,EAARH,EAAmB5C,OAAOgD,QACW,KAAnDF,EAAAA,EAAAA,GAAsB,MAARlD,GAAiB,OAATiD,EAARjD,EAAUqD,cAAF,EAARJ,EAAmB7C,OAAOgD,MAAY,EAEhDE,EAA2BzD,IAAA,IAAA0D,EAAAC,EAAA,IAAC,SAChCxD,GAGDH,EAAA,OACEyC,EAAWtC,QACTkD,EAAAA,EAAAA,GAAsB,MAARlD,GAAiB,OAATuD,EAARvD,EAAUmD,cAAF,EAARI,EAAmBnD,OAAOgD,SACzCF,EAAAA,EAAAA,GAAsB,MAARlD,GAAiB,OAATwD,EAARxD,EAAUqD,cAAF,EAARG,EAAmBpD,OAAOgD,OAAS,EAAE,EAE1CK,EAAmB,CAC9BjF,KAAM,cACNC,OAAQ,CACNC,KAAM,mBACNZ,MAAQ4F,IAAwB,IAAAC,EAAA,MACG,gBAAlB,OAAfA,EAAAD,EAAME,gBAAS,EAAfD,EAAiBE,cACb9F,EAAAA,EAAAA,GAAE,mBACFA,EAAAA,EAAAA,GAAE,iBAAiB,EACzBE,aAAaF,EAAAA,EAAAA,GAAE,kDACf+F,sBAAuBA,KAAM,EAC7BC,gBAAiBA,CAACL,EAA0BM,KAA8B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxE,MAAM,SAAErE,EAAQ,WAAE8C,GAAeY,EAC3BY,GAAUC,EAAAA,EAAAA,IAAUzB,GAAcA,OAAa0B,EAC/CC,EAAU,CAAS,MAARzE,GAAgB,OAARiE,EAARjE,EAAU2C,aAAF,EAARsB,EAAkB7D,OAA0BsE,OAC3DvE,SAEIkD,EAAU,KACXH,EAAAA,EAAAA,GAAsB,MAARlD,GAAiB,OAATkE,EAARlE,EAAUqD,cAAF,EAARa,EAAmB9D,OAC5B,MAARJ,GAAiC,OAAzBmE,EAARnE,EAAU2E,8BAAF,EAARR,EAAmC/D,OACnCsE,OAAOvE,SACHyE,EAAe,IAAI,IAAIC,IAAIxB,EAAQyB,IAAIC,EAAAA,KACvCC,EAAU,IACXP,EAAQK,KAAIG,IAAS,IAAAC,EACtB,MAAM9E,GAAQyC,EAAAA,EAAAA,GAAeoC,GAC7B,MAAO,CACL7E,QACAtC,OAAc,MAAPwG,GAAoB,OAAbY,EAAPZ,EAASa,kBAAF,EAAPD,EAAuB9E,KAAUA,EACzC,OAEAwE,EAAaE,KAAI1E,IAAK,IAAAgF,EAAA,MAAK,CAC5BhF,QACAtC,OAAc,MAAPwG,GAAoB,OAAbc,EAAPd,EAASa,kBAAF,EAAPC,EAAuBhF,KAAUA,EACzC,KAYH,MAAO,CACLiF,cAT8B,iBAAvBrB,EAAa5D,OACpB4E,EAAQF,KAAIQ,GAAUA,EAAOlF,QAAOmF,SAASvB,EAAa5D,UACzDwC,EAAAA,EAAAA,IACCC,EAAAA,EAAAA,GAAuB,MAAR7C,GAAgB,OAARoE,EAARpE,EAAU2C,aAAF,EAARyB,EAAkBhE,OACzB,MAARJ,GAAoB,OAAZqE,EAARrE,EAAU8C,iBAAF,EAARuB,EAAsBvB,aAMxBkC,UACD,EAEHrF,WAAYoD,IAIHyC,EAAsB,CACjChH,KAAM,kBACNC,OAAQ,CACNC,KAAM,kBACNZ,MAAQ4F,IAAwB,IAAA+B,EAAA,MACG,gBAAlB,OAAfA,EAAA/B,EAAME,gBAAS,EAAf6B,EAAiB5B,cACb9F,EAAAA,EAAAA,GAAE,0BACFA,EAAAA,EAAAA,GAAE,wBAAwB,EAChCgB,SAAS,EACTd,aAAaF,EAAAA,EAAAA,GAAE,6DACf4B,WAAYoD,IAIH2C,EAAyB,CACpClH,KAAM,qBACNC,OAAQ,CACNC,KAAM,gBACNiC,UAAU,EACV7C,MAAQ4F,IAAwB,IAAAiC,EAAA,MACG,gBAAlB,OAAfA,EAAAjC,EAAME,gBAAS,EAAf+B,EAAiB9B,cACb9F,EAAAA,EAAAA,GAAE,mBACFA,EAAAA,EAAAA,GAAE,iBAAiB,EACzBqB,QAASwG,EAAAA,GACT7G,QAAS8G,EAAAA,GAA+BC,iBACxC9G,eAAe,EACff,aAAaF,EAAAA,EAAAA,GAAE,mDACf4B,WAAY2D,IAIHyC,EAAkC,CAC7CvH,KAAM,+BACNC,OAAQ,CACNC,KAAM,kBACNZ,MAAQ4F,IAAwB,IAAAsC,EAAA,MACG,gBAAlB,OAAfA,EAAAtC,EAAME,gBAAS,EAAfoC,EAAiBnC,cACb9F,EAAAA,EAAAA,GAAE,0BACFA,EAAAA,EAAAA,GAAE,wBAAwB,EAChCgB,QAAS8G,EAAAA,GAA+BI,sBACxChI,aAAaF,EAAAA,EAAAA,GAAE,6DACfiB,eAAe,EACfW,WAAY2D,ICnJV4C,EAAwC,CAC5C,CAAC,WACD,CAAC,WACD,CAAChE,GACD,CAAC,iBACD,CAAC,SACD,CAAC,2BACD,CAAC,cACD,CAAC,aACD,CAAC,mBACD,CAAC,uBAGUiE,EAAoD,CAC/DrI,OAAOC,EAAAA,EAAAA,GAAE,SACTC,UAAU,EACVG,eAAgB,CACd,CAACE,EAAAA,GAAsB,SAAW,MAClC,CAACA,EAAAA,GAAsB,kBAAoB,SACxC6H,IAIME,EAAiE,CAC5EtI,OAAOC,EAAAA,EAAAA,GAAE,SACTC,UAAU,EACVG,eAAgB,CACd,CAACE,EAAAA,GAAsB,SAAW,MAClC,CAACA,EAAAA,GAAsB,kBAAoB,MAC3C,CAACA,EAAAA,GAAsBoF,EAAmB,MAC1C,CAACpF,EAAAA,GAAsBmH,EAAsB,MAC7C,CAACnH,EAAAA,GAAsBqH,EAAyB,MAChD,CAACrH,EAAAA,GAAsB0H,EAAkC,SACtDG,I,oCCzCO,SAAUG,EAAWC,GAEjC,IAAIC,EAWJ,OAVID,GAAgBA,EAAalD,OAAS,IACxCkD,EAAaE,SAAQC,IACG,UAAlBA,EAAEC,cACJH,EAAS,Q,IAGRA,IACHA,EAASD,EAAa,GAAGI,cAGtBH,CACT,C,6UCbO,MAAMI,GAAuB,CAClCC,eAAgB,CAAC,EACjBC,iBAAkB,CAAC,EACnBpC,QAAS,CACP,CACEqC,wBAAoBtC,EACpBuC,sBAAuB,KACvBC,aAAc,KACdC,YAAa,MACbhJ,YAAa,KACbiJ,WAAY,GACZC,YAAY,EACZhE,SAAS,EACTiE,GAAI,IACJC,cAAc,EACdC,SAAS,EACTC,mBAAoB,KACpB7I,KAAM,SACN8I,aAAc,EACdC,aAAc,KACdC,iBAAkB,MAEpB,CACEZ,wBAAoBtC,EACpBuC,sBAAuB,KACvBC,aAAc,KACdC,YAAa,SACbhJ,YAAa,KACbiJ,WAAY,GACZC,YAAY,EACZhE,SAAS,EACTiE,GAAI,IACJC,cAAc,EACdC,SAAS,EACTC,mBAAoB,KACpB7I,KAAM,cACN8I,aAAc,EACdC,aAAc,GACdC,iBAAkB,MAEpB,CACEZ,wBAAoBtC,EACpBuC,sBAAuB,KACvBC,aAAc,KACdC,YAAa,QACbhJ,YAAa,KACbiJ,WAAY,GACZC,YAAY,EACZhE,SAAS,EACTiE,GAAI,IACJC,cAAc,EACdC,SAAS,EACTC,mBAAoB,KACpB7I,KAAM,cACN8I,aAAc,EACdC,aAAc,KACdC,iBAAkB,MAEpB,CACEZ,wBAAoBtC,EACpBuC,sBAAuB,KACvBC,aAAc,KACdC,YAAa,KACbhJ,YAAa,KACbiJ,WAAY,GACZC,YAAY,EACZhE,SAAS,EACTiE,GAAI,IACJC,cAAc,EACdC,SAAS,EACTC,mBAAoB,KACpB7I,KAAM,8BACN8I,aAAc,EACdC,aAAc,KACdC,iBAAkB,MAEpB,CACEZ,wBAAoBtC,EACpBuC,sBAAuB,KACvBC,aAAc,KACdC,YAAa,OACbhJ,YAAa,KACbiJ,WAAY,GACZC,YAAY,EACZhE,SAAS,EACTiE,GAAI,IACJC,cAAc,EACdC,SAAS,EACTC,mBAAoB,KACpB7I,KAAM,eACN8I,aAAc,EACdC,aAAc,KACdC,iBAAkB,OAGtBC,gBAAiB,cACjB1J,YAAa,KACb2J,iBAAkB,KAClBR,GAAI,EACJS,cAAe,KACfxE,QAAS,CACP,CACE0D,sBAAuB,KACvBC,aAAc,KACdc,SAAU,KACVC,SAAU,KACV9J,YAAa,KACbiJ,WAAY,WACZE,GAAI,EACJC,cAAc,EACdX,YAAa,QACbe,aAAc,WACdC,iBAAkB,GAClBM,aAAc,OAGlBxJ,KAAM,qBACNyJ,iBAAkB,GAClBC,OAAQ,CACN,CACEC,WAAY,QACZf,GAAI,EACJgB,UAAW,OACXC,SAAU,UAGd3J,K,SAAM4J,GAAeC,QACrBC,IAAK,WACLrD,YAAa,CAAC,GC5HHsD,GAAWC,C,wECExB,MAAMC,EAAmB,2BAEZC,EAAgEA,CAC3EC,EACAC,KAEA,MAAM,QAAE3F,EAAO,eAAE4F,GAAmBF,EAEpC,GAAIE,EAAgB,CAClB,IAAIC,EACAC,EACJ,MAAMC,EAAkBP,EAAiBQ,KAAKJ,GAE9C,GAAuB,UAAnBA,GAA+BA,EAE5B,GAAuB,0BAAnBA,EACTC,EAAc,cACT,KAAIE,EAOT,MAAM,IAAIE,MAAM,6BAA6BL,KAN7CC,EAAc,aACdC,EAAc,CACZI,SAASH,EAAgB,GAAI,IAC7BG,SAASH,EAAgB,GAAI,I,MAP/BF,EAAc,QAahB,MAAO,CACLM,UAAW,UACXtE,QAAS,CACPuE,aAAcP,EACdC,cACA9F,SAASD,EAAAA,EAAAA,GAAcC,GAAS2B,IAAIjC,EAAAA,GACpCQ,SAASH,EAAAA,EAAAA,GAAc4F,EAAYzF,SAASyB,IAAIC,EAAAA,I,CAItC,C,mCC1CX,MAAMyE,EACXA,CAACX,EAAUC,KACT,GAAID,EAASY,iBACX,MAAO,CACLH,UAAW,eACXtE,QAAS,CACPnB,YAAagF,EAASY,kBAIZ,C,mCCVb,MAAMC,EAAgEA,CAC3Eb,EACAC,KAAW,CAEXQ,UAAW,W,6FCEN,MAAMK,EAA4DA,CACvEd,EACAC,KAEA,MAAMlE,EAAe,KAChB1B,EAAAA,EAAAA,GAAc4F,EAAYzF,aAC1BuG,EAAAA,EAAAA,GAAoBf,IACvB/D,IAAIC,EAAAA,GACA8E,GAAaC,EAAAA,EAAAA,IAAcjB,GAC3BpE,EAAUqE,EAAYiB,gBAAkBjB,EAAYrE,QAE1D,GAAIoF,GAAcjF,EAAaxB,OAC7B,MAAO,CACLkG,UAAW,QACXtE,QAAS,CACPgF,MAAO,CAACH,GACRpF,SAASvB,EAAAA,EAAAA,GAAcuB,GAASK,IAAIjC,EAAAA,GAGpCoH,WAAY1K,OAAO2K,YACjBtF,EAAaE,KAAIyB,GAAU,CAACA,EAAQ,CAAE4D,SAAU,YAElDC,uBAA+B,MAARvB,GAAAA,EAAUwB,qBAKvB,C,kDCjCX,MAAMC,EAAgEA,CAC3EzB,EACAC,KAEA,MAAMe,GAAaC,EAAAA,EAAAA,IAAcjB,GACjC,GAAIA,EAASzH,iBAAmByI,EAC9B,MAAO,CACLP,UAAW,UACXtE,QAAS,CACPuF,WAAY1B,EAAS2B,gBACrBC,QAASpB,SAASR,EAASvH,gBAAiB,IAC5CoJ,oBAAqBC,WAAW9B,EAASxH,kBACzCuJ,mBAAoB/B,EAASpH,0BAC7BoJ,mBAAoBhC,EAASrH,0BAC7BsJ,kBAAmBjC,EAAStH,yBAC5ByI,MAAOH,GAIG,C,wGCZX,MAAMkB,EAA8DA,CACzElC,EACAC,KAEA,MAAMzF,GAAUH,EAAAA,EAAAA,GAAc4F,EAAYzF,SACpCoB,GAAUvB,EAAAA,EAAAA,GACd4F,EAAYiB,gBAAkBjB,EAAYrE,UAEtC,gBAAEuG,GAAoBnC,EACtBgB,GAAaC,EAAAA,EAAAA,IAAcjB,GAOjC,GACqB,IAAnBxF,EAAQD,QACRqB,EAAQrB,OAAS,GACjByG,MAIIoB,EAAAA,EAAAA,GAAiBpC,EAAUC,KAC3B,CACElI,EAAAA,GAAeE,WACfF,EAAAA,GAAeI,MACfJ,EAAAA,GAAeG,YACfwE,SAASsD,EAASqC,wBAGJ1G,IAApBwG,GACEA,EACF,CACA,MAAMG,EAAyC,GAE/C,IAIEF,EAAAA,EAAAA,GAAiBpC,EAAUC,IAC3BD,EAASqC,kBAAoBtK,EAAAA,GAAeC,OAC5C,CACA,MAAMuK,GAAkBC,EAAAA,EAAAA,GAAoBxC,EAAUC,GAChDwC,GAAcpI,EAAAA,EAAAA,GAAc2F,EAAS0C,cAC3C,IAAIH,EAAgBI,QAAQhF,SAAQiF,IAClC,MAAMC,EAAcJ,EAAYK,MAAKC,GACnCH,EAAiBlG,SAASqG,KAE5BT,EAAYU,KAAK,CAACJ,EAAkBC,GAAa,G,CAMrD,OAFAP,EAAYU,KAAK,EAAC9G,EAAAA,EAAAA,GAAe1B,EAAQ,IAAK,OAEvC,CACLiG,UAAW,SACXtE,QAAS,CACPP,QAASlF,OAAO2K,YAAYiB,GAC5BW,MAAO,EACPC,SAAS,G,CAKC,C,mCCvEX,MAAMC,EAAkEA,CAC7EnD,EACAC,KAEA,MAAMmD,EAAgD,aAA7BpD,EAASqD,gBAC5BC,EAAiBF,EAAmB,SAAWpD,EAASqD,gBACxDE,EAAevD,EAASwD,cAC9B,GAAIF,GAAkBC,EACpB,MAAO,CACL9C,UAAW,WACXtE,QAAS,CACPsH,OAAQH,EACRI,KAAMH,EACNI,WAAYP,EAAmB,EAAI,MAIzB,C,6FCXX,MAAMQ,EAETA,CAAC5D,EAAUC,KACb,IAAIrE,EACJ,IAAIwG,EAAAA,EAAAA,GAAiBpC,EAAUC,GAAc,CAC3C,MAAM4D,GAAarB,EAAAA,EAAAA,GAAoBxC,EAAUC,GACjDrE,EAAU,IACLkI,MAAMC,KAAKF,EAAWlN,aACtBmN,MAAMC,KAAKF,EAAWlB,Q,MAG3B/G,GAAUvB,EAAAA,EAAAA,GAAc4F,EAAYzF,SAASyB,KAAIyB,GACzB,iBAAXA,EACFA,EAEFA,EAAOzI,QAGlB,MAAM+O,EAAatN,OAAO2K,YAAYzF,EAAQK,KAAIgI,GAAO,CAACA,EAAKA,MAE/D,OAAIjE,EAASkE,eAAiBtN,EAAAA,GAAYY,OACjC,CACLiJ,UAAW,MACXtE,QAAS,CACPmF,SAAU,MACV1F,QAASoI,IAMb,CAACpN,EAAAA,GAAYuN,IAAKvN,EAAAA,GAAYwN,KAAMxN,EAAAA,GAAYyN,KAAK3H,SACnDsD,EAASkE,cAGJ,CACLzD,UAAW,UACXtE,QAAS,CACP+H,aAAclE,EAASkE,aACvBI,QAAQC,EAAAA,EAAAA,GAAYvE,EAASwE,gBAAiB,GAC9CC,aAAaF,EAAAA,EAAAA,GAAYvE,EAASyE,YAAa,GAC/C7I,QAASoI,SAXf,CAgBgB,C,kHC7CX,MAAMU,EAA0DA,CACrE1E,EACAC,KAGA,MAAM0E,EAAiB,EACrB1D,EAAAA,EAAAA,IAAcjB,OACX3F,EAAAA,EAAAA,GAAc2F,EAASxF,SAASyB,IAAIC,EAAAA,OACpC6E,EAAAA,EAAAA,GAAoBf,GAAU/D,IAAIC,EAAAA,IACrCL,OAAOvE,SAET,GACE9B,EAAAA,KACAqE,EAAAA,EAAAA,GAAkB,MAARmG,OAAQ,EAARA,EAAU4E,eACpB/K,EAAAA,EAAAA,GAAkB,MAARmG,OAAQ,EAARA,EAAU6E,kBACpBF,EAAejI,SAASsD,EAAS4E,cAEjCE,IAAQ9E,EAAS1F,SAEjB,OAAI0F,EAAS4E,eAAgB3D,EAAAA,EAAAA,IAAcjB,GAClC,CACLS,UAAW,OACXtE,QAAS,CACP4I,eAAe,EACfC,UAAWhF,EAAS6E,kBAKnB,CACLpE,UAAW,OACXtE,QAAS,CACP8I,GAAIjF,EAAS4E,YACbI,UAAWhF,EAAS6E,iBAIV,C,uEC5CX,MAAMK,EACXA,CAAClF,EAAUC,KACT,MAAMkF,EAAiBnF,EAASqC,gBAC1BE,GAAkBC,EAAAA,EAAAA,GAAoBxC,EAAUC,GAEtD,IACEmC,EAAAA,EAAAA,GAAiBpC,EAAUC,IAC3BkF,IAAmBpN,EAAAA,GAAeC,OAElC,MAAO,CACLyI,UAAW,UACXtE,QAAS,CACPiJ,eAAgBtB,MAAMC,KAAKxB,EAAgB5L,UAC3C0O,gBAAiBvB,MAAMC,KAAKxB,EAAgBI,QAC5C2C,aAAcH,EACdI,uBAAuB,GAKb,C,6FCdb,MAAMC,EACXA,CAACxF,EAAUC,KACT,MAAMsC,GAAkBC,EAAAA,EAAAA,GAAoBxC,EAAUC,GAChDe,GAAaC,EAAAA,EAAAA,IAAcjB,GAC3BpE,EAAUqE,EAAYiB,gBAAkBjB,EAAYrE,QAE1D,IAAIwG,EAAAA,EAAAA,GAAiBpC,EAAUC,IAAgBe,EAAY,CACzD,MAAMI,EAAa1K,OAAO2K,YACxB,IAAIkB,EAAgB5L,YAAa4L,EAAgBI,QAAQ1G,KAAIyB,GAAU,CACrEA,EAEA,CAAE4D,SAAU,YAIhB,MAAO,CACLb,UAAW,QACXtE,QAAS,CACPgF,MAAO,CAACH,GACRpF,SAASvB,EAAAA,EAAAA,GAAcuB,GAASK,IAAIjC,EAAAA,GACpCuH,uBAA+B,MAARvB,GAAAA,EAAUwB,oBACjCJ,c,CAKU,C,mCCpCb,MAAMqE,EAA4B,I,6DCMnC,SAAU1E,EACdf,GAEA,MAAM,QAAE1F,EAAO,wBAAEwB,EAAuB,YAAE8I,EAAW,QAAEpK,GAAYwF,EAC7D0F,EAAmC,GACnCC,GAActL,EAAAA,EAAAA,GAAcyB,GAAyB,GAS3D,OAPIxB,GAAW,IAAIC,SACjBoL,IACAzJ,EAAAA,EAAAA,GAAeyJ,KAAiBf,GACxB,MAAPpK,GAAAA,EAASoL,MAAKlI,IAAUxB,EAAAA,EAAAA,GAAewB,KAAYkH,KAEpDc,EAAc1C,KAAK2C,GAEdD,CACT,C,uECjBO,MAAMlD,EAAkEA,CAC7ExC,EACAC,KASA,MAAM4F,GAAexL,EAAAA,EAAAA,GAAc4F,EAAYzF,SACzCiI,GAAcpI,EAAAA,EAAAA,GAAc2F,EAAS0C,cAErC3G,EAAe8J,EAAa5J,IAAIC,EAAAA,GAChCqG,EAAkB,IAAIuD,IAU5B,OATA/J,EAAa4B,SAASD,IACpB+E,EAAY9E,SAASoF,IACnBR,EAAgBwD,IACd,CAACrI,EAAQqF,GAAQiD,KAAKP,EAAAA,GACtB/H,EACD,GACD,IAGG6E,CAAe,C,wECrBjB,MAAM0D,EAAkBA,CAC7BC,EACAlG,KAGA,GADuBA,EAASqC,kBACTtK,EAAAA,GAAeC,OACpC,OAAO,EAET,MAAMmO,GAAwB9L,EAAAA,EAAAA,GAAsB,MAAR2F,OAAQ,EAARA,EAAU0C,cACtD,OAAO0D,EAAAA,EAAAA,GAAcF,EAAQC,EAAY,C,4DCbpC,MAAM/D,EAAmDA,CAC9DpC,EACAC,KAEA,MAAMkF,EAAiBnF,EAASqC,gBAC1BE,GAAkBC,EAAAA,EAAAA,GAAoBxC,EAAUC,GAEtD,OACEvJ,OAAOC,OAAOoB,EAAAA,IAAgB2E,SAASyI,IACvC5C,EAAgB8D,KAAO,CAAC,C,mECVrB,MAAMD,EAAgBA,CAC3BF,EACAC,MAEAG,IAASJ,EAAOvQ,SACVwQ,EAAYrD,MACZyD,GAEEL,EAAOvQ,KAAK+G,SAAS,GAAG6J,OAExBL,EAAOvQ,KAAK+G,SAAS,KAAK6J,OAIvBC,EAAoBA,CAC/BC,EACAN,KAEA,IAAIO,EAASD,EAOb,OANAN,EAAYxI,SAAQgJ,IAElBD,EAASA,EAAOE,QAAQ,GAAGD,KAAY,IAEvCD,EAASA,EAAOE,QAAQ,KAAKD,IAAW,GAAG,IAEtCD,EAAOG,MAAM,C,kDCvBR,SAAUC,EACtB7M,GAEA,OAAIyB,EAAAA,EAAAA,IAAUzB,KAAe8M,EAAAA,EAAAA,IAAa9M,EAAW2B,QAAQ,IACpD3B,EAAW2B,QACfK,KAAKgI,GAA0B,CAC9BA,EAAI7F,YACJ6F,EAAIrF,cAAgBqF,EAAI7F,eAEzB4I,MAAK,CAACC,EAAMC,IACXD,EAAK,GAAGE,cAAgBD,EAAK,GAAGC,cAAgB,GAAK,IAGpD,EACT,C,mGCXO,MAAMC,EAAQ,SAACC,EAAaC,GAAa,YAAJ,IAATA,IAAAA,EAAY,GAC7CC,OAAO,GAAGC,KAAKJ,MAAMG,OAAO,GAAGF,MAAQC,UAAkBA,IAAa,EAK3DG,EAAa,SACxBlQ,EACAmQ,EACAC,EACAC,EACAC,GAEA,YAHU,IAAVD,IAAAA,EAP0B,UAQhB,IAAVC,IAAAA,EANkB,GAQdF,IAAiBD,EACZG,EAEFL,KAAKM,IACVD,EACAT,EACEI,KAAKO,KACDF,EAAaD,IAAeD,EAAeD,IAC1CnQ,EAAQmQ,IACTE,EACJ,GAGN,EAEaI,EAAmBA,CAAAjR,EAQ9BkR,EACAC,KACE,IAIEC,GAbJ,SACE7G,EAAQ,YACR8G,EAAW,gBACXC,EAAe,iBACfC,EAAgB,YAChBvS,GAC4BgB,EAI1B6Q,EApCsB,IA2C1B,QAAiBjM,IAAb2F,QAA0C3F,IAAhB5F,EAC5B,MAAO,KAAe,EAExB,GACEwS,EAAAA,GAA2B7L,SAAS4E,UACf3F,IAApB0M,QAAsD1M,IAArB2M,GAElC,MAAO,KAAe,EAExB,GACEhH,IAAakH,EAAAA,GAAWC,OACvBF,EAAAA,GAA2B7L,SAAS4E,SACrB3F,IAAhByM,EAEA,MAAO,KAAe,EAExB,OAAQ9G,GACN,KAAKkH,EAAAA,GAAWC,KACdb,EA5DwB,EA6DxBO,EAAqBA,CAAC5Q,EAAemR,KACnC,MAAMC,EAAcnB,KAAKM,OAAOY,GAC1Bf,EAAeH,KAAKoB,OAAOF,GACjC,OAAOnR,GAASoR,GAAepR,GAASoQ,GACpC,CAAEgB,cAAahB,eACV,EAEX,MACF,KAAKa,EAAAA,GAAWK,aACdV,EAAqBA,CAAC5Q,EAAemR,IACnCnR,EAAQ6Q,GACJ,CAAEO,YAAaP,EAAcT,aAAcH,KAAKoB,OAAOF,IAE7D,MACF,KAAKF,EAAAA,GAAWM,UACdX,EAAqBA,CAAC5Q,EAAemR,IACnCnR,EAAQ6Q,GACJ,CAAEO,YAAaP,EAAcT,aAAcH,KAAKM,OAAOY,IAE7D,MACF,KAAKF,EAAAA,GAAWO,iBACdZ,EAAqBA,CAAC5Q,EAAemR,IACnCnR,GAAS6Q,GACL,CAAEO,YAAaP,EAAcT,aAAcH,KAAKoB,OAAOF,IAE7D,MACF,KAAKF,EAAAA,GAAWQ,cACdb,EAAqBA,CAAC5Q,EAAemR,IACnCnR,GAAS6Q,GACL,CAAEO,YAAaP,EAAcT,aAAcH,KAAKM,OAAOY,IAE7D,MACF,KAAKF,EAAAA,GAAWS,MACdd,EAAsB5Q,GACpBA,IAAU6Q,GACN,CAAEO,YAAaP,EAAcT,aAAcS,GAEjD,MACF,KAAKI,EAAAA,GAAWU,UACdf,EAAqBA,CAAC5Q,EAAemR,KACnC,GAAInR,IAAU6Q,EACZ,OAAO,EAET,MAAMQ,EAAMpB,KAAKoB,OAAOF,GAClBZ,EAAMN,KAAKM,OAAOY,GACxB,MAAO,CACLC,YAAaP,EACbT,aACEH,KAAKO,IAAIK,EAAeN,GAAON,KAAKO,IAAIa,EAAMR,GAC1CN,EACAc,EACP,EAEH,MACF,KAAKJ,EAAAA,GAAWW,QACdhB,EAAsB5Q,GACpBA,EAAQ8Q,GAAoB9Q,EAAQ+Q,GAChC,CAAEK,YAAaN,EAAkBV,aAAcW,GAErD,MACF,KAAKE,EAAAA,GAAWY,iBACdjB,EAAsB5Q,GACpBA,GAAS8Q,GAAoB9Q,GAAS+Q,GAClC,CAAEK,YAAaN,EAAkBV,aAAcW,GAErD,MACF,KAAKE,EAAAA,GAAWa,sBACdlB,EAAsB5Q,GACpBA,GAAS8Q,GAAoB9Q,EAAQ+Q,GACjC,CAAEK,YAAaN,EAAkBV,aAAcW,GAErD,MACF,KAAKE,EAAAA,GAAWc,uBACdnB,EAAsB5Q,GACpBA,EAAQ8Q,GAAoB9Q,GAAS+Q,GACjC,CAAEK,YAAaN,EAAkBV,aAAcW,GAErD,MACF,QACEH,EAAqBA,KAAM,EAI/B,OAAQ5Q,IACN,MAAMgS,EAAgBpB,EAAmB5Q,EAAO0Q,GAChD,IAAsB,IAAlBsB,EAAyB,OAC7B,MAAM,YAAEZ,EAAW,aAAEhB,GAAiB4B,EACtC,YAAc5N,IAAVuM,GAAuBA,GAClBsB,EAAAA,EAAAA,IACLzT,EACA0R,EAAWlQ,EAAOoR,EAAahB,EAAcC,EAtJjC,IAyJT7R,CAAW,CACnB,EAGU0T,GAAqBC,EAAAA,EAAAA,IAChC,CACEC,EACAC,EACA1B,KAAe,IAAA2B,EAAA,OAyBd,OAzBcA,EAEH,MAAZF,OAAY,EAAZA,EAAcG,QACZ,CAACC,EAAsBnU,UAEA+F,KAAb,MAAN/F,OAAM,EAANA,EAAQwG,WACD,MAANxG,OAAM,EAANA,EAAQ0L,YAAakH,EAAAA,GAAWC,WACT9M,KAAf,MAAN/F,OAAM,EAANA,EAAQ0L,YACNiH,EAAAA,GAA2B7L,SAAe,MAAN9G,OAAM,EAANA,EAAQ0L,eACb3F,KAAtB,MAAN/F,OAAM,EAANA,EAAQyS,uBACqB1M,KAAvB,MAAN/F,OAAM,EAANA,EAAQ0S,uBACgB3M,KAAlB,MAAN/F,OAAM,EAANA,EAAQwS,gBAEhB2B,EAAI/G,KAAK,CACP5G,OAAc,MAANxG,OAAM,EAANA,EAAQwG,OAChB4N,kBAAmBhC,EACjBpS,EACAgU,EAAK3N,KAAIgO,GAAOA,EAAIrU,EAAOwG,UAC3B8L,KAIC6B,IAET,KACDF,EAAI,EAAE,G,kBCvMG,SAAUtF,EACtBhN,EACA2S,GAEA,MAAMC,EAAM3J,SAAS4J,OAAO7S,GAAQ,IAC9B8S,OAAgC1O,IAAjBuO,EAA6BI,IAAMJ,EACxD,OAAO3C,OAAOgD,MAAMJ,GAAOE,EAAeF,CAC5C,C","sources":["webpack://superset/./packages/superset-ui-chart-controls/src/sections/sections.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/advancedAnalytics.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/annotationsAndLayers.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/forecastInterval.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/chartTitle.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/shared-controls/customControls.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/sections/echartsTimeSeriesQuery.tsx","webpack://superset/./packages/superset-ui-chart-controls/src/utils/mainMetric.ts","webpack://superset/./packages/superset-ui-chart-controls/src/fixtures.ts","webpack://superset/./packages/superset-ui-chart-controls/src/index.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/boxplotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/contributionOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/flattenOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/pivotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/prophetOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/renameOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/resampleOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/rollingWindowOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/sortOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/timeCompareOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/timeComparePivotOperator.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/constants.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/extractExtraMetrics.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/getMetricOffsetsMap.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/isDerivedSeries.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/isTimeComparison.ts","webpack://superset/./packages/superset-ui-chart-controls/src/operators/utils/timeOffset.ts","webpack://superset/./packages/superset-ui-chart-controls/src/utils/columnChoices.ts","webpack://superset/./packages/superset-ui-chart-controls/src/utils/getColorFormatters.ts","webpack://superset/./packages/superset-ui-core/src/utils/ensureIsInt.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { hasGenericChartAxes, t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\n// A few standard controls sections that are used internally.\n// Not recommended for use in third-party plugins.\n\nconst baseTimeSection = {\n  label: t('Time'),\n  expanded: true,\n  description: t('Time related form attributes'),\n};\n\nexport const legacyTimeseriesTime: ControlPanelSectionConfig = {\n  ...baseTimeSection,\n  controlSetRows: [\n    ['granularity'],\n    ['granularity_sqla'],\n    ['time_grain_sqla'],\n    ['time_range'],\n  ],\n};\n\nexport const genericTime: ControlPanelSectionConfig = hasGenericChartAxes\n  ? { controlSetRows: [] }\n  : {\n      ...baseTimeSection,\n      controlSetRows: [\n        ['granularity_sqla'],\n        ['time_grain_sqla'],\n        ['time_range'],\n      ],\n    };\n\nexport const legacyRegularTime: ControlPanelSectionConfig = hasGenericChartAxes\n  ? { controlSetRows: [] }\n  : {\n      ...baseTimeSection,\n      controlSetRows: [['granularity_sqla'], ['time_range']],\n    };\n\nexport const datasourceAndVizType: ControlPanelSectionConfig = {\n  label: t('Datasource & Chart Type'),\n  expanded: true,\n  controlSetRows: [\n    ['datasource'],\n    ['viz_type'],\n    [\n      {\n        name: 'slice_id',\n        config: {\n          type: 'HiddenControl',\n          label: t('Chart ID'),\n          hidden: true,\n          description: t('The id of the active chart'),\n        },\n      },\n      {\n        name: 'cache_timeout',\n        config: {\n          type: 'HiddenControl',\n          label: t('Cache Timeout (seconds)'),\n          hidden: true,\n          description: t('The number of seconds before expiring the cache'),\n        },\n      },\n      {\n        name: 'url_params',\n        config: {\n          type: 'HiddenControl',\n          label: t('URL Parameters'),\n          hidden: true,\n          description: t(\n            'Extra url parameters for use in Jinja templated queries',\n          ),\n        },\n      },\n      {\n        name: 'custom_params',\n        config: {\n          type: 'HiddenControl',\n          label: t('Extra Parameters'),\n          hidden: true,\n          description: t(\n            'Extra parameters that any plugins can choose to set for use in Jinja templated queries',\n          ),\n        },\n      },\n    ],\n  ],\n};\n\nexport const colorScheme: ControlPanelSectionConfig = {\n  label: t('Color Scheme'),\n  controlSetRows: [['color_scheme']],\n};\n\nexport const annotations: ControlPanelSectionConfig = {\n  label: t('Annotations and Layers'),\n  tabOverride: 'data',\n  expanded: true,\n  controlSetRows: [\n    [\n      {\n        name: 'annotation_layers',\n        config: {\n          type: 'AnnotationLayerControl',\n          label: '',\n          default: [],\n          description: t('Annotation Layers'),\n          renderTrigger: true,\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, RollingType, ComparisonType } from '@superset-ui/core';\n\nimport { ControlSubSectionHeader } from '../components/ControlSubSectionHeader';\nimport { ControlPanelSectionConfig } from '../types';\nimport { formatSelectOptions } from '../utils';\n\nexport const advancedAnalyticsControls: ControlPanelSectionConfig = {\n  label: t('Advanced analytics'),\n  tabOverride: 'data',\n  description: t(\n    'This section contains options ' +\n      'that allow for advanced analytical post processing ' +\n      'of query results',\n  ),\n  controlSetRows: [\n    [<ControlSubSectionHeader>{t('Rolling window')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'rolling_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Rolling function'),\n          default: null,\n          choices: [[null, t('None')]].concat(\n            formatSelectOptions(Object.values(RollingType)),\n          ),\n          description: t(\n            'Defines a rolling window function to apply, works along ' +\n              'with the [Periods] text box',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'rolling_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Periods'),\n          isInt: true,\n          description: t(\n            'Defines the size of the rolling window function, ' +\n              'relative to the time granularity selected',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [\n      {\n        name: 'min_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Min periods'),\n          isInt: true,\n          description: t(\n            'The minimum number of rolling periods required to show ' +\n              'a value. For instance if you do a cumulative sum on 7 days ' +\n              'you may want your \"Min Period\" to be 7, so that all data points ' +\n              'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n              'taking place over the first 7 periods',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [<ControlSubSectionHeader>{t('Time comparison')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'time_compare',\n        config: {\n          type: 'SelectControl',\n          multi: true,\n          freeForm: true,\n          label: t('Time shift'),\n          choices: [\n            ['1 day ago', t('1 day ago')],\n            ['1 week ago', t('1 week ago')],\n            ['28 days ago', t('28 days ago')],\n            ['30 days ago', t('30 days ago')],\n            ['52 weeks ago', t('52 weeks ago')],\n            ['1 year ago', t('1 year ago')],\n            ['104 weeks ago', t('104 weeks ago')],\n            ['2 years ago', t('2 years ago')],\n            ['156 weeks ago', t('156 weeks ago')],\n            ['3 years ago', t('3 years ago')],\n          ],\n          description: t(\n            'Overlay one or more timeseries from a ' +\n              'relative time period. Expects relative time deltas ' +\n              'in natural language (example:  24 hours, 7 days, ' +\n              '52 weeks, 365 days). Free text is supported.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'comparison_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Calculation type'),\n          default: 'values',\n          choices: [\n            [ComparisonType.Values, t('Actual values')],\n            [ComparisonType.Difference, t('Difference')],\n            [ComparisonType.Percentage, t('Percentage change')],\n            [ComparisonType.Ratio, t('Ratio')],\n          ],\n          description: t(\n            'How to display time shifts: as individual lines; as the ' +\n              'difference between the main time series and each time shift; ' +\n              'as the percentage change; or as the ratio between series and time shifts.',\n          ),\n        },\n      },\n    ],\n    [<ControlSubSectionHeader>{t('Resample')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'resample_rule',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Rule'),\n          default: null,\n          choices: [\n            ['1T', t('1 minutely frequency')],\n            ['1H', t('1 hourly frequency')],\n            ['1D', t('1 calendar day frequency')],\n            ['7D', t('7 calendar day frequency')],\n            ['1MS', t('1 month start frequency')],\n            ['1M', t('1 month end frequency')],\n            ['1AS', t('1 year start frequency')],\n            ['1A', t('1 year end frequency')],\n          ],\n          description: t('Pandas resample rule'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'resample_method',\n        config: {\n          type: 'SelectControl',\n          label: t('Fill method'),\n          default: null,\n          choices: [\n            ['asfreq', t('Null imputation')],\n            ['zerofill', t('Zero imputation')],\n            ['linear', t('Linear interpolation')],\n            ['ffill', t('Forward values')],\n            ['bfill', t('Backward values')],\n            ['median', t('Median values')],\n            ['mean', t('Mean values')],\n            ['sum', t('Sum values')],\n          ],\n          description: t('Pandas resample method'),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\nexport const annotationLayers = [];\n\nexport const annotationsAndLayersControls: ControlPanelSectionConfig = {\n  label: t('Annotations and Layers'),\n  expanded: false,\n  tabOverride: 'data',\n  controlSetRows: [\n    [\n      {\n        name: 'annotation_layers',\n        config: {\n          type: 'AnnotationLayerControl',\n          label: '',\n          default: annotationLayers,\n          description: t('Annotation Layers'),\n          renderTrigger: false,\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  legacyValidateInteger,\n  legacyValidateNumber,\n  t,\n} from '@superset-ui/core';\nimport { ControlPanelSectionConfig } from '../types';\n\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null,\n};\n\nexport const forecastIntervalControls: ControlPanelSectionConfig = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  controlSetRows: [\n    [\n      {\n        name: 'forecastEnabled',\n        config: {\n          type: 'CheckboxControl',\n          label: t('Enable forecast'),\n          renderTrigger: false,\n          default: FORECAST_DEFAULT_DATA.forecastEnabled,\n          description: t('Enable forecasting'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastPeriods',\n        config: {\n          type: 'TextControl',\n          label: t('Forecast periods'),\n          validators: [legacyValidateInteger],\n          default: FORECAST_DEFAULT_DATA.forecastPeriods,\n          description: t(\n            'How many periods into the future do we want to predict',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastInterval',\n        config: {\n          type: 'TextControl',\n          label: t('Confidence interval'),\n          validators: [legacyValidateNumber],\n          default: FORECAST_DEFAULT_DATA.forecastInterval,\n          description: t(\n            'Width of the confidence interval. Should be between 0 and 1',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityYearly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Yearly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n          description: t(\n            'Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityWeekly',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Weekly seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n          description: t(\n            'Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'forecastSeasonalityDaily',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Daily seasonality'),\n          choices: [\n            [null, t('default')],\n            [true, t('Yes')],\n            [false, t('No')],\n          ],\n          default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n          description: t(\n            'Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.',\n          ),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\n\nimport { ControlSubSectionHeader } from '../components/ControlSubSectionHeader';\nimport { ControlPanelSectionConfig } from '../types';\nimport { formatSelectOptions } from '../utils';\n\nexport const TITLE_MARGIN_OPTIONS: number[] = [\n  15, 30, 50, 75, 100, 125, 150, 200,\n];\nexport const TITLE_POSITION_OPTIONS: [string, string][] = [\n  ['Left', t('Left')],\n  ['Top', t('Top')],\n];\nexport const titleControls: ControlPanelSectionConfig = {\n  label: t('Chart Title'),\n  tabOverride: 'customize',\n  expanded: true,\n  controlSetRows: [\n    [<ControlSubSectionHeader>{t('X Axis')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'x_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('X Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'x_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('X AXIS TITLE BOTTOM MARGIN'),\n          renderTrigger: true,\n          default: TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [<ControlSubSectionHeader>{t('Y Axis')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'y_axis_title',\n        config: {\n          type: 'TextControl',\n          label: t('Y Axis Title'),\n          renderTrigger: true,\n          default: '',\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_margin',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: true,\n          label: t('Y Axis Title Margin'),\n          renderTrigger: true,\n          default: TITLE_MARGIN_OPTIONS[0],\n          choices: formatSelectOptions(TITLE_MARGIN_OPTIONS),\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'y_axis_title_position',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          clearable: false,\n          label: t('Y Axis Title Position'),\n          renderTrigger: true,\n          default: TITLE_POSITION_OPTIONS[0][0],\n          choices: TITLE_POSITION_OPTIONS,\n          description: t('Changing this control takes effect instantly'),\n        },\n      },\n    ],\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  ContributionType,\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  isDefined,\n  QueryFormColumn,\n  QueryFormMetric,\n  t,\n} from '@superset-ui/core';\nimport {\n  ControlPanelState,\n  ControlState,\n  ControlStateMapping,\n  isDataset,\n} from '../types';\nimport { isTemporalColumn } from '../utils';\nimport {\n  DEFAULT_XAXIS_SORT_SERIES_DATA,\n  SORT_SERIES_CHOICES,\n} from '../constants';\n\nexport const contributionModeControl = {\n  name: 'contributionMode',\n  config: {\n    type: 'SelectControl',\n    label: t('Contribution Mode'),\n    default: null,\n    choices: [\n      [null, t('None')],\n      [ContributionType.Row, t('Row')],\n      [ContributionType.Column, t('Series')],\n    ],\n    description: t('Calculate contribution per series or row'),\n  },\n};\n\nfunction isTemporal(controls: ControlStateMapping): boolean {\n  return !(\n    isDefined(controls?.x_axis?.value) &&\n    !isTemporalColumn(\n      getColumnLabel(controls?.x_axis?.value as QueryFormColumn),\n      controls?.datasource?.datasource,\n    )\n  );\n}\n\nconst xAxisSortVisibility = ({ controls }: { controls: ControlStateMapping }) =>\n  !isTemporal(controls) &&\n  ensureIsArray(controls?.groupby?.value).length === 0 &&\n  ensureIsArray(controls?.metrics?.value).length === 1;\n\nconst xAxisMultiSortVisibility = ({\n  controls,\n}: {\n  controls: ControlStateMapping;\n}) =>\n  !isTemporal(controls) &&\n  (!!ensureIsArray(controls?.groupby?.value).length ||\n    ensureIsArray(controls?.metrics?.value).length > 1);\n\nexport const xAxisSortControl = {\n  name: 'x_axis_sort',\n  config: {\n    type: 'XAxisSortControl',\n    label: (state: ControlPanelState) =>\n      state.form_data?.orientation === 'horizontal'\n        ? t('Y-Axis Sort By')\n        : t('X-Axis Sort By'),\n    description: t('Decides which column to sort the base axis by.'),\n    shouldMapStateToProps: () => true,\n    mapStateToProps: (state: ControlPanelState, controlState: ControlState) => {\n      const { controls, datasource } = state;\n      const dataset = isDataset(datasource) ? datasource : undefined;\n      const columns = [controls?.x_axis?.value as QueryFormColumn].filter(\n        Boolean,\n      );\n      const metrics = [\n        ...ensureIsArray(controls?.metrics?.value as QueryFormMetric),\n        controls?.timeseries_limit_metric?.value as QueryFormMetric,\n      ].filter(Boolean);\n      const metricLabels = [...new Set(metrics.map(getMetricLabel))];\n      const options = [\n        ...columns.map(column => {\n          const value = getColumnLabel(column);\n          return {\n            value,\n            label: dataset?.verbose_map?.[value] || value,\n          };\n        }),\n        ...metricLabels.map(value => ({\n          value,\n          label: dataset?.verbose_map?.[value] || value,\n        })),\n      ];\n\n      const shouldReset = !(\n        typeof controlState.value === 'string' &&\n        options.map(option => option.value).includes(controlState.value) &&\n        !isTemporalColumn(\n          getColumnLabel(controls?.x_axis?.value as QueryFormColumn),\n          controls?.datasource?.datasource,\n        )\n      );\n\n      return {\n        shouldReset,\n        options,\n      };\n    },\n    visibility: xAxisSortVisibility,\n  },\n};\n\nexport const xAxisSortAscControl = {\n  name: 'x_axis_sort_asc',\n  config: {\n    type: 'CheckboxControl',\n    label: (state: ControlPanelState) =>\n      state.form_data?.orientation === 'horizontal'\n        ? t('Y-Axis Sort Ascending')\n        : t('X-Axis Sort Ascending'),\n    default: true,\n    description: t('Whether to sort ascending or descending on the base Axis.'),\n    visibility: xAxisSortVisibility,\n  },\n};\n\nexport const xAxisSortSeriesControl = {\n  name: 'x_axis_sort_series',\n  config: {\n    type: 'SelectControl',\n    freeForm: false,\n    label: (state: ControlPanelState) =>\n      state.form_data?.orientation === 'horizontal'\n        ? t('Y-Axis Sort By')\n        : t('X-Axis Sort By'),\n    choices: SORT_SERIES_CHOICES,\n    default: DEFAULT_XAXIS_SORT_SERIES_DATA.sort_series_type,\n    renderTrigger: true,\n    description: t('Decides which measure to sort the base axis by.'),\n    visibility: xAxisMultiSortVisibility,\n  },\n};\n\nexport const xAxisSortSeriesAscendingControl = {\n  name: 'x_axis_sort_series_ascending',\n  config: {\n    type: 'CheckboxControl',\n    label: (state: ControlPanelState) =>\n      state.form_data?.orientation === 'horizontal'\n        ? t('Y-Axis Sort Ascending')\n        : t('X-Axis Sort Ascending'),\n    default: DEFAULT_XAXIS_SORT_SERIES_DATA.sort_series_ascending,\n    description: t('Whether to sort ascending or descending on the base Axis.'),\n    renderTrigger: true,\n    visibility: xAxisMultiSortVisibility,\n  },\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { hasGenericChartAxes, t } from '@superset-ui/core';\nimport { ControlPanelSectionConfig, ControlSetRow } from '../types';\nimport {\n  contributionModeControl,\n  xAxisSortAscControl,\n  xAxisSortControl,\n  xAxisSortSeriesAscendingControl,\n  xAxisSortSeriesControl,\n} from '../shared-controls';\n\nconst controlsWithoutXAxis: ControlSetRow[] = [\n  ['metrics'],\n  ['groupby'],\n  [contributionModeControl],\n  ['adhoc_filters'],\n  ['limit'],\n  ['timeseries_limit_metric'],\n  ['order_desc'],\n  ['row_limit'],\n  ['truncate_metric'],\n  ['show_empty_columns'],\n];\n\nexport const echartsTimeSeriesQuery: ControlPanelSectionConfig = {\n  label: t('Query'),\n  expanded: true,\n  controlSetRows: [\n    [hasGenericChartAxes ? 'x_axis' : null],\n    [hasGenericChartAxes ? 'time_grain_sqla' : null],\n    ...controlsWithoutXAxis,\n  ],\n};\n\nexport const echartsTimeSeriesQueryWithXAxisSort: ControlPanelSectionConfig = {\n  label: t('Query'),\n  expanded: true,\n  controlSetRows: [\n    [hasGenericChartAxes ? 'x_axis' : null],\n    [hasGenericChartAxes ? 'time_grain_sqla' : null],\n    [hasGenericChartAxes ? xAxisSortControl : null],\n    [hasGenericChartAxes ? xAxisSortAscControl : null],\n    [hasGenericChartAxes ? xAxisSortSeriesControl : null],\n    [hasGenericChartAxes ? xAxisSortSeriesAscendingControl : null],\n    ...controlsWithoutXAxis,\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Metric } from '../types';\n\nexport default function mainMetric(savedMetrics?: Metric[] | null) {\n  // Using 'count' as default metric if it exists, otherwise using whatever one shows up first\n  let metric;\n  if (savedMetrics && savedMetrics.length > 0) {\n    savedMetrics.forEach(m => {\n      if (m.metric_name === 'count') {\n        metric = 'count';\n      }\n    });\n    if (!metric) {\n      metric = savedMetrics[0].metric_name;\n    }\n  }\n  return metric;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DatasourceType } from '@superset-ui/core';\nimport { Dataset } from './types';\n\nexport const TestDataset: Dataset = {\n  column_formats: {},\n  currency_formats: {},\n  columns: [\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'num',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 332,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'BIGINT',\n      type_generic: 0,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'gender',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 330,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'VARCHAR(16)',\n      type_generic: 1,\n      verbose_name: '',\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'state',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 333,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'VARCHAR(10)',\n      type_generic: 1,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'ds',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 329,\n      is_certified: false,\n      is_dttm: true,\n      python_date_format: null,\n      type: 'TIMESTAMP WITHOUT TIME ZONE',\n      type_generic: 2,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n    {\n      advanced_data_type: undefined,\n      certification_details: null,\n      certified_by: null,\n      column_name: 'name',\n      description: null,\n      expression: '',\n      filterable: true,\n      groupby: true,\n      id: 331,\n      is_certified: false,\n      is_dttm: false,\n      python_date_format: null,\n      type: 'VARCHAR(255)',\n      type_generic: 1,\n      verbose_name: null,\n      warning_markdown: null,\n    },\n  ],\n  datasource_name: 'birth_names',\n  description: null,\n  granularity_sqla: 'ds',\n  id: 2,\n  main_dttm_col: 'ds',\n  metrics: [\n    {\n      certification_details: null,\n      certified_by: null,\n      d3format: null,\n      currency: null,\n      description: null,\n      expression: 'COUNT(*)',\n      id: 7,\n      is_certified: false,\n      metric_name: 'count',\n      verbose_name: 'COUNT(*)',\n      warning_markdown: '',\n      warning_text: null,\n    },\n  ],\n  name: 'public.birth_names',\n  order_by_choices: [],\n  owners: [\n    {\n      first_name: 'admin',\n      id: 1,\n      last_name: 'user',\n      username: 'admin',\n    },\n  ],\n  type: DatasourceType.Dataset,\n  uid: '2__table',\n  verbose_map: {},\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport * as sectionsModule from './sections';\n\nexport * from './utils';\nexport * from './constants';\nexport * from './operators';\n\n// can't do `export * as sections from './sections'`, babel-transformer will fail\nexport const sections = sectionsModule;\n\nexport * from './components/InfoTooltipWithTrigger';\nexport * from './components/ColumnOption';\nexport * from './components/ColumnTypeLabel/ColumnTypeLabel';\nexport * from './components/MetricOption';\nexport * from './components/ControlSubSectionHeader';\n\nexport * from './shared-controls';\nexport * from './types';\nexport * from './fixtures';\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingBoxplot,\n  BoxPlotQueryObjectWhiskerType,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\nconst PERCENTILE_REGEX = /(\\d+)\\/(\\d+) percentiles/;\n\nexport const boxplotOperator: PostProcessingFactory<PostProcessingBoxplot> = (\n  formData,\n  queryObject,\n) => {\n  const { groupby, whiskerOptions } = formData;\n\n  if (whiskerOptions) {\n    let whiskerType: BoxPlotQueryObjectWhiskerType;\n    let percentiles: [number, number] | undefined;\n    const percentileMatch = PERCENTILE_REGEX.exec(whiskerOptions as string);\n\n    if (whiskerOptions === 'Tukey' || !whiskerOptions) {\n      whiskerType = 'tukey';\n    } else if (whiskerOptions === 'Min/max (no outliers)') {\n      whiskerType = 'min/max';\n    } else if (percentileMatch) {\n      whiskerType = 'percentile';\n      percentiles = [\n        parseInt(percentileMatch[1], 10),\n        parseInt(percentileMatch[2], 10),\n      ];\n    } else {\n      throw new Error(`Unsupported whisker type: ${whiskerOptions}`);\n    }\n\n    return {\n      operation: 'boxplot',\n      options: {\n        whisker_type: whiskerType,\n        percentiles,\n        groupby: ensureIsArray(groupby).map(getColumnLabel),\n        metrics: ensureIsArray(queryObject.metrics).map(getMetricLabel),\n      },\n    };\n  }\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingContribution } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const contributionOperator: PostProcessingFactory<PostProcessingContribution> =\n  (formData, queryObject) => {\n    if (formData.contributionMode) {\n      return {\n        operation: 'contribution',\n        options: {\n          orientation: formData.contributionMode,\n        },\n      };\n    }\n    return undefined;\n  };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingFlatten } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const flattenOperator: PostProcessingFactory<PostProcessingFlatten> = (\n  formData,\n  queryObject,\n) => ({\n  operation: 'flatten',\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  getMetricLabel,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { extractExtraMetrics } from './utils';\n\nexport const pivotOperator: PostProcessingFactory<PostProcessingPivot> = (\n  formData,\n  queryObject,\n) => {\n  const metricLabels = [\n    ...ensureIsArray(queryObject.metrics),\n    ...extractExtraMetrics(formData),\n  ].map(getMetricLabel);\n  const xAxisLabel = getXAxisLabel(formData);\n  const columns = queryObject.series_columns || queryObject.columns;\n\n  if (xAxisLabel && metricLabels.length) {\n    return {\n      operation: 'pivot',\n      options: {\n        index: [xAxisLabel],\n        columns: ensureIsArray(columns).map(getColumnLabel),\n        // Create 'dummy' mean aggregates to assign cell values in pivot table\n        // use the 'mean' aggregates to avoid drop NaN. PR: https://github.com/apache-superset/superset-ui/pull/1231\n        aggregates: Object.fromEntries(\n          metricLabels.map(metric => [metric, { operator: 'mean' }]),\n        ),\n        drop_missing_columns: !formData?.show_empty_columns,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingProphet, getXAxisLabel } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const prophetOperator: PostProcessingFactory<PostProcessingProphet> = (\n  formData,\n  queryObject,\n) => {\n  const xAxisLabel = getXAxisLabel(formData);\n  if (formData.forecastEnabled && xAxisLabel) {\n    return {\n      operation: 'prophet',\n      options: {\n        time_grain: formData.time_grain_sqla,\n        periods: parseInt(formData.forecastPeriods, 10),\n        confidence_interval: parseFloat(formData.forecastInterval),\n        yearly_seasonality: formData.forecastSeasonalityYearly,\n        weekly_seasonality: formData.forecastSeasonalityWeekly,\n        daily_seasonality: formData.forecastSeasonalityDaily,\n        index: xAxisLabel,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  PostProcessingRename,\n  ensureIsArray,\n  getMetricLabel,\n  ComparisonType,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\n\nexport const renameOperator: PostProcessingFactory<PostProcessingRename> = (\n  formData,\n  queryObject,\n) => {\n  const metrics = ensureIsArray(queryObject.metrics);\n  const columns = ensureIsArray(\n    queryObject.series_columns || queryObject.columns,\n  );\n  const { truncate_metric } = formData;\n  const xAxisLabel = getXAxisLabel(formData);\n  // remove or rename top level of column name(metric name) in the MultiIndex when\n  // 1) only 1 metric\n  // 2) dimension exist\n  // 3) xAxis exist\n  // 4) time comparison exist, and comparison type is \"actual values\"\n  // 5) truncate_metric in form_data and truncate_metric is true\n  if (\n    metrics.length === 1 &&\n    columns.length > 0 &&\n    xAxisLabel &&\n    !(\n      // todo: we should provide an approach to handle derived metrics\n      (\n        isTimeComparison(formData, queryObject) &&\n        [\n          ComparisonType.Difference,\n          ComparisonType.Ratio,\n          ComparisonType.Percentage,\n        ].includes(formData.comparison_type)\n      )\n    ) &&\n    truncate_metric !== undefined &&\n    !!truncate_metric\n  ) {\n    const renamePairs: [string, string | null][] = [];\n\n    if (\n      // \"actual values\" will add derived metric.\n      // we will rename the \"metric\" from the metricWithOffset label\n      // for example: \"count__1 year ago\" =>\t\"1 year ago\"\n      isTimeComparison(formData, queryObject) &&\n      formData.comparison_type === ComparisonType.Values\n    ) {\n      const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n      const timeOffsets = ensureIsArray(formData.time_compare);\n      [...metricOffsetMap.keys()].forEach(metricWithOffset => {\n        const offsetLabel = timeOffsets.find(offset =>\n          metricWithOffset.includes(offset),\n        );\n        renamePairs.push([metricWithOffset, offsetLabel]);\n      });\n    }\n\n    renamePairs.push([getMetricLabel(metrics[0]), null]);\n\n    return {\n      operation: 'rename',\n      options: {\n        columns: Object.fromEntries(renamePairs),\n        level: 0,\n        inplace: true,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingResample } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const resampleOperator: PostProcessingFactory<PostProcessingResample> = (\n  formData,\n  queryObject,\n) => {\n  const resampleZeroFill = formData.resample_method === 'zerofill';\n  const resampleMethod = resampleZeroFill ? 'asfreq' : formData.resample_method;\n  const resampleRule = formData.resample_rule;\n  if (resampleMethod && resampleRule) {\n    return {\n      operation: 'resample',\n      options: {\n        method: resampleMethod,\n        rule: resampleRule,\n        fill_value: resampleZeroFill ? 0 : null,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  ensureIsInt,\n  PostProcessingCum,\n  PostProcessingRolling,\n  RollingType,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const rollingWindowOperator: PostProcessingFactory<\n  PostProcessingRolling | PostProcessingCum\n> = (formData, queryObject) => {\n  let columns: (string | undefined)[];\n  if (isTimeComparison(formData, queryObject)) {\n    const metricsMap = getMetricOffsetsMap(formData, queryObject);\n    columns = [\n      ...Array.from(metricsMap.values()),\n      ...Array.from(metricsMap.keys()),\n    ];\n  } else {\n    columns = ensureIsArray(queryObject.metrics).map(metric => {\n      if (typeof metric === 'string') {\n        return metric;\n      }\n      return metric.label;\n    });\n  }\n  const columnsMap = Object.fromEntries(columns.map(col => [col, col]));\n\n  if (formData.rolling_type === RollingType.Cumsum) {\n    return {\n      operation: 'cum',\n      options: {\n        operator: 'sum',\n        columns: columnsMap,\n      },\n    };\n  }\n\n  if (\n    [RollingType.Sum, RollingType.Mean, RollingType.Std].includes(\n      formData.rolling_type,\n    )\n  ) {\n    return {\n      operation: 'rolling',\n      options: {\n        rolling_type: formData.rolling_type,\n        window: ensureIsInt(formData.rolling_periods, 1),\n        min_periods: ensureIsInt(formData.min_periods, 0),\n        columns: columnsMap,\n      },\n    };\n  }\n\n  return undefined;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { isEmpty } from 'lodash';\nimport {\n  ensureIsArray,\n  getMetricLabel,\n  getXAxisLabel,\n  hasGenericChartAxes,\n  isDefined,\n  PostProcessingSort,\n} from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\nimport { extractExtraMetrics } from './utils';\n\nexport const sortOperator: PostProcessingFactory<PostProcessingSort> = (\n  formData,\n  queryObject,\n) => {\n  // the sortOperator only used in the barchart v2\n  const sortableLabels = [\n    getXAxisLabel(formData),\n    ...ensureIsArray(formData.metrics).map(getMetricLabel),\n    ...extractExtraMetrics(formData).map(getMetricLabel),\n  ].filter(Boolean);\n\n  if (\n    hasGenericChartAxes &&\n    isDefined(formData?.x_axis_sort) &&\n    isDefined(formData?.x_axis_sort_asc) &&\n    sortableLabels.includes(formData.x_axis_sort) &&\n    // the sort operator doesn't support sort-by multiple series.\n    isEmpty(formData.groupby)\n  ) {\n    if (formData.x_axis_sort === getXAxisLabel(formData)) {\n      return {\n        operation: 'sort',\n        options: {\n          is_sort_index: true,\n          ascending: formData.x_axis_sort_asc,\n        },\n      };\n    }\n\n    return {\n      operation: 'sort',\n      options: {\n        by: formData.x_axis_sort,\n        ascending: formData.x_axis_sort_asc,\n      },\n    };\n  }\n  return undefined;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ComparisonType, PostProcessingCompare } from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeCompareOperator: PostProcessingFactory<PostProcessingCompare> =\n  (formData, queryObject) => {\n    const comparisonType = formData.comparison_type;\n    const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n\n    if (\n      isTimeComparison(formData, queryObject) &&\n      comparisonType !== ComparisonType.Values\n    ) {\n      return {\n        operation: 'compare',\n        options: {\n          source_columns: Array.from(metricOffsetMap.values()),\n          compare_columns: Array.from(metricOffsetMap.keys()),\n          compare_type: comparisonType,\n          drop_original_columns: true,\n        },\n      };\n    }\n\n    return undefined;\n  };\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getColumnLabel,\n  NumpyFunction,\n  PostProcessingPivot,\n  getXAxisLabel,\n} from '@superset-ui/core';\nimport { getMetricOffsetsMap, isTimeComparison } from './utils';\nimport { PostProcessingFactory } from './types';\n\nexport const timeComparePivotOperator: PostProcessingFactory<PostProcessingPivot> =\n  (formData, queryObject) => {\n    const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n    const xAxisLabel = getXAxisLabel(formData);\n    const columns = queryObject.series_columns || queryObject.columns;\n\n    if (isTimeComparison(formData, queryObject) && xAxisLabel) {\n      const aggregates = Object.fromEntries(\n        [...metricOffsetMap.values(), ...metricOffsetMap.keys()].map(metric => [\n          metric,\n          // use the 'mean' aggregates to avoid drop NaN\n          { operator: 'mean' as NumpyFunction },\n        ]),\n      );\n\n      return {\n        operation: 'pivot',\n        options: {\n          index: [xAxisLabel],\n          columns: ensureIsArray(columns).map(getColumnLabel),\n          drop_missing_columns: !formData?.show_empty_columns,\n          aggregates,\n        },\n      };\n    }\n\n    return undefined;\n  };\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nexport const TIME_COMPARISON_SEPARATOR = '__';\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  getMetricLabel,\n  QueryFormData,\n  QueryFormMetric,\n} from '@superset-ui/core';\n\nexport function extractExtraMetrics(\n  formData: QueryFormData,\n): QueryFormMetric[] {\n  const { groupby, timeseries_limit_metric, x_axis_sort, metrics } = formData;\n  const extra_metrics: QueryFormMetric[] = [];\n  const limitMetric = ensureIsArray(timeseries_limit_metric)[0];\n  if (\n    !(groupby || []).length &&\n    limitMetric &&\n    getMetricLabel(limitMetric) === x_axis_sort &&\n    !metrics?.some(metric => getMetricLabel(metric) === x_axis_sort)\n  ) {\n    extra_metrics.push(limitMetric);\n  }\n  return extra_metrics;\n}\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { getMetricLabel, ensureIsArray } from '@superset-ui/core';\nimport { PostProcessingFactory } from '../types';\nimport { TIME_COMPARISON_SEPARATOR } from './constants';\n\nexport const getMetricOffsetsMap: PostProcessingFactory<Map<string, string>> = (\n  formData,\n  queryObject,\n) => {\n  /*\n    return metric offset-label and metric-label hashmap, for instance:\n    {\n      \"SUM(value)__1 year ago\": \"SUM(value)\",\n      \"SUM(value)__2 year ago\": \"SUM(value)\"\n    }\n  */\n  const queryMetrics = ensureIsArray(queryObject.metrics);\n  const timeOffsets = ensureIsArray(formData.time_compare);\n\n  const metricLabels = queryMetrics.map(getMetricLabel);\n  const metricOffsetMap = new Map<string, string>();\n  metricLabels.forEach((metric: string) => {\n    timeOffsets.forEach((offset: string) => {\n      metricOffsetMap.set(\n        [metric, offset].join(TIME_COMPARISON_SEPARATOR),\n        metric,\n      );\n    });\n  });\n\n  return metricOffsetMap;\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport {\n  ensureIsArray,\n  JsonObject,\n  QueryFormData,\n  ComparisonType,\n} from '@superset-ui/core';\nimport { hasTimeOffset } from './timeOffset';\n\nexport const isDerivedSeries = (\n  series: JsonObject,\n  formData: QueryFormData,\n): boolean => {\n  const comparisonType = formData.comparison_type;\n  if (comparisonType !== ComparisonType.Values) {\n    return false;\n  }\n  const timeCompare: string[] = ensureIsArray(formData?.time_compare);\n  return hasTimeOffset(series, timeCompare);\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ComparisonType } from '@superset-ui/core';\nimport { getMetricOffsetsMap } from './getMetricOffsetsMap';\nimport { PostProcessingFactory } from '../types';\n\nexport const isTimeComparison: PostProcessingFactory<boolean> = (\n  formData,\n  queryObject,\n) => {\n  const comparisonType = formData.comparison_type;\n  const metricOffsetMap = getMetricOffsetsMap(formData, queryObject);\n\n  return (\n    Object.values(ComparisonType).includes(comparisonType) &&\n    metricOffsetMap.size > 0\n  );\n};\n","/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { JsonObject } from '@superset-ui/core';\nimport { isString } from 'lodash';\n\nexport const hasTimeOffset = (\n  series: JsonObject,\n  timeCompare: string[],\n): boolean =>\n  isString(series.name)\n    ? !!timeCompare.find(\n        timeOffset =>\n          // offset is represented as <offset>, group by list\n          series.name.includes(`${timeOffset},`) ||\n          // offset is represented as <metric>__<offset>\n          series.name.includes(`__${timeOffset}`),\n      )\n    : false;\n\nexport const getOriginalSeries = (\n  seriesName: string,\n  timeCompare: string[],\n): string => {\n  let result = seriesName;\n  timeCompare.forEach(compare => {\n    // offset is represented as <offset>, group by list\n    result = result.replace(`${compare},`, '');\n    // offset is represented as <metric>__<offset>\n    result = result.replace(`__${compare}`, '');\n  });\n  return result.trim();\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { QueryResponse } from '@superset-ui/core';\nimport { Dataset, isColumnMeta, isDataset } from '../types';\n\n/**\n * Convert Datasource columns to column choices\n */\nexport default function columnChoices(\n  datasource?: Dataset | QueryResponse | null,\n): [string, string][] {\n  if (isDataset(datasource) && isColumnMeta(datasource.columns[0])) {\n    return datasource.columns\n      .map((col): [string, string] => [\n        col.column_name,\n        col.verbose_name || col.column_name,\n      ])\n      .sort((opt1, opt2) =>\n        opt1[1].toLowerCase() > opt2[1].toLowerCase() ? 1 : -1,\n      );\n  }\n  return [];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport memoizeOne from 'memoize-one';\nimport { addAlpha, DataRecord } from '@superset-ui/core';\nimport {\n  ColorFormatters,\n  COMPARATOR,\n  ConditionalFormattingConfig,\n  MULTIPLE_VALUE_COMPARATORS,\n} from '../types';\n\nexport const round = (num: number, precision = 0) =>\n  Number(`${Math.round(Number(`${num}e+${precision}`))}e-${precision}`);\n\nconst MIN_OPACITY_BOUNDED = 0.05;\nconst MIN_OPACITY_UNBOUNDED = 0;\nconst MAX_OPACITY = 1;\nexport const getOpacity = (\n  value: number,\n  cutoffPoint: number,\n  extremeValue: number,\n  minOpacity = MIN_OPACITY_BOUNDED,\n  maxOpacity = MAX_OPACITY,\n) => {\n  if (extremeValue === cutoffPoint) {\n    return maxOpacity;\n  }\n  return Math.min(\n    maxOpacity,\n    round(\n      Math.abs(\n        ((maxOpacity - minOpacity) / (extremeValue - cutoffPoint)) *\n          (value - cutoffPoint),\n      ) + minOpacity,\n      2,\n    ),\n  );\n};\n\nexport const getColorFunction = (\n  {\n    operator,\n    targetValue,\n    targetValueLeft,\n    targetValueRight,\n    colorScheme,\n  }: ConditionalFormattingConfig,\n  columnValues: number[],\n  alpha?: boolean,\n) => {\n  let minOpacity = MIN_OPACITY_BOUNDED;\n  const maxOpacity = MAX_OPACITY;\n\n  let comparatorFunction: (\n    value: number,\n    allValues: number[],\n  ) => false | { cutoffValue: number; extremeValue: number };\n  if (operator === undefined || colorScheme === undefined) {\n    return () => undefined;\n  }\n  if (\n    MULTIPLE_VALUE_COMPARATORS.includes(operator) &&\n    (targetValueLeft === undefined || targetValueRight === undefined)\n  ) {\n    return () => undefined;\n  }\n  if (\n    operator !== COMPARATOR.NONE &&\n    !MULTIPLE_VALUE_COMPARATORS.includes(operator) &&\n    targetValue === undefined\n  ) {\n    return () => undefined;\n  }\n  switch (operator) {\n    case COMPARATOR.NONE:\n      minOpacity = MIN_OPACITY_UNBOUNDED;\n      comparatorFunction = (value: number, allValues: number[]) => {\n        const cutoffValue = Math.min(...allValues);\n        const extremeValue = Math.max(...allValues);\n        return value >= cutoffValue && value <= extremeValue\n          ? { cutoffValue, extremeValue }\n          : false;\n      };\n      break;\n    case COMPARATOR.GREATER_THAN:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value > targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.max(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.LESS_THAN:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value < targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.min(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.GREATER_OR_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value >= targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.max(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.LESS_OR_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) =>\n        value <= targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: Math.min(...allValues) }\n          : false;\n      break;\n    case COMPARATOR.EQUAL:\n      comparatorFunction = (value: number) =>\n        value === targetValue!\n          ? { cutoffValue: targetValue!, extremeValue: targetValue! }\n          : false;\n      break;\n    case COMPARATOR.NOT_EQUAL:\n      comparatorFunction = (value: number, allValues: number[]) => {\n        if (value === targetValue!) {\n          return false;\n        }\n        const max = Math.max(...allValues);\n        const min = Math.min(...allValues);\n        return {\n          cutoffValue: targetValue!,\n          extremeValue:\n            Math.abs(targetValue! - min) > Math.abs(max - targetValue!)\n              ? min\n              : max,\n        };\n      };\n      break;\n    case COMPARATOR.BETWEEN:\n      comparatorFunction = (value: number) =>\n        value > targetValueLeft! && value < targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_EQUAL:\n      comparatorFunction = (value: number) =>\n        value >= targetValueLeft! && value <= targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_LEFT_EQUAL:\n      comparatorFunction = (value: number) =>\n        value >= targetValueLeft! && value < targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    case COMPARATOR.BETWEEN_OR_RIGHT_EQUAL:\n      comparatorFunction = (value: number) =>\n        value > targetValueLeft! && value <= targetValueRight!\n          ? { cutoffValue: targetValueLeft!, extremeValue: targetValueRight! }\n          : false;\n      break;\n    default:\n      comparatorFunction = () => false;\n      break;\n  }\n\n  return (value: number) => {\n    const compareResult = comparatorFunction(value, columnValues);\n    if (compareResult === false) return undefined;\n    const { cutoffValue, extremeValue } = compareResult;\n    if (alpha === undefined || alpha) {\n      return addAlpha(\n        colorScheme,\n        getOpacity(value, cutoffValue, extremeValue, minOpacity, maxOpacity),\n      );\n    }\n    return colorScheme;\n  };\n};\n\nexport const getColorFormatters = memoizeOne(\n  (\n    columnConfig: ConditionalFormattingConfig[] | undefined,\n    data: DataRecord[],\n    alpha?: boolean,\n  ) =>\n    columnConfig?.reduce(\n      (acc: ColorFormatters, config: ConditionalFormattingConfig) => {\n        if (\n          config?.column !== undefined &&\n          (config?.operator === COMPARATOR.NONE ||\n            (config?.operator !== undefined &&\n              (MULTIPLE_VALUE_COMPARATORS.includes(config?.operator)\n                ? config?.targetValueLeft !== undefined &&\n                  config?.targetValueRight !== undefined\n                : config?.targetValue !== undefined)))\n        ) {\n          acc.push({\n            column: config?.column,\n            getColorFromValue: getColorFunction(\n              config,\n              data.map(row => row[config.column!] as number),\n              alpha,\n            ),\n          });\n        }\n        return acc;\n      },\n      [],\n    ) ?? [],\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport default function ensureIsInt<T>(\n  value: T,\n  defaultValue?: number,\n): number {\n  const val = parseInt(String(value), 10);\n  const defaultOrNaN = defaultValue === undefined ? NaN : defaultValue;\n  return Number.isNaN(val) ? defaultOrNaN : val;\n}\n"],"names":["baseTimeSection","label","t","expanded","description","legacyTimeseriesTime","controlSetRows","genericTime","hasGenericChartAxes","legacyRegularTime","datasourceAndVizType","name","config","type","hidden","colorScheme","annotations","tabOverride","default","renderTrigger","advancedAnalyticsControls","___EmotionJSX","ControlSubSectionHeader","choices","concat","formatSelectOptions","Object","values","RollingType","isInt","visibility","_ref","_ref2","_controls$rollingType","_controls$rollingType2","controls","rollingTypeControlName","endsWith","Boolean","value","Cumsum","_ref3","_ref4","_controls$rollingType3","_controls$rollingType4","multi","freeForm","ComparisonType","Values","Difference","Percentage","Ratio","annotationLayers","annotationsAndLayersControls","FORECAST_DEFAULT_DATA","forecastEnabled","forecastInterval","forecastPeriods","forecastSeasonalityDaily","forecastSeasonalityWeekly","forecastSeasonalityYearly","forecastIntervalControls","validators","legacyValidateInteger","legacyValidateNumber","TITLE_MARGIN_OPTIONS","TITLE_POSITION_OPTIONS","titleControls","clearable","contributionModeControl","ContributionType","Row","Column","isTemporal","_controls$x_axis","_controls$x_axis2","_controls$datasource","isDefined","x_axis","isTemporalColumn","getColumnLabel","datasource","xAxisSortVisibility","_controls$groupby","_controls$metrics","ensureIsArray","groupby","length","metrics","xAxisMultiSortVisibility","_controls$groupby2","_controls$metrics2","xAxisSortControl","state","_state$form_data","form_data","orientation","shouldMapStateToProps","mapStateToProps","controlState","_controls$x_axis3","_controls$metrics3","_controls$timeseries_","_controls$x_axis4","_controls$datasource2","dataset","isDataset","undefined","columns","filter","timeseries_limit_metric","metricLabels","Set","map","getMetricLabel","options","column","_dataset$verbose_map","verbose_map","_dataset$verbose_map2","shouldReset","option","includes","xAxisSortAscControl","_state$form_data2","xAxisSortSeriesControl","_state$form_data3","SORT_SERIES_CHOICES","DEFAULT_XAXIS_SORT_SERIES_DATA","sort_series_type","xAxisSortSeriesAscendingControl","_state$form_data4","sort_series_ascending","controlsWithoutXAxis","echartsTimeSeriesQuery","echartsTimeSeriesQueryWithXAxisSort","mainMetric","savedMetrics","metric","forEach","m","metric_name","TestDataset","column_formats","currency_formats","advanced_data_type","certification_details","certified_by","column_name","expression","filterable","id","is_certified","is_dttm","python_date_format","type_generic","verbose_name","warning_markdown","datasource_name","granularity_sqla","main_dttm_col","d3format","currency","warning_text","order_by_choices","owners","first_name","last_name","username","DatasourceType","Dataset","uid","sections","sectionsModule","PERCENTILE_REGEX","boxplotOperator","formData","queryObject","whiskerOptions","whiskerType","percentiles","percentileMatch","exec","Error","parseInt","operation","whisker_type","contributionOperator","contributionMode","flattenOperator","pivotOperator","extractExtraMetrics","xAxisLabel","getXAxisLabel","series_columns","index","aggregates","fromEntries","operator","drop_missing_columns","show_empty_columns","prophetOperator","time_grain","time_grain_sqla","periods","confidence_interval","parseFloat","yearly_seasonality","weekly_seasonality","daily_seasonality","renameOperator","truncate_metric","isTimeComparison","comparison_type","renamePairs","metricOffsetMap","getMetricOffsetsMap","timeOffsets","time_compare","keys","metricWithOffset","offsetLabel","find","offset","push","level","inplace","resampleOperator","resampleZeroFill","resample_method","resampleMethod","resampleRule","resample_rule","method","rule","fill_value","rollingWindowOperator","metricsMap","Array","from","columnsMap","col","rolling_type","Sum","Mean","Std","window","ensureIsInt","rolling_periods","min_periods","sortOperator","sortableLabels","x_axis_sort","x_axis_sort_asc","_isEmpty","is_sort_index","ascending","by","timeCompareOperator","comparisonType","source_columns","compare_columns","compare_type","drop_original_columns","timeComparePivotOperator","TIME_COMPARISON_SEPARATOR","extra_metrics","limitMetric","some","queryMetrics","Map","set","join","isDerivedSeries","series","timeCompare","hasTimeOffset","size","_isString","timeOffset","getOriginalSeries","seriesName","result","compare","replace","trim","columnChoices","isColumnMeta","sort","opt1","opt2","toLowerCase","round","num","precision","Number","Math","getOpacity","cutoffPoint","extremeValue","minOpacity","maxOpacity","min","abs","getColorFunction","columnValues","alpha","comparatorFunction","targetValue","targetValueLeft","targetValueRight","MULTIPLE_VALUE_COMPARATORS","COMPARATOR","NONE","allValues","cutoffValue","max","GREATER_THAN","LESS_THAN","GREATER_OR_EQUAL","LESS_OR_EQUAL","EQUAL","NOT_EQUAL","BETWEEN","BETWEEN_OR_EQUAL","BETWEEN_OR_LEFT_EQUAL","BETWEEN_OR_RIGHT_EQUAL","compareResult","addAlpha","getColorFormatters","memoizeOne","columnConfig","data","_columnConfig$reduce","reduce","acc","getColorFromValue","row","defaultValue","val","String","defaultOrNaN","NaN","isNaN"],"sourceRoot":""}