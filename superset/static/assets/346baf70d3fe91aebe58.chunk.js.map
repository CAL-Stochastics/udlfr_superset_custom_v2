{"version":3,"file":"346baf70d3fe91aebe58.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/components/Tags/Tag.tsx","webpack://superset/./src/components/Tags/TagsList.tsx","webpack://superset/./src/features/home/commonMenuData.ts","webpack://superset/./src/features/queries/SyntaxHighlighterCopy.tsx","webpack://superset/./src/features/queries/hooks/useQueryPreviewState.ts","webpack://superset/./src/features/queries/SavedQueryPreviewModal.tsx","webpack://superset/./src/pages/SavedQueryList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useEffect, useState } from 'react';\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport AntdTag from 'antd/lib/tag';\nimport React, { useMemo } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\n\nconst StyledTag = styled(AntdTag)`\n  ${({ theme }) => `\n  margin-top: ${theme.gridUnit}px;\n  margin-bottom: ${theme.gridUnit}px;\n  font-size: ${theme.typography.sizes.s}px;\n  `};\n`;\n\nconst MAX_DISPLAY_CHAR = 20;\n\nconst Tag = ({\n  name,\n  id,\n  index = undefined,\n  onDelete = undefined,\n  editable = false,\n  onClick = undefined,\n  toolTipTitle = name,\n}: TagType) => {\n  const isLongTag = useMemo(() => name.length > MAX_DISPLAY_CHAR, [name]);\n  const tagDisplay = isLongTag ? `${name.slice(0, MAX_DISPLAY_CHAR)}...` : name;\n\n  const handleClose = () => (index ? onDelete?.(index) : null);\n\n  const tagElem = (\n    <>\n      {editable ? (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag\n            key={id}\n            closable={editable}\n            onClose={handleClose}\n            color=\"blue\"\n          >\n            {tagDisplay}\n          </StyledTag>\n        </Tooltip>\n      ) : (\n        <Tooltip title={toolTipTitle} key={toolTipTitle}>\n          <StyledTag data-test=\"tag\" role=\"link\" key={id} onClick={onClick}>\n            {id ? (\n              <a\n                href={`/superset/all_entities/?id=${id}`}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {tagDisplay}\n              </a>\n            ) : (\n              tagDisplay\n            )}\n          </StyledTag>\n        </Tooltip>\n      )}\n    </>\n  );\n\n  return tagElem;\n};\n\nexport default Tag;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useMemo, useState } from 'react';\nimport { styled } from '@superset-ui/core';\nimport TagType from 'src/types/TagType';\nimport Tag from './Tag';\n\nexport type TagsListProps = {\n  tags: TagType[];\n  editable?: boolean;\n  /**\n   * OnDelete:\n   * Only applies when editable is true\n   * Callback for when a tag is deleted\n   */\n  onDelete?: ((index: number) => void) | undefined;\n  maxTags?: number | undefined;\n};\n\nconst TagsDiv = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst TagsList = ({\n  tags,\n  editable = false,\n  onDelete,\n  maxTags,\n}: TagsListProps) => {\n  const [tempMaxTags, setTempMaxTags] = useState<number | undefined>(maxTags);\n\n  const handleDelete = (index: number) => {\n    onDelete?.(index);\n  };\n\n  const expand = () => setTempMaxTags(undefined);\n\n  const collapse = () => setTempMaxTags(maxTags);\n\n  const tagsIsLong: boolean | null = useMemo(\n    () => (tempMaxTags ? tags.length > tempMaxTags : null),\n    [tags.length, tempMaxTags],\n  );\n\n  const extraTags: number | null = useMemo(\n    () =>\n      typeof tempMaxTags === 'number' ? tags.length - tempMaxTags + 1 : null,\n    [tagsIsLong, tags.length, tempMaxTags],\n  );\n\n  return (\n    <TagsDiv className=\"tag-list\">\n      {tagsIsLong && typeof tempMaxTags === 'number' ? (\n        <>\n          {tags.slice(0, tempMaxTags - 1).map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {tags.length > tempMaxTags ? (\n            <Tag\n              name={`+${extraTags}...`}\n              onClick={expand}\n              toolTipTitle={tags.map(t => t.name).join(', ')}\n            />\n          ) : null}\n        </>\n      ) : (\n        <>\n          {tags.map((tag: TagType, index) => (\n            <Tag\n              id={tag.id}\n              key={tag.id}\n              name={tag.name}\n              index={index}\n              onDelete={handleDelete}\n              editable={editable}\n            />\n          ))}\n          {maxTags ? (\n            tags.length > maxTags ? (\n              <Tag name=\"...\" onClick={collapse} />\n            ) : null\n          ) : null}\n        </>\n      )}\n    </TagsDiv>\n  );\n};\n\nexport default TagsList;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('SQL'),\n  tabs: [\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\n\ntype BaseQueryObject = {\n  id: number;\n};\n\nexport default function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 16px 0;\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ntype SavedQueryObject = {\n  id: number;\n  label: string;\n  sql: string;\n};\n\ninterface SavedQueryPreviewModalProps extends ToastProps {\n  fetchData: (id: number) => {};\n  onHide: () => void;\n  openInSqlLab: (id: number, openInNewWindow: boolean) => {};\n  queries: Array<SavedQueryObject>;\n  savedQuery: SavedQueryObject;\n  show: boolean;\n}\n\nconst SavedQueryPreviewModal: FunctionComponent<SavedQueryPreviewModalProps> =\n  ({\n    fetchData,\n    onHide,\n    openInSqlLab,\n    queries,\n    savedQuery,\n    show,\n    addDangerToast,\n    addSuccessToast,\n  }) => {\n    const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n      useQueryPreviewState<SavedQueryObject>({\n        queries,\n        currentQueryId: savedQuery.id,\n        fetchData,\n      });\n\n    return (\n      <div role=\"none\" onKeyUp={handleKeyPress}>\n        <StyledModal\n          onHide={onHide}\n          show={show}\n          title={t('Query preview')}\n          footer={\n            <>\n              <Button\n                data-test=\"previous-saved-query\"\n                key=\"previous-saved-query\"\n                disabled={disablePrevious}\n                onClick={() => handleDataChange(true)}\n              >\n                {t('Previous')}\n              </Button>\n              <Button\n                data-test=\"next-saved-query\"\n                key=\"next-saved-query\"\n                disabled={disableNext}\n                onClick={() => handleDataChange(false)}\n              >\n                {t('Next')}\n              </Button>\n              <Button\n                data-test=\"open-in-sql-lab\"\n                key=\"open-in-sql-lab\"\n                buttonStyle=\"primary\"\n                onClick={({ metaKey }) =>\n                  openInSqlLab(savedQuery.id, Boolean(metaKey))\n                }\n              >\n                {t('Open in SQL Lab')}\n              </Button>\n            </>\n          }\n        >\n          <QueryTitle>{t('Query name')}</QueryTitle>\n          <QueryLabel>{savedQuery.label}</QueryLabel>\n          <SyntaxHighlighterCopy\n            language=\"sql\"\n            addDangerToast={addDangerToast}\n            addSuccessToast={addSuccessToast}\n          >\n            {savedQuery.sql || ''}\n          </SyntaxHighlighterCopy>\n        </StyledModal>\n      </div>\n    );\n  };\n\nexport default withToasts(SavedQueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  isFeatureEnabled,\n  FeatureFlag,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport rison from 'rison';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n} from 'src/views/CRUD/utils';\nimport { useSelector } from 'react-redux';\nimport Popover from 'src/components/Popover';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport handleResourceExport from 'src/utils/export';\nimport SubMenu, { SubMenuProps, ButtonProps } from 'src/features/home/SubMenu';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport { TagsList } from 'src/components/Tags';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport { SavedQueryObject } from 'src/views/CRUD/types';\nimport copyTextToClipboard from 'src/utils/copy';\nimport Tag from 'src/types/TagType';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport Icons from 'src/components/Icons';\nimport {\n  BootstrapUser,\n  UserWithPermissionsAndRoles,\n} from 'src/types/bootstrapTypes';\nimport SavedQueryPreviewModal from 'src/features/queries/SavedQueryPreviewModal';\nimport { findPermission } from 'src/utils/findPermission';\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the saved queries. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more saved queries that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\ninterface SavedQueryListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: BootstrapUser;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction SavedQueryList({\n  addDangerToast,\n  addSuccessToast,\n}: SavedQueryListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: queryCount,\n      resourceCollection: queries,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<SavedQueryObject>(\n    'saved_query',\n    t('Saved queries'),\n    addDangerToast,\n  );\n  const { roles } = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const canReadTag = findPermission('can_read', 'Tag', roles);\n  const [queryCurrentlyDeleting, setQueryCurrentlyDeleting] =\n    useState<SavedQueryObject | null>(null);\n  const [savedQueryCurrentlyPreviewing, setSavedQueryCurrentlyPreviewing] =\n    useState<SavedQueryObject | null>(null);\n  const [importingSavedQuery, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n  const history = useHistory();\n\n  const openSavedQueryImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeSavedQueryImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleSavedQueryImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Query imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport =\n    hasPerm('can_export') && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT);\n\n  const handleSavedQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/saved_query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setSavedQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Saved queries',\n    ...commonMenuData,\n  };\n\n  const subMenuButtons: Array<ButtonProps> = [];\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  subMenuButtons.push({\n    name: (\n      <Link to=\"/sqllab?new=true\">\n        <i className=\"fa fa-plus\" /> {t('Query')}\n      </Link>\n    ),\n    buttonStyle: 'primary',\n  });\n\n  if (canCreate && isFeatureEnabled(FeatureFlag.VERSIONED_EXPORT)) {\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import queries')}\n          placement=\"bottomRight\"\n          data-test=\"import-tooltip-test\"\n        >\n          <Icons.Import data-test=\"import-icon\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openSavedQueryImportModal,\n      'data-test': 'import-button',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  // Action methods\n  const openInSqlLab = (id: number, openInNewWindow: boolean) => {\n    if (openInNewWindow) {\n      window.open(`/sqllab?savedQueryId=${id}`);\n    } else {\n      history.push(`/sqllab?savedQueryId=${id}`);\n    }\n  };\n\n  const copyQueryLink = useCallback(\n    (id: number) => {\n      copyTextToClipboard(() =>\n        Promise.resolve(`${window.location.origin}/sqllab?savedQueryId=${id}`),\n      )\n        .then(() => {\n          addSuccessToast(t('Link Copied!'));\n        })\n        .catch(() => {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        });\n    },\n    [addDangerToast, addSuccessToast],\n  );\n\n  const handleQueryDelete = ({ id, label }: SavedQueryObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setQueryCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', label));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', label, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkSavedQueryExport = (\n    savedQueriesToExport: SavedQueryObject[],\n  ) => {\n    const ids = savedQueriesToExport.map(({ id }) => id);\n    handleResourceExport('saved_query', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleBulkQueryDelete = (queriesToDelete: SavedQueryObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/?q=${rison.encode(\n        queriesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected queries: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'label',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'database.database_name',\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: 'database',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        accessor: 'schema',\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names?.shift() || '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: 'sql_tables',\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { created_on: createdOn },\n          },\n        }: any) => {\n          const date = new Date(createdOn);\n          const utc = new Date(\n            Date.UTC(\n              date.getFullYear(),\n              date.getMonth(),\n              date.getDate(),\n              date.getHours(),\n              date.getMinutes(),\n              date.getSeconds(),\n              date.getMilliseconds(),\n            ),\n          );\n\n          return moment(utc).fromNow();\n        },\n        Header: t('Created on'),\n        accessor: 'created_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { changed_on_delta_humanized: changedOn },\n          },\n        }: any) => changedOn,\n        Header: t('Modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList tags={tags.filter((tag: Tag) => tag.type === 1)} />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM),\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handlePreview = () => {\n            handleSavedQueryPreview(original.id);\n          };\n          const handleEdit = ({ metaKey }: React.MouseEvent) =>\n            openInSqlLab(original.id, Boolean(metaKey));\n          const handleCopy = () => copyQueryLink(original.id);\n          const handleExport = () => handleBulkSavedQueryExport([original]);\n          const handleDelete = () => setQueryCurrentlyDeleting(original);\n\n          const actions = [\n            {\n              label: 'preview-action',\n              tooltip: t('Query preview'),\n              placement: 'bottom',\n              icon: 'Binoculars',\n              onClick: handlePreview,\n            },\n            canEdit && {\n              label: 'edit-action',\n              tooltip: t('Edit query'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'copy-action',\n              tooltip: t('Copy query URL'),\n              placement: 'bottom',\n              icon: 'Copy',\n              onClick: handleCopy,\n            },\n            canExport && {\n              label: 'export-action',\n              tooltip: t('Export query'),\n              placement: 'bottom',\n              icon: 'Share',\n              onClick: handleExport,\n            },\n            canDelete && {\n              label: 'delete-action',\n              tooltip: t('Delete query'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n    ],\n    [canDelete, canEdit, canExport, copyQueryLink, handleSavedQueryPreview],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.relationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'saved_query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching dataset datasource values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        id: 'schema',\n        key: 'schema',\n        input: 'select',\n        operator: FilterOperator.equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'saved_query',\n          'schema',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n\n      {\n        Header: t('Search'),\n        id: 'label',\n        key: 'search',\n        input: 'search',\n        operator: FilterOperator.allText,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  if (isFeatureEnabled(FeatureFlag.TAGGING_SYSTEM) && canReadTag) {\n    filters.push({\n      Header: t('Tags'),\n      id: 'tags',\n      key: 'tags',\n      input: 'search',\n      operator: FilterOperator.savedQueryTags,\n    });\n  }\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete the saved query.',\n          )}\n          onConfirm={() => {\n            if (queryCurrentlyDeleting) {\n              handleQueryDelete(queryCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setQueryCurrentlyDeleting(null)}\n          open\n          title={t('Delete Query?')}\n        />\n      )}\n      {savedQueryCurrentlyPreviewing && (\n        <SavedQueryPreviewModal\n          fetchData={handleSavedQueryPreview}\n          onHide={() => setSavedQueryCurrentlyPreviewing(null)}\n          savedQuery={savedQueryCurrentlyPreviewing}\n          queries={queries}\n          openInSqlLab={openInSqlLab}\n          show\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected queries?')}\n        onConfirm={handleBulkQueryDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkSavedQueryExport,\n            });\n          }\n          return (\n            <ListView<SavedQueryObject>\n              className=\"saved_query-list-view\"\n              columns={columns}\n              count={queryCount}\n              data={queries}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              addSuccessToast={addSuccessToast}\n              addDangerToast={addDangerToast}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              highlightRowId={savedQueryCurrentlyPreviewing?.id}\n              enableBulkTag\n              bulkTagResourceName=\"query\"\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"saved_query\"\n        resourceLabel={t('queries')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleSavedQueryImport}\n        show={importingSavedQuery}\n        onHide={closeSavedQueryImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(SavedQueryList);\n"],"names":["HelperMessage","styled","div","_ref","theme","colors","grayscale","base","_ref2","typography","sizes","s","StyledInputContainer","_ref3","gridUnit","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","light1","_ref10","_ref11","_ref12","light2","_ref13","_ref14","_ref15","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","useState","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","length","___EmotionJSX","Modal","name","className","disablePrimaryButton","onHandledPrimaryAction","onUpload","_fileList$","originFileObj","File","then","result","hide","primaryButtonName","t","primaryButtonType","width","title","Upload","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","Button","loading","ErrorAlert","showDbInstallInstructions","renderPasswordFields","files","Set","React","map","fileName","indexOf","key","slice","autoComplete","type","value","event","target","_event$currentTarget$","_event$currentTarget","targetValue","currentTarget","toUpperCase","StyledActions","span","primary","ActionWrapper","ActionsBar","actions","action","index","ActionIcon","Icons","icon","tooltip","Tooltip","label","placement","role","tabIndex","onClick","StyledTag","AntdTag","onDelete","editable","toolTipTitle","tagDisplay","useMemo","closable","onClose","handleClose","color","href","rel","TagsDiv","tags","maxTags","tempMaxTags","setTempMaxTags","handleDelete","tagsIsLong","extraTags","tag","Tag","expand","undefined","join","collapse","commonMenuData","tabs","url","usesRouter","SyntaxHighlighter","registerLanguage","sqlSyntax","markdownSyntax","htmlSyntax","jsonSyntax","SyntaxHighlighterWrapper","SyntaxHighlighterCopy","addDangerToast","addSuccessToast","children","syntaxHighlighterProps","Copy","e","textToCopy","preventDefault","blur","copyTextToClipboard","Promise","resolve","catch","_extends","style","github","useQueryPreviewState","queries","fetchData","currentQueryId","findIndex","query","currentIndex","setCurrentIndex","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","handleDataChange","previous","handleKeyPress","ev","QueryTitle","secondary","QueryLabel","dark2","m","StyledModal","xs","weights","normal","l","withToasts","openInSqlLab","savedQuery","onKeyUp","footer","buttonStyle","metaKey","Boolean","language","sql","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","StyledTableLabel","StyledPopoverItem","resourceCount","queryCount","resourceCollection","bulkSelectEnabled","hasPerm","toggleBulkSelect","refreshData","useListViewResource","roles","useSelector","user","canReadTag","findPermission","queryCurrentlyDeleting","setQueryCurrentlyDeleting","savedQueryCurrentlyPreviewing","setSavedQueryCurrentlyPreviewing","importingSavedQuery","showImportModal","preparingExport","setPreparingExport","history","useHistory","canCreate","canEdit","canDelete","canExport","isFeatureEnabled","FeatureFlag","VERSIONED_EXPORT","handleSavedQueryPreview","useCallback","SupersetClient","get","endpoint","json","createErrorHandler","errMsg","menuData","activeChild","subMenuButtons","push","Link","to","Import","openSavedQueryImportModal","buttons","openInNewWindow","window","open","copyQueryLink","location","origin","handleBulkSavedQueryExport","savedQueriesToExport","ids","handleResourceExport","initialSort","desc","columns","accessor","Header","size","hidden","disableSortBy","Cell","row","original","sql_tables","tables","names","table","main","shift","Popover","trigger","content","created_on","createdOn","date","Date","utc","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","moment","fromNow","changed_on_delta_humanized","changedOn","TagsList","TAGGING_SYSTEM","handlePreview","handleCopy","handleExport","item","filters","input","operator","FilterOperator","relationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","paginate","equals","createFetchDistinct","allText","savedQueryTags","SubMenu","DeleteModal","description","onConfirm","handleQueryDelete","delete","SavedQueryPreviewModal","ConfirmStatusChange","queriesToDelete","rison","message","confirmDelete","bulkActions","onSelect","ListView","count","data","pageSize","disableBulkSelect","highlightRowId","enableBulkTag","bulkTagResourceName","ImportModelsModal","handleSavedQueryImport","closeSavedQueryImportModal","Loading"],"sourceRoot":""}